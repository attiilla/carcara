unsat
(assume a0 (forall ((?v0 Real)) (= (fun_app$ uu$ ?v0) (* 2.0 (fun_app$ x_coord$ (- 1.0 ?v0))))))
(assume a1 (forall ((?v0 Real)) (= (fun_app$ uuj$ ?v0) (* 1.0 ?v0))))
(assume a2 (forall ((?v0 Real)) (= (fun_app$ uum$ ?v0) (- ?v0))))
(assume a3 (forall ((?v0 Num1_bit0$) (?v1 Num1_bit0$)) (= (fun_app$a (uua$ ?v0) ?v1) (minus$ ?v1 ?v0))))
(assume a4 (forall ((?v0 Real) (?v1 Real)) (= (fun_app$ (uub$ ?v0) ?v1) (- ?v1 ?v0))))
(assume a5 (forall ((?v0 Real_set$) (?v1 Real)) (= (fun_app$b (uuf$ ?v0) ?v1) (member$ ?v1 ?v0))))
(assume a6 (forall ((?v0 Num_set$) (?v1 Num$)) (= (fun_app$c (uue$ ?v0) ?v1) (member$a ?v1 ?v0))))
(assume a7 (forall ((?v0 Nat_set$) (?v1 Nat$)) (= (fun_app$d (uud$ ?v0) ?v1) (member$b ?v1 ?v0))))
(assume a8 (forall ((?v0 Num1_bit0$)) (= (fun_app$a uui$ ?v0) ?v0)))
(assume a9 (forall ((?v0 Real)) (= (fun_app$ uuc$ ?v0) ?v0)))
(assume a10 (forall ((?v0 Real_set$)) (= (fun_app$e uuh$ ?v0) ?v0)))
(assume a11 (forall ((?v0 Nat_set$)) (= (fun_app$f uug$ ?v0) ?v0)))
(assume a12 (forall ((?v0 Nat$)) (= (fun_app$g uuk$ ?v0) ?v0)))
(assume a13 (forall ((?v0 Real)) (= (fun_app$b uul$ ?v0) true)))
(assume a14 (! (not (! (inj_on$ uu$ top$) :named @p_1)) :named @p_2))
(assume a15 (forall ((?v0 Num$)) (= (= (numeral$ ?v0) 1.0) (= ?v0 one$))))
(assume a16 (forall ((?v0 Num$)) (= (= (numeral$a ?v0) one$a) (= ?v0 one$))))
(assume a17 (forall ((?v0 Num$)) (= (= 1.0 (numeral$ ?v0)) (= one$ ?v0))))
(assume a18 (forall ((?v0 Num$)) (= (= one$a (numeral$a ?v0)) (= one$ ?v0))))
(assume a19 (forall ((?v0 Real) (?v1 Real) (?v2 Num$)) (= (fun_app$ (times$ (- ?v0 ?v1)) (numeral$ ?v2)) (- (fun_app$ (times$ ?v0) (numeral$ ?v2)) (fun_app$ (times$ ?v1) (numeral$ ?v2))))))
(assume a20 (forall ((?v0 Num1_bit0$) (?v1 Num1_bit0$) (?v2 Num$)) (= (fun_app$a (times$a (minus$ ?v0 ?v1)) (numeral$b ?v2)) (minus$ (fun_app$a (times$a ?v0) (numeral$b ?v2)) (fun_app$a (times$a ?v1) (numeral$b ?v2))))))
(assume a21 (forall ((?v0 Num$) (?v1 Real) (?v2 Real)) (= (fun_app$ (times$ (numeral$ ?v0)) (- ?v1 ?v2)) (- (fun_app$ (times$ (numeral$ ?v0)) ?v1) (fun_app$ (times$ (numeral$ ?v0)) ?v2)))))
(assume a22 (forall ((?v0 Num$) (?v1 Num1_bit0$) (?v2 Num1_bit0$)) (= (fun_app$a (times$a (numeral$b ?v0)) (minus$ ?v1 ?v2)) (minus$ (fun_app$a (times$a (numeral$b ?v0)) ?v1) (fun_app$a (times$a (numeral$b ?v0)) ?v2)))))
(assume a23 (forall ((?v0 Num$)) (= (= (bit0$ ?v0) one$) false)))
(assume a24 (forall ((?v0 Num$)) (= (= one$ (bit0$ ?v0)) false)))
(assume a25 (forall ((?v0 Num$) (?v1 Num$) (?v2 Real)) (= (fun_app$ (times$ (numeral$ ?v0)) (fun_app$ (times$ (numeral$ ?v1)) ?v2)) (fun_app$ (times$ (numeral$ (fun_app$h (times$b ?v0) ?v1))) ?v2))))
(assume a26 (forall ((?v0 Num$) (?v1 Num$) (?v2 Nat$)) (= (fun_app$g (times$c (numeral$a ?v0)) (fun_app$g (times$c (numeral$a ?v1)) ?v2)) (fun_app$g (times$c (numeral$a (fun_app$h (times$b ?v0) ?v1))) ?v2))))
(assume a27 (forall ((?v0 Num$) (?v1 Num$) (?v2 Num1_bit0$)) (= (fun_app$a (times$a (numeral$b ?v0)) (fun_app$a (times$a (numeral$b ?v1)) ?v2)) (fun_app$a (times$a (numeral$b (fun_app$h (times$b ?v0) ?v1))) ?v2))))
(assume a28 (forall ((?v0 Num$) (?v1 Num$)) (= (fun_app$ (times$ (numeral$ ?v0)) (numeral$ ?v1)) (numeral$ (fun_app$h (times$b ?v0) ?v1)))))
(assume a29 (forall ((?v0 Num$) (?v1 Num$)) (= (fun_app$g (times$c (numeral$a ?v0)) (numeral$a ?v1)) (numeral$a (fun_app$h (times$b ?v0) ?v1)))))
(assume a30 (forall ((?v0 Num$) (?v1 Num$)) (= (fun_app$a (times$a (numeral$b ?v0)) (numeral$b ?v1)) (numeral$b (fun_app$h (times$b ?v0) ?v1)))))
(assume a31 (forall ((?v0 Nat_set$)) (= (fun_app$f (times$d one$b) ?v0) ?v0)))
(assume a32 (forall ((?v0 Real_set$)) (= (fun_app$e (times$e one$c) ?v0) ?v0)))
(assume a33 (forall ((?v0 Num1_bit0$)) (= (fun_app$a (times$a one$d) ?v0) ?v0)))
(assume a34 (forall ((?v0 Real)) (= (* 1.0 ?v0) ?v0)))
(assume a35 (forall ((?v0 Nat$)) (= (fun_app$g (times$c one$a) ?v0) ?v0)))
(assume a36 (forall ((?v0 Nat_set$)) (= (fun_app$f (times$d ?v0) one$b) ?v0)))
(assume a37 (forall ((?v0 Real_set$)) (= (fun_app$e (times$e ?v0) one$c) ?v0)))
(assume a38 (forall ((?v0 Num1_bit0$)) (= (fun_app$a (times$a ?v0) one$d) ?v0)))
(assume a39 (forall ((?v0 Real)) (= (* ?v0 1.0) ?v0)))
(assume a40 (forall ((?v0 Nat$)) (= (fun_app$g (times$c ?v0) one$a) ?v0)))
(assume a42 (forall ((?v0 Num1_bit0$)) (inj_on$a (uua$ ?v0) top$a)))
(assume a43 (forall ((?v0 Real)) (inj_on$ (uub$ ?v0) top$)))
(assume a44 (forall ((?v0 Num$) (?v1 Num$)) (= (= (numeral$ ?v0) (numeral$ ?v1)) (= ?v0 ?v1))))
(assume a45 (forall ((?v0 Num$) (?v1 Num$)) (= (= (numeral$a ?v0) (numeral$a ?v1)) (= ?v0 ?v1))))
(assume a46 (forall ((?v0 Num$) (?v1 Num$)) (= (= (bit0$ ?v0) (bit0$ ?v1)) (= ?v0 ?v1))))
(assume a48 (forall ((?v0 Num$) (?v1 Num$)) (= (fun_app$h (times$b (bit0$ ?v0)) (bit0$ ?v1)) (bit0$ (bit0$ (fun_app$h (times$b ?v0) ?v1))))))
(assume a49 (forall ((?v0 Num$)) (= (fun_app$h (times$b ?v0) one$) ?v0)))
(assume a50 (forall ((?v0 Num$)) (= (fun_app$h (times$b one$) ?v0) ?v0)))
(assume a51 (forall ((?v0 Num$)) (= (fun_app$h (times$b (bit0$ one$)) ?v0) (bit0$ ?v0))))
(assume a52 (= (numeral$a one$) one$a))
(assume a53 (forall ((?v0 Real_real_fun$) (?v1 Real_set$) (?v2 Real_set$)) (=> (inj_on$ ?v0 ?v1) (inj_on$ ?v0 (minus$a ?v1 ?v2)))))
(assume a54 (forall ((?v0 Num1_bit0$)) (or (= ?v0 one$d) (= ?v0 (numeral$b (bit0$ one$))))))
(assume a55 (forall ((?v0 Num1_bit0_bool_fun$)) (= (forall ((?v1 Num1_bit0$)) (fun_app$i ?v0 ?v1)) (and (fun_app$i ?v0 one$d) (fun_app$i ?v0 (numeral$b (bit0$ one$)))))))
(assume a56 (forall ((?v0 Real) (?v1 Real) (?v2 Real)) (= (fun_app$ (times$ ?v0) (fun_app$ (times$ ?v1) ?v2)) (fun_app$ (times$ ?v1) (fun_app$ (times$ ?v0) ?v2)))))
(assume a57 (forall ((?v0 Real) (?v1 Real) (?v2 Real)) (= (fun_app$ (times$ ?v0) (fun_app$ (times$ ?v1) ?v2)) (fun_app$ (times$ (fun_app$ (times$ ?v0) ?v1)) ?v2))))
(assume a58 (forall ((?v0 Num1_bit0$) (?v1 Num1_bit0$) (?v2 Num1_bit0$)) (= (fun_app$a (times$a ?v0) (fun_app$a (times$a ?v1) ?v2)) (fun_app$a (times$a ?v1) (fun_app$a (times$a ?v0) ?v2)))))
(assume a59 (forall ((?v0 Nat_set$) (?v1 Nat_set$) (?v2 Nat_set$)) (= (fun_app$f (times$d ?v0) (fun_app$f (times$d ?v1) ?v2)) (fun_app$f (times$d ?v1) (fun_app$f (times$d ?v0) ?v2)))))
(assume a60 (forall ((?v0 Real_set$) (?v1 Real_set$) (?v2 Real_set$)) (= (fun_app$e (times$e ?v0) (fun_app$e (times$e ?v1) ?v2)) (fun_app$e (times$e ?v1) (fun_app$e (times$e ?v0) ?v2)))))
(assume a62 (forall ((?v0 Nat$) (?v1 Nat$) (?v2 Nat$)) (= (fun_app$g (times$c ?v0) (fun_app$g (times$c ?v1) ?v2)) (fun_app$g (times$c ?v1) (fun_app$g (times$c ?v0) ?v2)))))
(assume a63 (forall ((?v0 Num1_bit0$) (?v1 Num1_bit0$)) (= (fun_app$a (times$a ?v0) ?v1) (fun_app$a (times$a ?v1) ?v0))))
(assume a64 (forall ((?v0 Nat_set$) (?v1 Nat_set$)) (= (fun_app$f (times$d ?v0) ?v1) (fun_app$f (times$d ?v1) ?v0))))
(assume a65 (forall ((?v0 Real_set$) (?v1 Real_set$)) (= (fun_app$e (times$e ?v0) ?v1) (fun_app$e (times$e ?v1) ?v0))))
(assume a66 (forall ((?v0 Real) (?v1 Real)) (= (fun_app$ (times$ ?v0) ?v1) (fun_app$ (times$ ?v1) ?v0))))
(assume a67 (forall ((?v0 Nat$) (?v1 Nat$)) (= (fun_app$g (times$c ?v0) ?v1) (fun_app$g (times$c ?v1) ?v0))))
(assume a68 (forall ((?v0 Num1_bit0$) (?v1 Num1_bit0$) (?v2 Num1_bit0$)) (= (fun_app$a (times$a (fun_app$a (times$a ?v0) ?v1)) ?v2) (fun_app$a (times$a ?v0) (fun_app$a (times$a ?v1) ?v2)))))
(assume a69 (forall ((?v0 Nat_set$) (?v1 Nat_set$) (?v2 Nat_set$)) (= (fun_app$f (times$d (fun_app$f (times$d ?v0) ?v1)) ?v2) (fun_app$f (times$d ?v0) (fun_app$f (times$d ?v1) ?v2)))))
(assume a70 (forall ((?v0 Real_set$) (?v1 Real_set$) (?v2 Real_set$)) (= (fun_app$e (times$e (fun_app$e (times$e ?v0) ?v1)) ?v2) (fun_app$e (times$e ?v0) (fun_app$e (times$e ?v1) ?v2)))))
(assume a71 (forall ((?v0 Real) (?v1 Real) (?v2 Real)) (= (fun_app$ (times$ (fun_app$ (times$ ?v0) ?v1)) ?v2) (fun_app$ (times$ ?v0) (fun_app$ (times$ ?v1) ?v2)))))
(assume a72 (forall ((?v0 Nat$) (?v1 Nat$) (?v2 Nat$)) (= (fun_app$g (times$c (fun_app$g (times$c ?v0) ?v1)) ?v2) (fun_app$g (times$c ?v0) (fun_app$g (times$c ?v1) ?v2)))))
(assume a78 (forall ((?v0 Real)) (= (= 1.0 ?v0) (= ?v0 1.0))))
(assume a79 (forall ((?v0 Nat$)) (= (= one$a ?v0) (= ?v0 one$a))))
(assume a80 (forall ((?v0 Num1_bit0$)) (= (= one$d ?v0) (= ?v0 one$d))))
(assume a81 (forall ((?v0 Num1_bit0$) (?v1 Num1_bit0$) (?v2 Num1_bit0$)) (= (minus$ (minus$ ?v0 ?v1) ?v2) (minus$ (minus$ ?v0 ?v2) ?v1))))
(assume a82 (forall ((?v0 Real) (?v1 Real) (?v2 Real)) (= (- (- ?v0 ?v1) ?v2) (- (- ?v0 ?v2) ?v1))))
(assume a83 (forall ((?v0 Nat$) (?v1 Nat$) (?v2 Nat$)) (= (minus$b (minus$b ?v0 ?v1) ?v2) (minus$b (minus$b ?v0 ?v2) ?v1))))
(assume a84 (forall ((?v0 Num1_bit0$) (?v1 Num1_bit0$) (?v2 Num1_bit0$) (?v3 Num1_bit0$)) (=> (= (minus$ ?v0 ?v1) (minus$ ?v2 ?v3)) (= (= ?v0 ?v1) (= ?v2 ?v3)))))
(assume a85 (forall ((?v0 Real) (?v1 Real) (?v2 Real) (?v3 Real)) (=> (= (- ?v0 ?v1) (- ?v2 ?v3)) (= (= ?v0 ?v1) (= ?v2 ?v3)))))
(assume a86 (= (= one$ one$) true))
(assume a87 (forall ((?v0 Real_set$) (?v1 Real_real_fun$) (?v2 Real_real_fun$)) (=> (forall ((?v3 Real)) (=> (member$ ?v3 ?v0) (= (fun_app$ ?v1 (fun_app$ ?v2 ?v3)) ?v3))) (inj_on$ ?v2 ?v0))))
(assume a88 (forall ((?v0 Real_real_fun$) (?v1 Real_set$) (?v2 Real) (?v3 Real)) (=> (and (inj_on$ ?v0 ?v1) (and (not (= ?v2 ?v3)) (and (member$ ?v2 ?v1) (member$ ?v3 ?v1)))) (not (= (fun_app$ ?v0 ?v2) (fun_app$ ?v0 ?v3))))))
(assume a89 (forall ((?v0 Real_real_fun$) (?v1 Real_set$) (?v2 Real) (?v3 Real)) (=> (and (inj_on$ ?v0 ?v1) (and (member$ ?v2 ?v1) (member$ ?v3 ?v1))) (= (= (fun_app$ ?v0 ?v2) (fun_app$ ?v0 ?v3)) (= ?v2 ?v3)))))
(assume a90 (forall ((?v0 Real_set$) (?v1 Real_real_fun$) (?v2 Real_real_fun$)) (=> (forall ((?v3 Real)) (=> (member$ ?v3 ?v0) (= (fun_app$ ?v1 ?v3) (fun_app$ ?v2 ?v3)))) (= (inj_on$ ?v1 ?v0) (inj_on$ ?v2 ?v0)))))
(assume a91 (forall ((?v0 Real_real_fun$) (?v1 Real_set$)) (= (inj_on$ ?v0 ?v1) (forall ((?v2 Real)) (=> (member$ ?v2 ?v1) (forall ((?v3 Real)) (=> (and (member$ ?v3 ?v1) (= (fun_app$ ?v0 ?v2) (fun_app$ ?v0 ?v3))) (= ?v2 ?v3))))))))
(assume a92 (forall ((?v0 Real_set$) (?v1 Real_real_fun$)) (=> (forall ((?v2 Real) (?v3 Real)) (=> (and (member$ ?v2 ?v0) (and (member$ ?v3 ?v0) (= (fun_app$ ?v1 ?v2) (fun_app$ ?v1 ?v3)))) (= ?v2 ?v3))) (inj_on$ ?v1 ?v0))))
(assume a93 (forall ((?v0 Real_real_fun$) (?v1 Real_set$) (?v2 Real) (?v3 Real)) (=> (and (inj_on$ ?v0 ?v1) (and (= (fun_app$ ?v0 ?v2) (fun_app$ ?v0 ?v3)) (and (member$ ?v2 ?v1) (member$ ?v3 ?v1)))) (= ?v2 ?v3))))
(assume a94 (forall ((?v0 Real_set$)) (inj_on$ uuc$ ?v0)))
(assume a105 (forall ((?v0 Nat$) (?v1 Nat_bool_fun$)) (= (member$b ?v0 (collect$ ?v1)) (fun_app$d ?v1 ?v0))))
(assume a106 (forall ((?v0 Num$) (?v1 Num_bool_fun$)) (= (member$a ?v0 (collect$a ?v1)) (fun_app$c ?v1 ?v0))))
(assume a107 (forall ((?v0 Real) (?v1 Real_bool_fun$)) (= (member$ ?v0 (collect$b ?v1)) (fun_app$b ?v1 ?v0))))
(assume a108 (forall ((?v0 Nat_set$)) (= (collect$ (uud$ ?v0)) ?v0)))
(assume a109 (forall ((?v0 Num_set$)) (= (collect$a (uue$ ?v0)) ?v0)))
(assume a110 (forall ((?v0 Real_set$)) (= (collect$b (uuf$ ?v0)) ?v0)))
(assume a111 (forall ((?v0 Real_bool_fun$) (?v1 Real_bool_fun$)) (=> (forall ((?v2 Real)) (= (fun_app$b ?v0 ?v2) (fun_app$b ?v1 ?v2))) (= (collect$b ?v0) (collect$b ?v1)))))
(assume a112 (forall ((?v0 Real) (?v1 Real) (?v2 Real)) (= (fun_app$ (times$ ?v0) (- ?v1 ?v2)) (- (fun_app$ (times$ ?v0) ?v1) (fun_app$ (times$ ?v0) ?v2)))))
(assume a113 (forall ((?v0 Real) (?v1 Real) (?v2 Real)) (= (fun_app$ (times$ (- ?v0 ?v1)) ?v2) (- (fun_app$ (times$ ?v0) ?v2) (fun_app$ (times$ ?v1) ?v2)))))
(assume a114 (forall ((?v0 Real_real_fun$)) (= (inj_on$ ?v0 top$) (forall ((?v1 Real) (?v2 Real)) (=> (= (fun_app$ ?v0 ?v1) (fun_app$ ?v0 ?v2)) (= ?v1 ?v2))))))
(assume a115 (forall ((?v0 Real_real_fun$) (?v1 Real) (?v2 Real)) (=> (inj_on$ ?v0 top$) (= (= (fun_app$ ?v0 ?v1) (fun_app$ ?v0 ?v2)) (= ?v1 ?v2)))))
(assume a116 (forall ((?v0 Real_real_fun$)) (=> (forall ((?v1 Real) (?v2 Real)) (=> (= (fun_app$ ?v0 ?v1) (fun_app$ ?v0 ?v2)) (= ?v1 ?v2))) (inj_on$ ?v0 top$))))
(assume a117 (forall ((?v0 Real_real_fun$) (?v1 Real) (?v2 Real)) (=> (and (inj_on$ ?v0 top$) (= (fun_app$ ?v0 ?v1) (fun_app$ ?v0 ?v2))) (= ?v1 ?v2))))
(assume a119 (forall ((?v0 Nat$)) (= (fun_app$g (times$c ?v0) (numeral$a one$)) ?v0)))
(assume a120 (forall ((?v0 Num1_bit0$)) (= (fun_app$a (times$a ?v0) (numeral$b one$)) ?v0)))
(assume a122 (forall ((?v0 Nat$)) (= (fun_app$g (times$c (numeral$a one$)) ?v0) ?v0)))
(assume a123 (forall ((?v0 Num1_bit0$)) (= (fun_app$a (times$a (numeral$b one$)) ?v0) ?v0)))
(assume a124 (! (= 1.0 1.0) :named @p_3))
(assume a126 (= (! (numeral$b one$) :named @p_4) one$d))
(assume a127 (= (fun_app$ dbl$ 1.0) 2.0))
(assume a128 (= (dbl$a one$d) (! (numeral$b (! (bit0$ one$) :named @p_5)) :named @p_6)))
(assume a129 (forall ((?v0 Real)) (= (fun_app$ x_coord$ (fun_app$ x_coord_inv$ ?v0)) ?v0)))
(assume a130 (forall ((?v0 Real)) (= (fun_app$ x_coord_inv$ (fun_app$ x_coord$ ?v0)) ?v0)))
(assume a131 (forall ((?v0 Nat$)) (= (member$b ?v0 top$b) true)))
(assume a132 (forall ((?v0 Num$)) (= (member$a ?v0 top$c) true)))
(assume a133 (forall ((?v0 Real)) (= (member$ ?v0 top$) true)))
(assume a134 (forall ((?v0 Nat$)) (member$b ?v0 top$b)))
(assume a135 (forall ((?v0 Num$)) (member$a ?v0 top$c)))
(assume a136 (forall ((?v0 Real)) (member$ ?v0 top$)))
(assume a137 (forall ((?v0 Real)) (= (fun_app$b top$d ?v0) top$e)))
(assume a138 (forall ((?v0 Num1_bit0$) (?v1 Num1_bit0_set$) (?v2 Num1_bit0$) (?v3 Num1_bit0_set$)) (=> (and (member$c ?v0 ?v1) (member$c ?v2 ?v3)) (member$c (fun_app$a (times$a ?v0) ?v2) (times$f ?v1 ?v3)))))
(assume a139 (forall ((?v0 Nat_set$) (?v1 Nat_set_set$) (?v2 Nat_set$) (?v3 Nat_set_set$)) (=> (and (member$d ?v0 ?v1) (member$d ?v2 ?v3)) (member$d (fun_app$f (times$d ?v0) ?v2) (times$g ?v1 ?v3)))))
(assume a140 (forall ((?v0 Num_set$) (?v1 Num_set_set$) (?v2 Num_set$) (?v3 Num_set_set$)) (=> (and (member$e ?v0 ?v1) (member$e ?v2 ?v3)) (member$e (times$h ?v0 ?v2) (times$i ?v1 ?v3)))))
(assume a141 (forall ((?v0 Real_set$) (?v1 Real_set_set$) (?v2 Real_set$) (?v3 Real_set_set$)) (=> (and (member$f ?v0 ?v1) (member$f ?v2 ?v3)) (member$f (fun_app$e (times$e ?v0) ?v2) (times$j ?v1 ?v3)))))
(assume a142 (forall ((?v0 Real) (?v1 Real_set$) (?v2 Real) (?v3 Real_set$)) (=> (and (member$ ?v0 ?v1) (member$ ?v2 ?v3)) (member$ (fun_app$ (times$ ?v0) ?v2) (fun_app$e (times$e ?v1) ?v3)))))
(assume a143 (forall ((?v0 Num$) (?v1 Num_set$) (?v2 Num$) (?v3 Num_set$)) (=> (and (member$a ?v0 ?v1) (member$a ?v2 ?v3)) (member$a (fun_app$h (times$b ?v0) ?v2) (times$h ?v1 ?v3)))))
(assume a144 (forall ((?v0 Nat$) (?v1 Nat_set$) (?v2 Nat$) (?v3 Nat_set$)) (=> (and (member$b ?v0 ?v1) (member$b ?v2 ?v3)) (member$b (fun_app$g (times$c ?v0) ?v2) (fun_app$f (times$d ?v1) ?v3)))))
(assume a145 (= uug$ (times$d one$b)))
(assume a146 (= uuh$ (times$e one$c)))
(assume a147 (= uui$ (times$a one$d)))
(assume a148 (= uuc$ uuj$))
(assume a149 (= uuk$ (times$c one$a)))
(assume a150 (forall ((?v0 Num$)) (not (= one$ (bit0$ ?v0)))))
(assume a151 (forall ((?v0 Nat$) (?v1 Nat_set$) (?v2 Nat_set$)) (=> (and (member$b ?v0 ?v1) (not (member$b ?v0 ?v2))) (member$b ?v0 (minus$c ?v1 ?v2)))))
(assume a152 (forall ((?v0 Num$) (?v1 Num_set$) (?v2 Num_set$)) (=> (and (member$a ?v0 ?v1) (not (member$a ?v0 ?v2))) (member$a ?v0 (minus$d ?v1 ?v2)))))
(assume a153 (forall ((?v0 Real) (?v1 Real_set$) (?v2 Real_set$)) (=> (and (member$ ?v0 ?v1) (not (member$ ?v0 ?v2))) (member$ ?v0 (minus$a ?v1 ?v2)))))
(assume a154 (forall ((?v0 Nat$) (?v1 Nat_set$) (?v2 Nat_set$)) (= (member$b ?v0 (minus$c ?v1 ?v2)) (and (member$b ?v0 ?v1) (not (member$b ?v0 ?v2))))))
(assume a155 (forall ((?v0 Num$) (?v1 Num_set$) (?v2 Num_set$)) (= (member$a ?v0 (minus$d ?v1 ?v2)) (and (member$a ?v0 ?v1) (not (member$a ?v0 ?v2))))))
(assume a156 (forall ((?v0 Real) (?v1 Real_set$) (?v2 Real_set$)) (= (member$ ?v0 (minus$a ?v1 ?v2)) (and (member$ ?v0 ?v1) (not (member$ ?v0 ?v2))))))
(assume a157 (forall ((?v0 Real_set$) (?v1 Real_set$)) (= (minus$a (minus$a ?v0 ?v1) ?v1) (minus$a ?v0 ?v1))))
(assume a158 (forall ((?v0 Num$)) (= (fun_app$ dbl$ (numeral$ ?v0)) (numeral$ (bit0$ ?v0)))))
(assume a159 (forall ((?v0 Num$)) (= (dbl$a (numeral$b ?v0)) (numeral$b (bit0$ ?v0)))))
(assume a160 (! (= top$ (! (collect$b top$d) :named @p_7)) :named @p_8))
(assume a161 (forall ((?v0 Real) (?v1 Real_set$) (?v2 Real_set$)) (=> (and (member$ ?v0 (fun_app$e (times$e ?v1) ?v2)) (forall ((?v3 Real) (?v4 Real)) (=> (and (= ?v0 (fun_app$ (times$ ?v3) ?v4)) (and (member$ ?v3 ?v1) (member$ ?v4 ?v2))) false))) false)))
(assume a162 (forall ((?v0 Num$) (?v1 Num_set$) (?v2 Num_set$)) (=> (and (member$a ?v0 (times$h ?v1 ?v2)) (forall ((?v3 Num$) (?v4 Num$)) (=> (and (= ?v0 (fun_app$h (times$b ?v3) ?v4)) (and (member$a ?v3 ?v1) (member$a ?v4 ?v2))) false))) false)))
(assume a163 (forall ((?v0 Nat$) (?v1 Nat_set$) (?v2 Nat_set$)) (=> (and (member$b ?v0 (fun_app$f (times$d ?v1) ?v2)) (forall ((?v3 Nat$) (?v4 Nat$)) (=> (and (= ?v0 (fun_app$g (times$c ?v3) ?v4)) (and (member$b ?v3 ?v1) (member$b ?v4 ?v2))) false))) false)))
(assume a164 (forall ((?v0 Real_set$)) (=> (forall ((?v1 Real)) (member$ ?v1 ?v0)) (= top$ ?v0))))
(assume a165 (exists ((?v0 Real)) (member$ ?v0 top$)))
(assume a166 (= top$ (collect$b uul$)))
(assume a170 (forall ((?v0 Nat$) (?v1 Nat$) (?v2 Nat$)) (= (fun_app$g (times$c (minus$b ?v0 ?v1)) ?v2) (minus$b (fun_app$g (times$c ?v0) ?v2) (fun_app$g (times$c ?v1) ?v2)))))
(assume a172 (forall ((?v0 Nat$) (?v1 Nat$) (?v2 Nat$)) (= (fun_app$g (times$c ?v0) (minus$b ?v1 ?v2)) (minus$b (fun_app$g (times$c ?v0) ?v1) (fun_app$g (times$c ?v0) ?v2)))))
(assume a173 (forall ((?v0 Nat$) (?v1 Nat$)) (= (= one$a (fun_app$g (times$c ?v0) ?v1)) (and (= ?v0 one$a) (= ?v1 one$a)))))
(assume a174 (forall ((?v0 Nat$) (?v1 Nat$)) (= (= (fun_app$g (times$c ?v0) ?v1) one$a) (and (= ?v0 one$a) (= ?v1 one$a)))))
(assume a175 (forall ((?v0 Real_bool_fun$) (?v1 Real) (?v2 Real_bool_fun$)) (=> (and (forall ((?v3 Real) (?v4 Real)) (= (fun_app$b ?v0 ?v3) (fun_app$b ?v0 (- ?v3 (fun_app$ (times$ ?v4) ?v1))))) (forall ((?v3 Real) (?v4 Real)) (= (fun_app$b ?v2 ?v3) (fun_app$b ?v2 (- ?v3 (fun_app$ (times$ ?v4) ?v1)))))) (forall ((?v3 Real) (?v4 Real)) (= (or (fun_app$b ?v0 ?v3) (fun_app$b ?v2 ?v3)) (or (fun_app$b ?v0 (- ?v3 (fun_app$ (times$ ?v4) ?v1))) (fun_app$b ?v2 (- ?v3 (fun_app$ (times$ ?v4) ?v1)))))))))
(assume a176 (forall ((?v0 Real_bool_fun$) (?v1 Real) (?v2 Real_bool_fun$)) (=> (and (forall ((?v3 Real) (?v4 Real)) (= (fun_app$b ?v0 ?v3) (fun_app$b ?v0 (- ?v3 (fun_app$ (times$ ?v4) ?v1))))) (forall ((?v3 Real) (?v4 Real)) (= (fun_app$b ?v2 ?v3) (fun_app$b ?v2 (- ?v3 (fun_app$ (times$ ?v4) ?v1)))))) (forall ((?v3 Real) (?v4 Real)) (= (and (fun_app$b ?v0 ?v3) (fun_app$b ?v2 ?v3)) (and (fun_app$b ?v0 (- ?v3 (fun_app$ (times$ ?v4) ?v1))) (fun_app$b ?v2 (- ?v3 (fun_app$ (times$ ?v4) ?v1)))))))))
(assume a177 (= (fun_app$ dbl$ (! (- 1.0) :named @p_10)) (! (- 2.0) :named @p_9)))
(assume a178 (= (dbl$a (! (uminus$ one$d) :named @p_12)) (! (uminus$ @p_6) :named @p_11)))
(assume a179 (= (- 1.0 @p_10) 2.0))
(assume a180 (= (minus$ one$d @p_12) @p_6))
(assume a181 (forall ((?v0 Real) (?v1 Real)) (= (fun_app$ (times$ ?v0) (- ?v1)) (- (fun_app$ (times$ ?v0) ?v1)))))
(assume a182 (forall ((?v0 Real) (?v1 Real)) (= (fun_app$ (times$ (- ?v0)) ?v1) (- (fun_app$ (times$ ?v0) ?v1)))))
(assume a184 (forall ((?v0 Real) (?v1 Real)) (= (fun_app$ (times$ (- ?v0)) (- ?v1)) (fun_app$ (times$ ?v0) ?v1))))
(assume a186 (forall ((?v0 Real) (?v1 Real)) (= (- (- ?v0 ?v1)) (- ?v1 ?v0))))
(assume a187 (forall ((?v0 Num$) (?v1 Num$)) (= (= (- (numeral$ ?v0)) (- (numeral$ ?v1))) (= ?v0 ?v1))))
(assume a188 (forall ((?v0 Real_set$)) (inj_on$ uum$ ?v0)))
(assume a189 (forall ((?v0 Num1_bit0$)) (= (fun_app$a (times$a ?v0) (uminus$ one$d)) (uminus$ ?v0))))
(assume a190 (forall ((?v0 Real)) (= (* ?v0 (- 1.0)) (- ?v0))))
(assume a191 (forall ((?v0 Num1_bit0$)) (= (fun_app$a (times$a (uminus$ one$d)) ?v0) (uminus$ ?v0))))
(assume a192 (forall ((?v0 Real)) (= (* (- 1.0) ?v0) (- ?v0))))
(assume a193 (forall ((?v0 Num$)) (= (fun_app$ dbl$ (- (numeral$ ?v0))) (- (fun_app$ dbl$ (numeral$ ?v0))))))
(assume a194 (forall ((?v0 Num$)) (= (dbl$a (uminus$ (numeral$b ?v0))) (uminus$ (dbl$a (numeral$b ?v0))))))
(assume a195 (forall ((?v0 Num$)) (= (= (- (numeral$ ?v0)) (- 1.0)) (= ?v0 one$))))
(assume a196 (forall ((?v0 Num$)) (= (= (- 1.0) (- (numeral$ ?v0))) (= ?v0 one$))))
(assume a197 (forall ((?v0 Num$) (?v1 Num$)) (= (fun_app$ (times$ (- (numeral$ ?v0))) (- (numeral$ ?v1))) (numeral$ (fun_app$h (times$b ?v0) ?v1)))))
(assume a198 (forall ((?v0 Num$) (?v1 Num$)) (= (fun_app$a (times$a (uminus$ (numeral$b ?v0))) (uminus$ (numeral$b ?v1))) (numeral$b (fun_app$h (times$b ?v0) ?v1)))))
(assume a199 (forall ((?v0 Num$) (?v1 Num$)) (= (fun_app$ (times$ (- (numeral$ ?v0))) (numeral$ ?v1)) (- (numeral$ (fun_app$h (times$b ?v0) ?v1))))))
(assume a200 (forall ((?v0 Num$) (?v1 Num$)) (= (fun_app$a (times$a (uminus$ (numeral$b ?v0))) (numeral$b ?v1)) (uminus$ (numeral$b (fun_app$h (times$b ?v0) ?v1))))))
(assume a201 (forall ((?v0 Num$) (?v1 Num$)) (= (fun_app$ (times$ (numeral$ ?v0)) (- (numeral$ ?v1))) (- (numeral$ (fun_app$h (times$b ?v0) ?v1))))))
(assume a202 (forall ((?v0 Num$) (?v1 Num$)) (= (fun_app$a (times$a (numeral$b ?v0)) (uminus$ (numeral$b ?v1))) (uminus$ (numeral$b (fun_app$h (times$b ?v0) ?v1))))))
(assume a203 (forall ((?v0 Num$) (?v1 Num$) (?v2 Real)) (= (fun_app$ (times$ (- (numeral$ ?v0))) (fun_app$ (times$ (numeral$ ?v1)) ?v2)) (fun_app$ (times$ (- (numeral$ (fun_app$h (times$b ?v0) ?v1)))) ?v2))))
(assume a204 (forall ((?v0 Num$) (?v1 Num$) (?v2 Num1_bit0$)) (= (fun_app$a (times$a (uminus$ (numeral$b ?v0))) (fun_app$a (times$a (numeral$b ?v1)) ?v2)) (fun_app$a (times$a (uminus$ (numeral$b (fun_app$h (times$b ?v0) ?v1)))) ?v2))))
(assume a205 (forall ((?v0 Num$) (?v1 Num$) (?v2 Real)) (= (fun_app$ (times$ (numeral$ ?v0)) (fun_app$ (times$ (- (numeral$ ?v1))) ?v2)) (fun_app$ (times$ (- (numeral$ (fun_app$h (times$b ?v0) ?v1)))) ?v2))))
(assume a206 (forall ((?v0 Num$) (?v1 Num$) (?v2 Num1_bit0$)) (= (fun_app$a (times$a (numeral$b ?v0)) (fun_app$a (times$a (uminus$ (numeral$b ?v1))) ?v2)) (fun_app$a (times$a (uminus$ (numeral$b (fun_app$h (times$b ?v0) ?v1)))) ?v2))))
(assume a207 (forall ((?v0 Num$) (?v1 Num$) (?v2 Real)) (= (fun_app$ (times$ (- (numeral$ ?v0))) (fun_app$ (times$ (- (numeral$ ?v1))) ?v2)) (fun_app$ (times$ (numeral$ (fun_app$h (times$b ?v0) ?v1))) ?v2))))
(assume a208 (forall ((?v0 Num$) (?v1 Num$) (?v2 Num1_bit0$)) (= (fun_app$a (times$a (uminus$ (numeral$b ?v0))) (fun_app$a (times$a (uminus$ (numeral$b ?v1))) ?v2)) (fun_app$a (times$a (numeral$b (fun_app$h (times$b ?v0) ?v1))) ?v2))))
(assume a209 (= (- @p_10 1.0) @p_9))
(assume a210 (= (minus$ @p_12 one$d) @p_11))
(assume a213 (forall ((?v0 Real) (?v1 Real)) (= (fun_app$ (times$ (- ?v0)) ?v1) (fun_app$ (times$ ?v0) (- ?v1)))))
(assume a214 (forall ((?v0 Real) (?v1 Real)) (= (= (fun_app$ (times$ ?v0) ?v0) (fun_app$ (times$ ?v1) ?v1)) (or (= ?v0 ?v1) (= ?v0 (- ?v1))))))
(assume a215 (not (= 1.0 @p_10)))
(assume a216 (forall ((?v0 Real) (?v1 Real)) (= (- (- ?v0) ?v1) (- (- ?v1) ?v0))))
(assume a217 (forall ((?v0 Num$) (?v1 Num$)) (not (= (numeral$ ?v0) (- (numeral$ ?v1))))))
(assume a218 (forall ((?v0 Num$) (?v1 Num$)) (not (= (- (numeral$ ?v0)) (numeral$ ?v1)))))
(assume a219 (forall ((?v0 Real)) (= (= (fun_app$ (times$ ?v0) ?v0) 1.0) (or (= ?v0 1.0) (= ?v0 (- 1.0))))))
(assume a220 (forall ((?v0 Num$) (?v1 Real)) (= (fun_app$ (times$ (numeral$ ?v0)) (- ?v1)) (fun_app$ (times$ ?v1) (- (numeral$ ?v0))))))
(assume a221 (forall ((?v0 Num$) (?v1 Num1_bit0$)) (= (fun_app$a (times$a (numeral$b ?v0)) (uminus$ ?v1)) (fun_app$a (times$a ?v1) (uminus$ (numeral$b ?v0))))))
(assume a222 (forall ((?v0 Num$)) (not (= 1.0 (- (numeral$ ?v0))))))
(assume a223 (forall ((?v0 Num$)) (not (= (numeral$ ?v0) (- 1.0)))))
(assume a224 (forall ((?v0 Real_set$)) (= (uminus$a ?v0) (minus$a top$ ?v0))))
(assume a226 (forall ((?v0 Num1_bit0$)) (= (fun_app$a (times$a (uminus$ (numeral$b one$))) ?v0) (uminus$ ?v0))))
(assume a228 (forall ((?v0 Num1_bit0$)) (= (fun_app$a (times$a ?v0) (uminus$ (numeral$b one$))) (uminus$ ?v0))))
(assume a229 (= @p_10 @p_10))
(assume a230 (= (uminus$ @p_4) @p_12))
(assume a233 (forall ((?v0 Real)) (= (fun_app$b top$d ?v0) (member$ ?v0 top$))))
(assume a234 (forall ((?v0 Num$)) (= (- (- 1.0) (numeral$ ?v0)) (- (numeral$ (inc$ ?v0))))))
(assume a235 (forall ((?v0 Num$)) (= (minus$ (uminus$ one$d) (numeral$b ?v0)) (uminus$ (numeral$b (inc$ ?v0))))))
(assume a236 (forall ((?v0 Num$)) (= (- (numeral$ ?v0) (- 1.0)) (numeral$ (inc$ ?v0)))))
(assume a237 (forall ((?v0 Num$)) (= (minus$ (numeral$b ?v0) (uminus$ one$d)) (numeral$b (inc$ ?v0)))))
(assume a238 (forall ((?v0 Num$)) (= (- (- (sub$ ?v0 one$)) 1.0) (- (numeral$ ?v0)))))
(assume a239 (forall ((?v0 Num$)) (= (minus$ (uminus$ (sub$a ?v0 one$)) one$d) (uminus$ (numeral$b ?v0)))))
(assume a240 (forall ((?v0 Num$) (?v1 Num$)) (= (- (numeral$ ?v0) (numeral$ ?v1)) (sub$ ?v0 ?v1))))
(assume a241 (forall ((?v0 Num$) (?v1 Num$)) (= (minus$ (numeral$b ?v0) (numeral$b ?v1)) (sub$a ?v0 ?v1))))
(assume a242 (forall ((?v0 Num$) (?v1 Num$)) (= (- (- (numeral$ ?v0)) (- (numeral$ ?v1))) (sub$ ?v1 ?v0))))
(assume a243 (forall ((?v0 Num$) (?v1 Num$)) (= (minus$ (uminus$ (numeral$b ?v0)) (uminus$ (numeral$b ?v1))) (sub$a ?v1 ?v0))))
(assume a244 (forall ((?v0 Num$)) (= (- (numeral$ ?v0) 1.0) (sub$ ?v0 one$))))
(assume a245 (forall ((?v0 Num$)) (= (minus$ (numeral$b ?v0) one$d) (sub$a ?v0 one$))))
(assume a246 (forall ((?v0 Num$)) (= (- 1.0 (numeral$ ?v0)) (sub$ one$ ?v0))))
(assume a247 (forall ((?v0 Num$)) (= (minus$ one$d (numeral$b ?v0)) (sub$a one$ ?v0))))
(assume a248 (forall ((?v0 Num$)) (= (- (- (numeral$ ?v0)) (- 1.0)) (sub$ one$ ?v0))))
(assume a249 (forall ((?v0 Num$)) (= (minus$ (uminus$ (numeral$b ?v0)) (uminus$ one$d)) (sub$a one$ ?v0))))
(assume a250 (forall ((?v0 Num$)) (= (- (- 1.0) (- (numeral$ ?v0))) (sub$ ?v0 one$))))
(assume a251 (forall ((?v0 Num$)) (= (minus$ (uminus$ one$d) (uminus$ (numeral$b ?v0))) (sub$a ?v0 one$))))
(assume a253 (forall ((?v0 Num$)) (= (sub$ (inc$ ?v0) one$) (numeral$ ?v0))))
(assume a254 (forall ((?v0 Num$)) (= (sub$a (inc$ ?v0) one$) (numeral$b ?v0))))
(assume a255 (forall ((?v0 Num_bool_fun$) (?v1 Num$)) (=> (and (fun_app$c ?v0 one$) (forall ((?v2 Num$)) (=> (fun_app$c ?v0 ?v2) (fun_app$c ?v0 (inc$ ?v2))))) (fun_app$c ?v0 ?v1))))
(assume a256 (forall ((?v0 Num$) (?v1 Num$)) (= (sub$ ?v0 ?v1) (- (numeral$ ?v0) (numeral$ ?v1)))))
(assume a257 (forall ((?v0 Num$) (?v1 Num$)) (= (sub$a ?v0 ?v1) (minus$ (numeral$b ?v0) (numeral$b ?v1)))))
(assume a258 (= (inc$ one$) @p_5))
(assume a259 (forall ((?v0 Num$)) (= (sub$ one$ (bit0$ ?v0)) (- (numeral$ (bitM$ ?v0))))))
(assume a260 (forall ((?v0 Num$)) (= (sub$a one$ (bit0$ ?v0)) (uminus$ (numeral$b (bitM$ ?v0))))))
(assume a261 (forall ((?v0 Num$)) (= (sub$ (bit0$ ?v0) one$) (numeral$ (bitM$ ?v0)))))
(assume a262 (forall ((?v0 Num$)) (= (sub$a (bit0$ ?v0) one$) (numeral$b (bitM$ ?v0)))))
(assume a263 (forall ((?v0 Real) (?v1 Real)) (= (- (- ?v0) (- ?v1)) (- (- ?v0 ?v1)))))
(assume a264 (= (bitM$ one$) one$))
(assume a265 (forall ((?v0 Num$)) (= (inc$ (bitM$ ?v0)) (bit0$ ?v0))))
(assume a266 (forall ((?v0 Num$)) (= (numeral$ (bitM$ ?v0)) (- (numeral$ (bit0$ ?v0)) 1.0))))
(assume a267 (forall ((?v0 Num$)) (= (numeral$b (bitM$ ?v0)) (minus$ (numeral$b (bit0$ ?v0)) one$d))))
(assume a268 (forall ((?v0 Num$)) (= (fun_app$ dbl_dec$ (numeral$ ?v0)) (numeral$ (bitM$ ?v0)))))
(assume a269 (forall ((?v0 Num$)) (= (dbl_dec$a (numeral$b ?v0)) (numeral$b (bitM$ ?v0)))))
(assume a270 (forall ((?v0 Num$)) (= (+ (- 1.0) (numeral$ ?v0)) (sub$ ?v0 one$))))
(assume a271 (forall ((?v0 Num$)) (= (plus$ (uminus$ one$d) (numeral$b ?v0)) (sub$a ?v0 one$))))
(assume a272 (forall ((?v0 Nat$) (?v1 Nat$) (?v2 Nat$)) (= (= (plus$a ?v0 ?v1) (plus$a ?v0 ?v2)) (= ?v1 ?v2))))
(assume a273 (forall ((?v0 Nat$) (?v1 Nat$) (?v2 Nat$)) (= (= (plus$a ?v0 ?v1) (plus$a ?v2 ?v1)) (= ?v0 ?v2))))
(assume a274 (forall ((?v0 Num$) (?v1 Num_set$) (?v2 Num$) (?v3 Num_set$)) (=> (and (member$a ?v0 ?v1) (member$a ?v2 ?v3)) (member$a (plus$b ?v0 ?v2) (plus$c ?v1 ?v3)))))
(assume a275 (forall ((?v0 Nat$) (?v1 Nat_set$) (?v2 Nat$) (?v3 Nat_set$)) (=> (and (member$b ?v0 ?v1) (member$b ?v2 ?v3)) (member$b (plus$a ?v0 ?v2) (plus$d ?v1 ?v3)))))
(assume a276 (forall ((?v0 Num$) (?v1 Num$)) (= (plus$b (bit0$ ?v0) (bit0$ ?v1)) (bit0$ (plus$b ?v0 ?v1)))))
(assume a277 (forall ((?v0 Nat$) (?v1 Nat$) (?v2 Nat$)) (= (minus$b (minus$b ?v0 ?v1) ?v2) (minus$b ?v0 (plus$a ?v1 ?v2)))))
(assume a278 (forall ((?v0 Real) (?v1 Real)) (= (- (+ ?v0 ?v1) ?v1) ?v0)))
(assume a279 (forall ((?v0 Nat$) (?v1 Nat$)) (= (minus$b (plus$a ?v0 ?v1) ?v1) ?v0)))
(assume a280 (forall ((?v0 Real) (?v1 Real) (?v2 Real)) (= (- (+ ?v0 ?v1) (+ ?v2 ?v1)) (- ?v0 ?v2))))
(assume a281 (forall ((?v0 Nat$) (?v1 Nat$) (?v2 Nat$)) (= (minus$b (plus$a ?v0 ?v1) (plus$a ?v2 ?v1)) (minus$b ?v0 ?v2))))
(assume a282 (forall ((?v0 Real) (?v1 Real)) (= (- (+ ?v0 ?v1) ?v0) ?v1)))
(assume a283 (forall ((?v0 Nat$) (?v1 Nat$)) (= (minus$b (plus$a ?v0 ?v1) ?v0) ?v1)))
(assume a284 (forall ((?v0 Real) (?v1 Real) (?v2 Real)) (= (- (+ ?v0 ?v1) (+ ?v0 ?v2)) (- ?v1 ?v2))))
(assume a285 (forall ((?v0 Nat$) (?v1 Nat$) (?v2 Nat$)) (= (minus$b (plus$a ?v0 ?v1) (plus$a ?v0 ?v2)) (minus$b ?v1 ?v2))))
(assume a286 (forall ((?v0 Real) (?v1 Real)) (= (+ (- ?v0 ?v1) ?v1) ?v0)))
(assume a288 (forall ((?v0 Num$) (?v1 Num$) (?v2 Real)) (= (+ (numeral$ ?v0) (+ (numeral$ ?v1) ?v2)) (+ (numeral$ (plus$b ?v0 ?v1)) ?v2))))
(assume a289 (forall ((?v0 Num$) (?v1 Num$) (?v2 Nat$)) (= (plus$a (numeral$a ?v0) (plus$a (numeral$a ?v1) ?v2)) (plus$a (numeral$a (plus$b ?v0 ?v1)) ?v2))))
(assume a290 (forall ((?v0 Num$) (?v1 Num$) (?v2 Num1_bit0$)) (= (plus$ (numeral$b ?v0) (plus$ (numeral$b ?v1) ?v2)) (plus$ (numeral$b (plus$b ?v0 ?v1)) ?v2))))
(assume a291 (forall ((?v0 Num$) (?v1 Num$)) (= (+ (numeral$ ?v0) (numeral$ ?v1)) (numeral$ (plus$b ?v0 ?v1)))))
(assume a292 (forall ((?v0 Num$) (?v1 Num$)) (= (plus$a (numeral$a ?v0) (numeral$a ?v1)) (numeral$a (plus$b ?v0 ?v1)))))
(assume a293 (forall ((?v0 Num$) (?v1 Num$)) (= (plus$ (numeral$b ?v0) (numeral$b ?v1)) (numeral$b (plus$b ?v0 ?v1)))))
(assume a294 (= (plus$b one$ one$) @p_5))
(assume a295 (= (fun_app$ dbl_dec$ 1.0) 1.0))
(assume a296 (= (dbl_dec$a one$d) one$d))
(assume a297 (forall ((?v0 Real) (?v1 Real) (?v2 Num$)) (= (fun_app$ (times$ (+ ?v0 ?v1)) (numeral$ ?v2)) (+ (fun_app$ (times$ ?v0) (numeral$ ?v2)) (fun_app$ (times$ ?v1) (numeral$ ?v2))))))
(assume a298 (forall ((?v0 Nat$) (?v1 Nat$) (?v2 Num$)) (= (fun_app$g (times$c (plus$a ?v0 ?v1)) (numeral$a ?v2)) (plus$a (fun_app$g (times$c ?v0) (numeral$a ?v2)) (fun_app$g (times$c ?v1) (numeral$a ?v2))))))
(assume a299 (forall ((?v0 Num1_bit0$) (?v1 Num1_bit0$) (?v2 Num$)) (= (fun_app$a (times$a (plus$ ?v0 ?v1)) (numeral$b ?v2)) (plus$ (fun_app$a (times$a ?v0) (numeral$b ?v2)) (fun_app$a (times$a ?v1) (numeral$b ?v2))))))
(assume a300 (forall ((?v0 Num$) (?v1 Real) (?v2 Real)) (= (fun_app$ (times$ (numeral$ ?v0)) (+ ?v1 ?v2)) (+ (fun_app$ (times$ (numeral$ ?v0)) ?v1) (fun_app$ (times$ (numeral$ ?v0)) ?v2)))))
(assume a301 (forall ((?v0 Num$) (?v1 Nat$) (?v2 Nat$)) (= (fun_app$g (times$c (numeral$a ?v0)) (plus$a ?v1 ?v2)) (plus$a (fun_app$g (times$c (numeral$a ?v0)) ?v1) (fun_app$g (times$c (numeral$a ?v0)) ?v2)))))
(assume a302 (forall ((?v0 Num$) (?v1 Num1_bit0$) (?v2 Num1_bit0$)) (= (fun_app$a (times$a (numeral$b ?v0)) (plus$ ?v1 ?v2)) (plus$ (fun_app$a (times$a (numeral$b ?v0)) ?v1) (fun_app$a (times$a (numeral$b ?v0)) ?v2)))))
(assume a303 (forall ((?v0 Real) (?v1 Real)) (= (+ (- ?v0) ?v1) (- ?v1 ?v0))))
(assume a304 (forall ((?v0 Real) (?v1 Real)) (= (- ?v0 (- ?v1)) (+ ?v0 ?v1))))
(assume a305 (forall ((?v0 Num$) (?v1 Num$) (?v2 Real)) (= (+ (- (numeral$ ?v0)) (+ (- (numeral$ ?v1)) ?v2)) (+ (- (numeral$ (plus$b ?v0 ?v1))) ?v2))))
(assume a306 (forall ((?v0 Num$) (?v1 Num$) (?v2 Num1_bit0$)) (= (plus$ (uminus$ (numeral$b ?v0)) (plus$ (uminus$ (numeral$b ?v1)) ?v2)) (plus$ (uminus$ (numeral$b (plus$b ?v0 ?v1))) ?v2))))
(assume a307 (forall ((?v0 Num$) (?v1 Num$)) (= (+ (- (numeral$ ?v0)) (- (numeral$ ?v1))) (- (+ (numeral$ ?v0) (numeral$ ?v1))))))
(assume a308 (forall ((?v0 Num$) (?v1 Num$)) (= (plus$ (uminus$ (numeral$b ?v0)) (uminus$ (numeral$b ?v1))) (uminus$ (plus$ (numeral$b ?v0) (numeral$b ?v1))))))
(assume a309 (forall ((?v0 Num$) (?v1 Num$)) (= (- (- (numeral$ ?v0)) (numeral$ ?v1)) (- (numeral$ (plus$b ?v0 ?v1))))))
(assume a310 (forall ((?v0 Num$) (?v1 Num$)) (= (minus$ (uminus$ (numeral$b ?v0)) (numeral$b ?v1)) (uminus$ (numeral$b (plus$b ?v0 ?v1))))))
(step t0 (cl (not (! (= (! (or (! (not (! (not (! (= (! (choice ((?v2 Real)) (not (forall ((BOUND_VARIABLE_1236 Real)) (or (not (member$ ?v2 (collect$b top$d))) (not (member$ BOUND_VARIABLE_1236 (collect$b top$d))) (not (= (fun_app$ uu$ ?v2) (fun_app$ uu$ BOUND_VARIABLE_1236))) (= ?v2 BOUND_VARIABLE_1236))))) :named @p_13) (! (choice ((BOUND_VARIABLE_1236 Real)) (not (or (! (not (member$ @p_13 @p_7)) :named @p_17) (! (not (member$ BOUND_VARIABLE_1236 @p_7)) :named @p_16) (not (= (! (fun_app$ uu$ @p_13) :named @p_15) (! (fun_app$ uu$ BOUND_VARIABLE_1236) :named @p_14))) (= @p_13 BOUND_VARIABLE_1236)))) :named @p_18)) :named @p_19)) :named @p_20)) :named @p_229) (! (not (! (>= (! (+ (! (* (- 1) @p_13) :named @p_48) (! (choice ((BOUND_VARIABLE_1236 Real)) (not (or (! (not (member$ @p_13 @p_7)) :named @p_17) (! (not (member$ BOUND_VARIABLE_1236 @p_7)) :named @p_16) (not (= (! (fun_app$ uu$ @p_13) :named @p_15) (! (fun_app$ uu$ BOUND_VARIABLE_1236) :named @p_14))) (= @p_13 BOUND_VARIABLE_1236)))) :named @p_18)) :named @p_190) 0) :named @p_191)) :named @p_193) (! (not (! (>= (! (+ (! (choice ((?v2 Real)) (not (forall ((BOUND_VARIABLE_1236 Real)) (or (not (member$ ?v2 (collect$b top$d))) (not (member$ BOUND_VARIABLE_1236 (collect$b top$d))) (not (= (fun_app$ uu$ ?v2) (fun_app$ uu$ BOUND_VARIABLE_1236))) (= ?v2 BOUND_VARIABLE_1236))))) :named @p_13) (! (* (- 1) @p_18) :named @p_42)) :named @p_43) 0) :named @p_44)) :named @p_128)) :named @p_230) (! (or @p_19 @p_193 @p_128) :named @p_228)) :named @p_240)) (not @p_230) @p_228) :rule equiv_pos2)
(step t1 (cl (= @p_229 @p_19)) :rule hole)
(step t2 (cl (= @p_193 @p_193)) :rule refl)
(step t3 (cl (= @p_128 @p_128)) :rule refl)
(step t4 (cl @p_240) :rule cong :premises (t1 t2 t3))
(step t5 (cl (! (and @p_20 @p_191) :named @p_231) @p_229 @p_193) :rule and_neg)
(step t6 (cl (! (=> @p_231 @p_128) :named @p_233) @p_231) :rule implies_neg1)
(anchor :step t7)
(assume t7.a0 @p_20)
(assume t7.a1 @p_191)
(step t7.t0 (cl @p_233 @p_231) :rule implies_neg1)
(anchor :step t7.t1)
(assume t7.t1.a0 @p_20)
(assume t7.t1.a1 @p_191)
(step t7.t1.t0 (cl (not (! (= (! (< @p_43 0.0) :named @p_174) @p_128) :named @p_177)) (! (not @p_174) :named @p_180) @p_128) :rule equiv_pos2)
(step t7.t1.t1 (cl (= @p_174 (! (not (! (>= @p_43 0.0) :named @p_178)) :named @p_179))) :rule hole)
(step t7.t1.t2 (cl (= @p_178 @p_44)) :rule hole)
(step t7.t1.t3 (cl (= @p_179 @p_128)) :rule cong :premises (t7.t1.t2))
(step t7.t1.t4 (cl @p_177) :rule trans :premises (t7.t1.t1 t7.t1.t3))
(step t7.t1.t5 (cl (or (! (= @p_43 0.0) :named @p_237) (! (not (! (<= @p_43 0.0) :named @p_218)) :named @p_219) (! (not (<= 0.0 @p_43)) :named @p_234))) :rule la_disequality)
(step t7.t1.t6 (cl @p_237 @p_219 @p_234) :rule or :premises (t7.t1.t5))
(step t7.t1.t7 (cl (not (! (= @p_20 (! (not @p_237) :named @p_238)) :named @p_239)) @p_229 @p_238) :rule equiv_pos2)
(step t7.t1.t8 (cl (= @p_237 @p_19)) :rule hole)
(step t7.t1.t9 (cl (= @p_238 @p_20)) :rule cong :premises (t7.t1.t8))
(step t7.t1.t10 (cl @p_239) :rule symm :premises (t7.t1.t9))
(step t7.t1.t11 (cl (! (or @p_17 (not (member$ @p_18 @p_7)) (! (not (! (= @p_15 (! (fun_app$ uu$ @p_18) :named @p_21)) :named @p_22)) :named @p_23) @p_19) :named @p_24) @p_20) :rule or_neg)
(step t7.t1.t12 (cl (not (! (= (! (not (forall ((?v2 Real) (BOUND_VARIABLE_1236 Real)) (or (not (member$ ?v2 (collect$b top$d))) (not (member$ BOUND_VARIABLE_1236 (collect$b top$d))) (not (= (fun_app$ uu$ ?v2) (fun_app$ uu$ BOUND_VARIABLE_1236))) (= ?v2 BOUND_VARIABLE_1236)))) :named @p_26) (! (not @p_24) :named @p_25)) :named @p_41)) (not @p_26) @p_25) :rule equiv_pos2)
(anchor :step t7.t1.t13 :args ((:= ?v2 @p_13) (:= BOUND_VARIABLE_1236 @p_18)))
(step t7.t1.t13.t0 (cl (= (or (not (member$ ?v2 @p_7)) @p_16 (not (= (fun_app$ uu$ ?v2) @p_14)) (! (= ?v2 BOUND_VARIABLE_1236) :named @p_32)) @p_24)) :rule refl)
(step t7.t1.t13 (cl (= (forall ((?v2 Real) (BOUND_VARIABLE_1236 Real)) (or (not (member$ ?v2 (collect$b top$d))) (not (member$ BOUND_VARIABLE_1236 (collect$b top$d))) (not (= (fun_app$ uu$ ?v2) (fun_app$ uu$ BOUND_VARIABLE_1236))) (= ?v2 BOUND_VARIABLE_1236))) @p_24)) :rule sko_forall)
(step t7.t1.t14 (cl @p_41) :rule cong :premises (t7.t1.t13))
(step t7.t1.t15 (cl (! (not (! (= (! (inj_on$ uu$ @p_7) :named @p_27) (forall ((?v2 Real) (BOUND_VARIABLE_1236 Real)) (or (not (member$ ?v2 (collect$b top$d))) (not (member$ BOUND_VARIABLE_1236 (collect$b top$d))) (not (= (fun_app$ uu$ ?v2) (fun_app$ uu$ BOUND_VARIABLE_1236))) (= ?v2 BOUND_VARIABLE_1236)))) :named @p_28)) :named @p_40) @p_27 @p_26) :rule equiv_pos1)
(step t7.t1.t16 (cl @p_27 @p_26 @p_40) :rule reordering :premises (t7.t1.t15))
(step t7.t1.t17 (cl (not (! (= @p_2 (! (not @p_27) :named @p_38)) :named @p_39)) (not @p_2) @p_38) :rule equiv_pos2)
(step t7.t1.t18 (cl (= uu$ uu$)) :rule refl)
(step t7.t1.t19 (cl (= @p_1 @p_27)) :rule cong :premises (t7.t1.t18 a160))
(step t7.t1.t20 (cl @p_39) :rule cong :premises (t7.t1.t19))
(step t7.t1.t21 (cl @p_38) :rule resolution :premises (t7.t1.t17 t7.t1.t20 a14))
(step t7.t1.t22 (cl (or (! (not (forall ((?v0 Real_real_fun$) (?v1 Real_set$)) (= (inj_on$ ?v0 ?v1) (forall ((?v2 Real) (BOUND_VARIABLE_1236 Real)) (or (not (member$ ?v2 ?v1)) (not (member$ BOUND_VARIABLE_1236 ?v1)) (not (= (fun_app$ ?v0 ?v2) (fun_app$ ?v0 BOUND_VARIABLE_1236))) (= ?v2 BOUND_VARIABLE_1236)))))) :named @p_37) @p_28)) :rule forall_inst :args ((:= ?v0 uu$) (:= ?v1 @p_7)))
(step t7.t1.t23 (cl @p_37 @p_28) :rule or :premises (t7.t1.t22))
(step t7.t1.t24 (cl (not (! (= (forall ((?v0 Real_real_fun$) (?v1 Real_set$)) (= (inj_on$ ?v0 ?v1) (forall ((?v2 Real)) (=> (member$ ?v2 ?v1) (forall ((?v3 Real)) (=> (and (member$ ?v3 ?v1) (= (fun_app$ ?v0 ?v2) (fun_app$ ?v0 ?v3))) (= ?v2 ?v3))))))) (forall ((?v0 Real_real_fun$) (?v1 Real_set$)) (= (inj_on$ ?v0 ?v1) (forall ((?v2 Real) (BOUND_VARIABLE_1236 Real)) (or (not (member$ ?v2 ?v1)) (not (member$ BOUND_VARIABLE_1236 ?v1)) (not (= (fun_app$ ?v0 ?v2) (fun_app$ ?v0 BOUND_VARIABLE_1236))) (= ?v2 BOUND_VARIABLE_1236)))))) :named @p_29)) (not (forall ((?v0 Real_real_fun$) (?v1 Real_set$)) (= (inj_on$ ?v0 ?v1) (forall ((?v2 Real)) (=> (member$ ?v2 ?v1) (forall ((?v3 Real)) (=> (and (member$ ?v3 ?v1) (= (fun_app$ ?v0 ?v2) (fun_app$ ?v0 ?v3))) (= ?v2 ?v3)))))))) (forall ((?v0 Real_real_fun$) (?v1 Real_set$)) (= (inj_on$ ?v0 ?v1) (forall ((?v2 Real) (BOUND_VARIABLE_1236 Real)) (or (not (member$ ?v2 ?v1)) (not (member$ BOUND_VARIABLE_1236 ?v1)) (not (= (fun_app$ ?v0 ?v2) (fun_app$ ?v0 BOUND_VARIABLE_1236))) (= ?v2 BOUND_VARIABLE_1236)))))) :rule equiv_pos2)
(anchor :step t7.t1.t25 :args ((?v0 Real_real_fun$) (?v1 Real_set$) (:= ?v0 ?v0) (:= ?v1 ?v1)))
(step t7.t1.t25.t0 (cl (= (! (inj_on$ ?v0 ?v1) :named @p_30) @p_30)) :rule refl)
(anchor :step t7.t1.t25.t1 :args ((?v2 Real) (:= ?v2 ?v2)))
(step t7.t1.t25.t1.t0 (cl (= (! (member$ ?v2 ?v1) :named @p_35) @p_35)) :rule refl)
(step t7.t1.t25.t1.t1 (cl (= (forall ((?v3 Real)) (=> (and (member$ ?v3 ?v1) (= (fun_app$ ?v0 ?v2) (fun_app$ ?v0 ?v3))) (= ?v2 ?v3))) (forall ((?v3 Real)) (or (not (member$ ?v3 ?v1)) (not (= (fun_app$ ?v0 ?v2) (fun_app$ ?v0 ?v3))) (= ?v2 ?v3))))) :rule hole)
(step t7.t1.t25.t1.t2 (cl (= (=> @p_35 (forall ((?v3 Real)) (=> (and (member$ ?v3 ?v1) (= (fun_app$ ?v0 ?v2) (fun_app$ ?v0 ?v3))) (= ?v2 ?v3)))) (=> @p_35 (forall ((?v3 Real)) (or (not (member$ ?v3 ?v1)) (not (= (fun_app$ ?v0 ?v2) (fun_app$ ?v0 ?v3))) (= ?v2 ?v3)))))) :rule cong :premises (t7.t1.t25.t1.t0 t7.t1.t25.t1.t1))
(step t7.t1.t25.t1 (cl (= (forall ((?v2 Real)) (=> (member$ ?v2 ?v1) (forall ((?v3 Real)) (=> (and (member$ ?v3 ?v1) (= (fun_app$ ?v0 ?v2) (fun_app$ ?v0 ?v3))) (= ?v2 ?v3))))) (forall ((?v2 Real)) (=> (member$ ?v2 ?v1) (forall ((?v3 Real)) (or (not (member$ ?v3 ?v1)) (not (= (fun_app$ ?v0 ?v2) (fun_app$ ?v0 ?v3))) (= ?v2 ?v3))))))) :rule bind)
(step t7.t1.t25.t2 (cl (= (forall ((?v2 Real)) (=> (member$ ?v2 ?v1) (forall ((?v3 Real)) (or (not (member$ ?v3 ?v1)) (not (= (fun_app$ ?v0 ?v2) (fun_app$ ?v0 ?v3))) (= ?v2 ?v3))))) (forall ((?v2 Real)) (or (not (member$ ?v2 ?v1)) (forall ((?v3 Real)) (or (not (member$ ?v3 ?v1)) (not (= (fun_app$ ?v0 ?v2) (fun_app$ ?v0 ?v3))) (= ?v2 ?v3))))))) :rule hole)
(step t7.t1.t25.t3 (cl (= (forall ((?v2 Real)) (or (not (member$ ?v2 ?v1)) (forall ((?v3 Real)) (or (not (member$ ?v3 ?v1)) (not (= (fun_app$ ?v0 ?v2) (fun_app$ ?v0 ?v3))) (= ?v2 ?v3))))) (forall ((?v2 Real) (BOUND_VARIABLE_1236 Real)) (or (not (member$ ?v2 ?v1)) (or (not (member$ BOUND_VARIABLE_1236 ?v1)) (not (= (fun_app$ ?v0 ?v2) (fun_app$ ?v0 BOUND_VARIABLE_1236))) (= ?v2 BOUND_VARIABLE_1236)))))) :rule hole)
(anchor :step t7.t1.t25.t4 :args ((?v2 Real) (BOUND_VARIABLE_1236 Real) (:= ?v2 ?v2) (:= BOUND_VARIABLE_1236 BOUND_VARIABLE_1236)))
(step t7.t1.t25.t4.t0 (cl (= (or (! (not @p_35) :named @p_36) (or (! (not (member$ BOUND_VARIABLE_1236 ?v1)) :named @p_34) (! (not (= (fun_app$ ?v0 ?v2) (fun_app$ ?v0 BOUND_VARIABLE_1236))) :named @p_33) @p_32)) (or @p_36 @p_34 @p_33 @p_32))) :rule hole)
(step t7.t1.t25.t4 (cl (= (forall ((?v2 Real) (BOUND_VARIABLE_1236 Real)) (or (not (member$ ?v2 ?v1)) (or (not (member$ BOUND_VARIABLE_1236 ?v1)) (not (= (fun_app$ ?v0 ?v2) (fun_app$ ?v0 BOUND_VARIABLE_1236))) (= ?v2 BOUND_VARIABLE_1236)))) (forall ((?v2 Real) (BOUND_VARIABLE_1236 Real)) (or (not (member$ ?v2 ?v1)) (not (member$ BOUND_VARIABLE_1236 ?v1)) (not (= (fun_app$ ?v0 ?v2) (fun_app$ ?v0 BOUND_VARIABLE_1236))) (= ?v2 BOUND_VARIABLE_1236))))) :rule bind)
(step t7.t1.t25.t5 (cl (= (forall ((?v2 Real)) (or (not (member$ ?v2 ?v1)) (forall ((?v3 Real)) (or (not (member$ ?v3 ?v1)) (not (= (fun_app$ ?v0 ?v2) (fun_app$ ?v0 ?v3))) (= ?v2 ?v3))))) (forall ((?v2 Real) (BOUND_VARIABLE_1236 Real)) (or (not (member$ ?v2 ?v1)) (not (member$ BOUND_VARIABLE_1236 ?v1)) (not (= (fun_app$ ?v0 ?v2) (fun_app$ ?v0 BOUND_VARIABLE_1236))) (= ?v2 BOUND_VARIABLE_1236))))) :rule trans :premises (t7.t1.t25.t3 t7.t1.t25.t4))
(step t7.t1.t25.t6 (cl (= (forall ((?v2 Real)) (=> (member$ ?v2 ?v1) (forall ((?v3 Real)) (or (not (member$ ?v3 ?v1)) (not (= (fun_app$ ?v0 ?v2) (fun_app$ ?v0 ?v3))) (= ?v2 ?v3))))) (forall ((?v2 Real) (BOUND_VARIABLE_1236 Real)) (or (not (member$ ?v2 ?v1)) (not (member$ BOUND_VARIABLE_1236 ?v1)) (not (= (fun_app$ ?v0 ?v2) (fun_app$ ?v0 BOUND_VARIABLE_1236))) (= ?v2 BOUND_VARIABLE_1236))))) :rule trans :premises (t7.t1.t25.t2 t7.t1.t25.t5))
(step t7.t1.t25.t7 (cl (= (forall ((?v2 Real)) (=> (member$ ?v2 ?v1) (forall ((?v3 Real)) (=> (and (member$ ?v3 ?v1) (= (fun_app$ ?v0 ?v2) (fun_app$ ?v0 ?v3))) (= ?v2 ?v3))))) (forall ((?v2 Real) (BOUND_VARIABLE_1236 Real)) (or (not (member$ ?v2 ?v1)) (not (member$ BOUND_VARIABLE_1236 ?v1)) (not (= (fun_app$ ?v0 ?v2) (fun_app$ ?v0 BOUND_VARIABLE_1236))) (= ?v2 BOUND_VARIABLE_1236))))) :rule trans :premises (t7.t1.t25.t1 t7.t1.t25.t6))
(step t7.t1.t25.t8 (cl (= (= @p_30 (forall ((?v2 Real)) (=> (member$ ?v2 ?v1) (forall ((?v3 Real)) (=> (and (member$ ?v3 ?v1) (= (fun_app$ ?v0 ?v2) (fun_app$ ?v0 ?v3))) (= ?v2 ?v3)))))) (= @p_30 (forall ((?v2 Real) (BOUND_VARIABLE_1236 Real)) (or (not (member$ ?v2 ?v1)) (not (member$ BOUND_VARIABLE_1236 ?v1)) (not (= (fun_app$ ?v0 ?v2) (fun_app$ ?v0 BOUND_VARIABLE_1236))) (= ?v2 BOUND_VARIABLE_1236)))))) :rule cong :premises (t7.t1.t25.t0 t7.t1.t25.t7))
(step t7.t1.t25 (cl @p_29) :rule bind)
(step t7.t1.t26 (cl (forall ((?v0 Real_real_fun$) (?v1 Real_set$)) (= (inj_on$ ?v0 ?v1) (forall ((?v2 Real) (BOUND_VARIABLE_1236 Real)) (or (not (member$ ?v2 ?v1)) (not (member$ BOUND_VARIABLE_1236 ?v1)) (not (= (fun_app$ ?v0 ?v2) (fun_app$ ?v0 BOUND_VARIABLE_1236))) (= ?v2 BOUND_VARIABLE_1236)))))) :rule resolution :premises (t7.t1.t24 t7.t1.t25 a91))
(step t7.t1.t27 (cl @p_28) :rule resolution :premises (t7.t1.t23 t7.t1.t26))
(step t7.t1.t28 (cl @p_26) :rule resolution :premises (t7.t1.t16 t7.t1.t21 t7.t1.t27))
(step t7.t1.t29 (cl @p_25) :rule resolution :premises (t7.t1.t12 t7.t1.t14 t7.t1.t28))
(step t7.t1.t30 (cl @p_20) :rule resolution :premises (t7.t1.t11 t7.t1.t29))
(step t7.t1.t31 (cl @p_238) :rule resolution :premises (t7.t1.t7 t7.t1.t10 t7.t1.t30))
(step t7.t1.t32 (cl (not (! (= @p_191 @p_218) :named @p_236)) @p_193 @p_218) :rule equiv_pos2)
(step t7.t1.t33 (cl (= @p_218 @p_191)) :rule hole)
(step t7.t1.t34 (cl @p_236) :rule symm :premises (t7.t1.t33))
(step t7.t1.t35 (cl @p_218) :rule resolution :premises (t7.t1.t32 t7.t1.t34 t7.t1.a1))
(step t7.t1.t36 (cl (not (! (= @p_174 @p_234) :named @p_235)) @p_174 (not @p_234)) :rule equiv_pos1)
(step t7.t1.t37 (cl @p_235) :rule comp_simplify)
(step t7.t1.t38 (cl @p_174) :rule resolution :premises (t7.t1.t6 t7.t1.t31 t7.t1.t35 t7.t1.t36 t7.t1.t37))
(step t7.t1.t39 (cl @p_128) :rule resolution :premises (t7.t1.t0 t7.t1.t4 t7.t1.t38))
(step t7.t1 (cl @p_229 @p_193 @p_128) :rule subproof :discharge (t7.t1.a0 t7.t1.a1))
(step t7.t2 (cl (! (not @p_231) :named @p_232) @p_20) :rule and_pos)
(step t7.t3 (cl @p_232 @p_191) :rule and_pos)
(step t7.t4 (cl @p_128 @p_232 @p_232) :rule resolution :premises (t7.t1 t7.t2 t7.t3))
(step t7.t5 (cl @p_232 @p_232 @p_128) :rule reordering :premises (t7.t4))
(step t7.t6 (cl @p_232 @p_128) :rule contraction :premises (t7.t5))
(step t7.t7 (cl @p_233 @p_128) :rule resolution :premises (t7.t0 t7.t6))
(step t7.t8 (cl @p_233 (! (not @p_128) :named @p_129)) :rule implies_neg2)
(step t7.t9 (cl @p_233 @p_233) :rule resolution :premises (t7.t7 t7.t8))
(step t7.t10 (cl @p_233) :rule contraction :premises (t7.t9))
(step t7.t11 (cl @p_232 @p_128) :rule implies :premises (t7.t10))
(step t7.t12 (cl @p_231 @p_229 @p_193) :rule and_neg)
(step t7.t13 (cl @p_24 @p_20) :rule or_neg)
(step t7.t14 (cl (not @p_41) (not @p_26) @p_25) :rule equiv_pos2)
(anchor :step t7.t15 :args ((:= ?v2 @p_13) (:= BOUND_VARIABLE_1236 @p_18)))
(step t7.t15.t0 (cl (= (or (not (member$ ?v2 @p_7)) @p_16 (not (= (fun_app$ uu$ ?v2) @p_14)) @p_32) @p_24)) :rule refl)
(step t7.t15 (cl (= (forall ((?v2 Real) (BOUND_VARIABLE_1236 Real)) (or (not (member$ ?v2 (collect$b top$d))) (not (member$ BOUND_VARIABLE_1236 (collect$b top$d))) (not (= (fun_app$ uu$ ?v2) (fun_app$ uu$ BOUND_VARIABLE_1236))) (= ?v2 BOUND_VARIABLE_1236))) @p_24)) :rule sko_forall)
(step t7.t16 (cl @p_41) :rule cong :premises (t7.t15))
(step t7.t17 (cl @p_40 @p_27 @p_26) :rule equiv_pos1)
(step t7.t18 (cl @p_27 @p_26 @p_40) :rule reordering :premises (t7.t17))
(step t7.t19 (cl (not @p_39) (not @p_2) @p_38) :rule equiv_pos2)
(step t7.t20 (cl (= uu$ uu$)) :rule refl)
(step t7.t21 (cl (= @p_1 @p_27)) :rule cong :premises (t7.t20 a160))
(step t7.t22 (cl @p_39) :rule cong :premises (t7.t21))
(step t7.t23 (cl @p_38) :rule resolution :premises (t7.t19 t7.t22 a14))
(step t7.t24 (cl (or @p_37 @p_28)) :rule forall_inst :args ((:= ?v0 uu$) (:= ?v1 @p_7)))
(step t7.t25 (cl @p_37 @p_28) :rule or :premises (t7.t24))
(step t7.t26 (cl (not @p_29) (not (forall ((?v0 Real_real_fun$) (?v1 Real_set$)) (= (inj_on$ ?v0 ?v1) (forall ((?v2 Real)) (=> (member$ ?v2 ?v1) (forall ((?v3 Real)) (=> (and (member$ ?v3 ?v1) (= (fun_app$ ?v0 ?v2) (fun_app$ ?v0 ?v3))) (= ?v2 ?v3)))))))) (forall ((?v0 Real_real_fun$) (?v1 Real_set$)) (= (inj_on$ ?v0 ?v1) (forall ((?v2 Real) (BOUND_VARIABLE_1236 Real)) (or (not (member$ ?v2 ?v1)) (not (member$ BOUND_VARIABLE_1236 ?v1)) (not (= (fun_app$ ?v0 ?v2) (fun_app$ ?v0 BOUND_VARIABLE_1236))) (= ?v2 BOUND_VARIABLE_1236)))))) :rule equiv_pos2)
(anchor :step t7.t27 :args ((?v0 Real_real_fun$) (?v1 Real_set$) (:= ?v0 ?v0) (:= ?v1 ?v1)))
(step t7.t27.t0 (cl (= @p_30 @p_30)) :rule refl)
(anchor :step t7.t27.t1 :args ((?v2 Real) (:= ?v2 ?v2)))
(step t7.t27.t1.t0 (cl (= @p_35 @p_35)) :rule refl)
(step t7.t27.t1.t1 (cl (= (forall ((?v3 Real)) (=> (and (member$ ?v3 ?v1) (= (fun_app$ ?v0 ?v2) (fun_app$ ?v0 ?v3))) (= ?v2 ?v3))) (forall ((?v3 Real)) (or (not (member$ ?v3 ?v1)) (not (= (fun_app$ ?v0 ?v2) (fun_app$ ?v0 ?v3))) (= ?v2 ?v3))))) :rule hole)
(step t7.t27.t1.t2 (cl (= (=> @p_35 (forall ((?v3 Real)) (=> (and (member$ ?v3 ?v1) (= (fun_app$ ?v0 ?v2) (fun_app$ ?v0 ?v3))) (= ?v2 ?v3)))) (=> @p_35 (forall ((?v3 Real)) (or (not (member$ ?v3 ?v1)) (not (= (fun_app$ ?v0 ?v2) (fun_app$ ?v0 ?v3))) (= ?v2 ?v3)))))) :rule cong :premises (t7.t27.t1.t0 t7.t27.t1.t1))
(step t7.t27.t1 (cl (= (forall ((?v2 Real)) (=> (member$ ?v2 ?v1) (forall ((?v3 Real)) (=> (and (member$ ?v3 ?v1) (= (fun_app$ ?v0 ?v2) (fun_app$ ?v0 ?v3))) (= ?v2 ?v3))))) (forall ((?v2 Real)) (=> (member$ ?v2 ?v1) (forall ((?v3 Real)) (or (not (member$ ?v3 ?v1)) (not (= (fun_app$ ?v0 ?v2) (fun_app$ ?v0 ?v3))) (= ?v2 ?v3))))))) :rule bind)
(step t7.t27.t2 (cl (= (forall ((?v2 Real)) (=> (member$ ?v2 ?v1) (forall ((?v3 Real)) (or (not (member$ ?v3 ?v1)) (not (= (fun_app$ ?v0 ?v2) (fun_app$ ?v0 ?v3))) (= ?v2 ?v3))))) (forall ((?v2 Real)) (or (not (member$ ?v2 ?v1)) (forall ((?v3 Real)) (or (not (member$ ?v3 ?v1)) (not (= (fun_app$ ?v0 ?v2) (fun_app$ ?v0 ?v3))) (= ?v2 ?v3))))))) :rule hole)
(step t7.t27.t3 (cl (= (forall ((?v2 Real)) (or (not (member$ ?v2 ?v1)) (forall ((?v3 Real)) (or (not (member$ ?v3 ?v1)) (not (= (fun_app$ ?v0 ?v2) (fun_app$ ?v0 ?v3))) (= ?v2 ?v3))))) (forall ((?v2 Real) (BOUND_VARIABLE_1236 Real)) (or (not (member$ ?v2 ?v1)) (or (not (member$ BOUND_VARIABLE_1236 ?v1)) (not (= (fun_app$ ?v0 ?v2) (fun_app$ ?v0 BOUND_VARIABLE_1236))) (= ?v2 BOUND_VARIABLE_1236)))))) :rule hole)
(anchor :step t7.t27.t4 :args ((?v2 Real) (BOUND_VARIABLE_1236 Real) (:= ?v2 ?v2) (:= BOUND_VARIABLE_1236 BOUND_VARIABLE_1236)))
(step t7.t27.t4.t0 (cl (= (or @p_36 (or @p_34 @p_33 @p_32)) (or @p_36 @p_34 @p_33 @p_32))) :rule hole)
(step t7.t27.t4 (cl (= (forall ((?v2 Real) (BOUND_VARIABLE_1236 Real)) (or (not (member$ ?v2 ?v1)) (or (not (member$ BOUND_VARIABLE_1236 ?v1)) (not (= (fun_app$ ?v0 ?v2) (fun_app$ ?v0 BOUND_VARIABLE_1236))) (= ?v2 BOUND_VARIABLE_1236)))) (forall ((?v2 Real) (BOUND_VARIABLE_1236 Real)) (or (not (member$ ?v2 ?v1)) (not (member$ BOUND_VARIABLE_1236 ?v1)) (not (= (fun_app$ ?v0 ?v2) (fun_app$ ?v0 BOUND_VARIABLE_1236))) (= ?v2 BOUND_VARIABLE_1236))))) :rule bind)
(step t7.t27.t5 (cl (= (forall ((?v2 Real)) (or (not (member$ ?v2 ?v1)) (forall ((?v3 Real)) (or (not (member$ ?v3 ?v1)) (not (= (fun_app$ ?v0 ?v2) (fun_app$ ?v0 ?v3))) (= ?v2 ?v3))))) (forall ((?v2 Real) (BOUND_VARIABLE_1236 Real)) (or (not (member$ ?v2 ?v1)) (not (member$ BOUND_VARIABLE_1236 ?v1)) (not (= (fun_app$ ?v0 ?v2) (fun_app$ ?v0 BOUND_VARIABLE_1236))) (= ?v2 BOUND_VARIABLE_1236))))) :rule trans :premises (t7.t27.t3 t7.t27.t4))
(step t7.t27.t6 (cl (= (forall ((?v2 Real)) (=> (member$ ?v2 ?v1) (forall ((?v3 Real)) (or (not (member$ ?v3 ?v1)) (not (= (fun_app$ ?v0 ?v2) (fun_app$ ?v0 ?v3))) (= ?v2 ?v3))))) (forall ((?v2 Real) (BOUND_VARIABLE_1236 Real)) (or (not (member$ ?v2 ?v1)) (not (member$ BOUND_VARIABLE_1236 ?v1)) (not (= (fun_app$ ?v0 ?v2) (fun_app$ ?v0 BOUND_VARIABLE_1236))) (= ?v2 BOUND_VARIABLE_1236))))) :rule trans :premises (t7.t27.t2 t7.t27.t5))
(step t7.t27.t7 (cl (= (forall ((?v2 Real)) (=> (member$ ?v2 ?v1) (forall ((?v3 Real)) (=> (and (member$ ?v3 ?v1) (= (fun_app$ ?v0 ?v2) (fun_app$ ?v0 ?v3))) (= ?v2 ?v3))))) (forall ((?v2 Real) (BOUND_VARIABLE_1236 Real)) (or (not (member$ ?v2 ?v1)) (not (member$ BOUND_VARIABLE_1236 ?v1)) (not (= (fun_app$ ?v0 ?v2) (fun_app$ ?v0 BOUND_VARIABLE_1236))) (= ?v2 BOUND_VARIABLE_1236))))) :rule trans :premises (t7.t27.t1 t7.t27.t6))
(step t7.t27.t8 (cl (= (= @p_30 (forall ((?v2 Real)) (=> (member$ ?v2 ?v1) (forall ((?v3 Real)) (=> (and (member$ ?v3 ?v1) (= (fun_app$ ?v0 ?v2) (fun_app$ ?v0 ?v3))) (= ?v2 ?v3)))))) (= @p_30 (forall ((?v2 Real) (BOUND_VARIABLE_1236 Real)) (or (not (member$ ?v2 ?v1)) (not (member$ BOUND_VARIABLE_1236 ?v1)) (not (= (fun_app$ ?v0 ?v2) (fun_app$ ?v0 BOUND_VARIABLE_1236))) (= ?v2 BOUND_VARIABLE_1236)))))) :rule cong :premises (t7.t27.t0 t7.t27.t7))
(step t7.t27 (cl @p_29) :rule bind)
(step t7.t28 (cl (forall ((?v0 Real_real_fun$) (?v1 Real_set$)) (= (inj_on$ ?v0 ?v1) (forall ((?v2 Real) (BOUND_VARIABLE_1236 Real)) (or (not (member$ ?v2 ?v1)) (not (member$ BOUND_VARIABLE_1236 ?v1)) (not (= (fun_app$ ?v0 ?v2) (fun_app$ ?v0 BOUND_VARIABLE_1236))) (= ?v2 BOUND_VARIABLE_1236)))))) :rule resolution :premises (t7.t26 t7.t27 a91))
(step t7.t29 (cl @p_28) :rule resolution :premises (t7.t25 t7.t28))
(step t7.t30 (cl @p_26) :rule resolution :premises (t7.t18 t7.t23 t7.t29))
(step t7.t31 (cl @p_25) :rule resolution :premises (t7.t14 t7.t16 t7.t30))
(step t7.t32 (cl @p_20) :rule resolution :premises (t7.t13 t7.t31))
(step t7.t33 (cl @p_231) :rule resolution :premises (t7.t12 t7.t32 t7.a1))
(step t7.t34 (cl @p_128) :rule resolution :premises (t7.t11 t7.t33))
(step t7 (cl @p_229 @p_193 @p_128) :rule subproof :discharge (t7.a0 t7.a1))
(step t8 (cl @p_232 @p_20) :rule and_pos)
(step t9 (cl @p_232 @p_191) :rule and_pos)
(step t10 (cl @p_128 @p_232 @p_232) :rule resolution :premises (t7 t8 t9))
(step t11 (cl @p_232 @p_232 @p_128) :rule reordering :premises (t10))
(step t12 (cl @p_232 @p_128) :rule contraction :premises (t11))
(step t13 (cl @p_233 @p_128) :rule resolution :premises (t6 t12))
(step t14 (cl @p_233 @p_129) :rule implies_neg2)
(step t15 (cl @p_233 @p_233) :rule resolution :premises (t13 t14))
(step t16 (cl @p_233) :rule contraction :premises (t15))
(step t17 (cl @p_232 @p_128) :rule implies :premises (t16))
(step t18 (cl @p_229 @p_193 @p_128) :rule resolution :premises (t5 t17))
(step t19 (cl @p_230 (not @p_229)) :rule or_neg)
(step t20 (cl @p_230 (! (not @p_193) :named @p_194)) :rule or_neg)
(step t21 (cl @p_230 @p_129) :rule or_neg)
(step t22 (cl @p_230 @p_230 @p_230) :rule resolution :premises (t18 t19 t20 t21))
(step t23 (cl @p_230) :rule contraction :premises (t22))
(step t24 (cl @p_228) :rule resolution :premises (t0 t4 t23))
(step t25 (cl @p_19 @p_193 @p_128) :rule or :premises (t24))
(step t26 (cl (not (! (= (! (or (! (not (! (= @p_18 (+ 1 (! (* (- 1) (! (fun_app$ x_coord_inv$ (! (fun_app$ x_coord$ (! (+ 1 @p_42) :named @p_45)) :named @p_46)) :named @p_47)) :named @p_110))) :named @p_111)) :named @p_126) (! (not (! (= @p_13 (+ 1 (! (* (- 1) (! (fun_app$ x_coord_inv$ (! (fun_app$ x_coord$ (! (+ 1 @p_48) :named @p_49)) :named @p_50)) :named @p_51)) :named @p_119))) :named @p_120)) :named @p_125) (! (not (! (= @p_51 @p_47) :named @p_52)) :named @p_109) @p_194) :named @p_195) (! (or @p_126 @p_125 @p_109 @p_191) :named @p_192)) :named @p_227)) (not @p_195) @p_192) :rule equiv_pos2)
(step t27 (cl (= @p_126 @p_126)) :rule refl)
(step t28 (cl (= @p_125 @p_125)) :rule refl)
(step t29 (cl (= @p_109 @p_109)) :rule refl)
(step t30 (cl (= @p_194 @p_191)) :rule hole)
(step t31 (cl @p_227) :rule cong :premises (t27 t28 t29 t30))
(step t32 (cl (! (=> (! (and @p_111 @p_120 @p_52 @p_193) :named @p_196) false) :named @p_198) @p_196) :rule implies_neg1)
(anchor :step t33)
(assume t33.a0 @p_111)
(assume t33.a1 @p_120)
(assume t33.a2 @p_52)
(assume t33.a3 @p_193)
(step t33.t0 (cl (not (! (= (! (< (! (+ (! (* (- 1.0) @p_43) :named @p_204) (! (* (- 1.0) (! (+ @p_18 @p_47) :named @p_145)) :named @p_203) (! (* 1.0 (! (+ @p_13 @p_51) :named @p_143)) :named @p_202) (! (* (- 1.0) (! (+ @p_51 @p_110) :named @p_141)) :named @p_201)) :named @p_205) (! (+ (! (* (- 1.0) 0.0) :named @p_199) (! (* (- 1.0) 1.0) :named @p_138) (! (* 1.0 1.0) :named @p_139) @p_199) :named @p_200)) :named @p_206) false) :named @p_220)) (not @p_206) false) :rule equiv_pos2)
(step t33.t1 (cl (= @p_206 (! (not (! (>= @p_205 @p_200) :named @p_221)) :named @p_222))) :rule hole)
(step t33.t2 (cl (= @p_204 @p_190)) :rule hole)
(step t33.t3 (cl (= @p_203 (! (+ @p_42 @p_110) :named @p_225))) :rule hole)
(step t33.t4 (cl (= @p_202 @p_143)) :rule hole)
(step t33.t5 (cl (= @p_201 (! (+ @p_119 @p_47) :named @p_224))) :rule hole)
(step t33.t6 (cl (= @p_205 (! (+ @p_190 @p_225 @p_143 @p_224) :named @p_226))) :rule cong :premises (t33.t2 t33.t3 t33.t4 t33.t5))
(step t33.t7 (cl (= @p_226 0.0)) :rule hole)
(step t33.t8 (cl (= @p_205 0.0)) :rule trans :premises (t33.t6 t33.t7))
(step t33.t9 (cl (= @p_199 0.0)) :rule hole)
(step t33.t10 (cl (= @p_138 (- 1.0))) :rule hole)
(step t33.t11 (cl (= @p_139 1.0)) :rule hole)
(step t33.t12 (cl (= @p_200 (! (+ 0.0 (- 1.0) 1.0 0.0) :named @p_223))) :rule cong :premises (t33.t9 t33.t10 t33.t11 t33.t9))
(step t33.t13 (cl (= @p_223 0.0)) :rule hole)
(step t33.t14 (cl (= @p_200 0.0)) :rule trans :premises (t33.t12 t33.t13))
(step t33.t15 (cl (= @p_221 (! (>= 0.0 0.0) :named @p_185))) :rule cong :premises (t33.t8 t33.t14))
(step t33.t16 (cl (= @p_185 true)) :rule hole)
(step t33.t17 (cl (= @p_221 true)) :rule trans :premises (t33.t15 t33.t16))
(step t33.t18 (cl (= @p_222 (! (not true) :named @p_184))) :rule cong :premises (t33.t17))
(step t33.t19 (cl (= @p_184 false)) :rule hole)
(step t33.t20 (cl (= @p_222 false)) :rule trans :premises (t33.t18 t33.t19))
(step t33.t21 (cl @p_220) :rule trans :premises (t33.t1 t33.t20))
(step t33.t22 (cl (not (! (< @p_204 @p_199) :named @p_213)) (not (! (= @p_203 @p_138) :named @p_211)) (not (! (= @p_202 @p_139) :named @p_209)) (not (! (= @p_201 @p_199) :named @p_207)) @p_206) :rule la_generic :args (1 (- 1) (- 1) (- 1) 1))
(step t33.t23 (cl (=> (! (and (! (< (- 1.0) 0.0) :named @p_162) (! (> @p_43 0.0) :named @p_214)) :named @p_215) @p_213)) :rule la_mult_neg)
(step t33.t24 (cl (not @p_215) @p_213) :rule implies :premises (t33.t23))
(step t33.t25 (cl @p_215 (! (not @p_162) :named @p_166) (not @p_214)) :rule and_neg)
(step t33.t26 (cl (= (! (= @p_162 true) :named @p_165) @p_162)) :rule equiv_simplify)
(step t33.t27 (cl (not @p_165) @p_162) :rule equiv1 :premises (t33.t26))
(step t33.t28 (cl @p_165) :rule hole :args ("evaluate"))
(step t33.t29 (cl @p_162) :rule resolution :premises (t33.t27 t33.t28))
(step t33.t30 (cl (not (! (= @p_193 @p_214) :named @p_217)) @p_194 @p_214) :rule equiv_pos2)
(step t33.t31 (cl (= @p_214 @p_219)) :rule hole)
(step t33.t32 (cl (= @p_218 @p_191)) :rule hole)
(step t33.t33 (cl (= @p_219 @p_193)) :rule cong :premises (t33.t32))
(step t33.t34 (cl (= @p_214 @p_193)) :rule trans :premises (t33.t31 t33.t33))
(step t33.t35 (cl @p_217) :rule symm :premises (t33.t34))
(step t33.t36 (cl @p_214) :rule resolution :premises (t33.t30 t33.t35 t33.a3))
(step t33.t37 (cl @p_215) :rule resolution :premises (t33.t25 t33.t29 t33.t36))
(step t33.t38 (cl @p_213) :rule resolution :premises (t33.t24 t33.t37))
(step t33.t39 (cl (=> (! (and @p_162 (! (= @p_145 1.0) :named @p_169)) :named @p_212) @p_211)) :rule la_mult_neg)
(step t33.t40 (cl (not @p_212) @p_211) :rule implies :premises (t33.t39))
(step t33.t41 (cl @p_212 @p_166 (! (not @p_169) :named @p_172)) :rule and_neg)
(step t33.t42 (cl (not (! (= @p_111 @p_169) :named @p_171)) @p_126 @p_169) :rule equiv_pos2)
(step t33.t43 (cl (= @p_169 @p_111)) :rule hole)
(step t33.t44 (cl @p_171) :rule symm :premises (t33.t43))
(step t33.t45 (cl (not (! (= (! (=> (forall ((?v0 Real)) (= ?v0 (fun_app$ x_coord_inv$ (fun_app$ x_coord$ ?v0)))) (! (= @p_45 @p_47) :named @p_116)) :named @p_117) (! (=> (forall ((?v0 Real)) (= ?v0 (fun_app$ x_coord_inv$ (fun_app$ x_coord$ ?v0)))) @p_111) :named @p_115)) :named @p_118)) (not @p_117) @p_115) :rule equiv_pos2)
(step t33.t46 (cl (= (forall ((?v0 Real)) (= ?v0 (fun_app$ x_coord_inv$ (fun_app$ x_coord$ ?v0)))) (forall ((?v0 Real)) (= ?v0 (fun_app$ x_coord_inv$ (fun_app$ x_coord$ ?v0)))))) :rule refl)
(step t33.t47 (cl (= @p_116 @p_111)) :rule hole)
(step t33.t48 (cl @p_118) :rule cong :premises (t33.t46 t33.t47))
(step t33.t49 (cl @p_117 (forall ((?v0 Real)) (= ?v0 (fun_app$ x_coord_inv$ (fun_app$ x_coord$ ?v0))))) :rule implies_neg1)
(anchor :step t33.t50)
(assume t33.t50.a0 (forall ((?v0 Real)) (= ?v0 (fun_app$ x_coord_inv$ (fun_app$ x_coord$ ?v0)))))
(step t33.t50.t0 (cl (or (! (not (forall ((?v0 Real)) (= ?v0 (fun_app$ x_coord_inv$ (fun_app$ x_coord$ ?v0))))) :named @p_114) @p_116)) :rule forall_inst :args ((:= ?v0 @p_45)))
(step t33.t50.t1 (cl @p_114 @p_116) :rule or :premises (t33.t50.t0))
(step t33.t50.t2 (cl (not (! (= (forall ((?v0 Real)) (= (fun_app$ x_coord_inv$ (fun_app$ x_coord$ ?v0)) ?v0)) (forall ((?v0 Real)) (= ?v0 (fun_app$ x_coord_inv$ (fun_app$ x_coord$ ?v0))))) :named @p_112)) (not (forall ((?v0 Real)) (= (fun_app$ x_coord_inv$ (fun_app$ x_coord$ ?v0)) ?v0))) (forall ((?v0 Real)) (= ?v0 (fun_app$ x_coord_inv$ (fun_app$ x_coord$ ?v0))))) :rule equiv_pos2)
(anchor :step t33.t50.t3 :args ((?v0 Real) (:= ?v0 ?v0)))
(step t33.t50.t3.t0 (cl (= (= (! (fun_app$ x_coord_inv$ (fun_app$ x_coord$ ?v0)) :named @p_113) ?v0) (= ?v0 @p_113))) :rule hole)
(step t33.t50.t3 (cl @p_112) :rule bind)
(step t33.t50.t4 (cl (forall ((?v0 Real)) (= ?v0 (fun_app$ x_coord_inv$ (fun_app$ x_coord$ ?v0))))) :rule resolution :premises (t33.t50.t2 t33.t50.t3 a130))
(step t33.t50.t5 (cl @p_116) :rule resolution :premises (t33.t50.t1 t33.t50.t4))
(step t33.t50 (cl @p_114 @p_116) :rule subproof :discharge (t33.t50.a0))
(step t33.t51 (cl @p_117 @p_116) :rule resolution :premises (t33.t49 t33.t50))
(step t33.t52 (cl @p_117 (not @p_116)) :rule implies_neg2)
(step t33.t53 (cl @p_117 @p_117) :rule resolution :premises (t33.t51 t33.t52))
(step t33.t54 (cl @p_117) :rule contraction :premises (t33.t53))
(step t33.t55 (cl @p_115) :rule resolution :premises (t33.t45 t33.t48 t33.t54))
(step t33.t56 (cl @p_114 @p_111) :rule implies :premises (t33.t55))
(step t33.t57 (cl (not @p_112) (not (forall ((?v0 Real)) (= (fun_app$ x_coord_inv$ (fun_app$ x_coord$ ?v0)) ?v0))) (forall ((?v0 Real)) (= ?v0 (fun_app$ x_coord_inv$ (fun_app$ x_coord$ ?v0))))) :rule equiv_pos2)
(anchor :step t33.t58 :args ((?v0 Real) (:= ?v0 ?v0)))
(step t33.t58.t0 (cl (= (= @p_113 ?v0) (= ?v0 @p_113))) :rule hole)
(step t33.t58 (cl @p_112) :rule bind)
(step t33.t59 (cl (forall ((?v0 Real)) (= ?v0 (fun_app$ x_coord_inv$ (fun_app$ x_coord$ ?v0))))) :rule resolution :premises (t33.t57 t33.t58 a130))
(step t33.t60 (cl @p_111) :rule resolution :premises (t33.t56 t33.t59))
(step t33.t61 (cl @p_169) :rule resolution :premises (t33.t42 t33.t44 t33.t60))
(step t33.t62 (cl @p_212) :rule resolution :premises (t33.t41 t33.t29 t33.t61))
(step t33.t63 (cl @p_211) :rule resolution :premises (t33.t40 t33.t62))
(step t33.t64 (cl (=> (! (and (! (> 1.0 0.0) :named @p_152) (! (= @p_143 1.0) :named @p_161)) :named @p_210) @p_209)) :rule la_mult_pos)
(step t33.t65 (cl (not @p_210) @p_209) :rule implies :premises (t33.t64))
(step t33.t66 (cl @p_210 (! (not @p_152) :named @p_158) (! (not @p_161) :named @p_167)) :rule and_neg)
(step t33.t67 (cl (= (! (= @p_152 true) :named @p_157) @p_152)) :rule equiv_simplify)
(step t33.t68 (cl (not @p_157) @p_152) :rule equiv1 :premises (t33.t67))
(step t33.t69 (cl @p_157) :rule hole :args ("evaluate"))
(step t33.t70 (cl @p_152) :rule resolution :premises (t33.t68 t33.t69))
(step t33.t71 (cl (not (! (= @p_120 @p_161) :named @p_164)) @p_125 @p_161) :rule equiv_pos2)
(step t33.t72 (cl (= @p_161 @p_120)) :rule hole)
(step t33.t73 (cl @p_164) :rule symm :premises (t33.t72))
(step t33.t74 (cl (not (! (= (! (=> (forall ((?v0 Real)) (= ?v0 (fun_app$ x_coord_inv$ (fun_app$ x_coord$ ?v0)))) (! (= @p_49 @p_51) :named @p_122)) :named @p_123) (! (=> (forall ((?v0 Real)) (= ?v0 (fun_app$ x_coord_inv$ (fun_app$ x_coord$ ?v0)))) @p_120) :named @p_121)) :named @p_124)) (not @p_123) @p_121) :rule equiv_pos2)
(step t33.t75 (cl (= @p_122 @p_120)) :rule hole)
(step t33.t76 (cl @p_124) :rule cong :premises (t33.t46 t33.t75))
(step t33.t77 (cl @p_123 (forall ((?v0 Real)) (= ?v0 (fun_app$ x_coord_inv$ (fun_app$ x_coord$ ?v0))))) :rule implies_neg1)
(anchor :step t33.t78)
(assume t33.t78.a0 (forall ((?v0 Real)) (= ?v0 (fun_app$ x_coord_inv$ (fun_app$ x_coord$ ?v0)))))
(step t33.t78.t0 (cl (or @p_114 @p_122)) :rule forall_inst :args ((:= ?v0 @p_49)))
(step t33.t78.t1 (cl @p_114 @p_122) :rule or :premises (t33.t78.t0))
(step t33.t78.t2 (cl @p_122) :rule resolution :premises (t33.t78.t1 t33.t59))
(step t33.t78 (cl @p_114 @p_122) :rule subproof :discharge (t33.t78.a0))
(step t33.t79 (cl @p_123 @p_122) :rule resolution :premises (t33.t77 t33.t78))
(step t33.t80 (cl @p_123 (not @p_122)) :rule implies_neg2)
(step t33.t81 (cl @p_123 @p_123) :rule resolution :premises (t33.t79 t33.t80))
(step t33.t82 (cl @p_123) :rule contraction :premises (t33.t81))
(step t33.t83 (cl @p_121) :rule resolution :premises (t33.t74 t33.t76 t33.t82))
(step t33.t84 (cl @p_114 @p_120) :rule implies :premises (t33.t83))
(step t33.t85 (cl @p_120) :rule resolution :premises (t33.t84 t33.t59))
(step t33.t86 (cl @p_161) :rule resolution :premises (t33.t71 t33.t73 t33.t85))
(step t33.t87 (cl @p_210) :rule resolution :premises (t33.t66 t33.t70 t33.t86))
(step t33.t88 (cl @p_209) :rule resolution :premises (t33.t65 t33.t87))
(step t33.t89 (cl (=> (! (and @p_162 (! (= @p_141 0.0) :named @p_151)) :named @p_208) @p_207)) :rule la_mult_neg)
(step t33.t90 (cl (not @p_208) @p_207) :rule implies :premises (t33.t89))
(step t33.t91 (cl @p_208 @p_166 (! (not @p_151) :named @p_159)) :rule and_neg)
(step t33.t92 (cl (! (not (! (= @p_52 @p_151) :named @p_155)) :named @p_156) @p_109 @p_151) :rule equiv_pos2)
(step t33.t93 (cl (= @p_151 @p_52)) :rule hole)
(step t33.t94 (cl @p_155) :rule symm :premises (t33.t93))
(step t33.t95 (cl @p_151) :rule resolution :premises (t33.t92 t33.t94 t33.a2))
(step t33.t96 (cl @p_208) :rule resolution :premises (t33.t91 t33.t29 t33.t95))
(step t33.t97 (cl @p_207) :rule resolution :premises (t33.t90 t33.t96))
(step t33.t98 (cl @p_206) :rule resolution :premises (t33.t22 t33.t38 t33.t63 t33.t88 t33.t97))
(step t33.t99 (cl false) :rule resolution :premises (t33.t0 t33.t21 t33.t98))
(step t33 (cl @p_126 @p_125 @p_109 @p_194 false) :rule subproof :discharge (t33.a0 t33.a1 t33.a2 t33.a3))
(step t34 (cl (! (not @p_196) :named @p_197) @p_111) :rule and_pos)
(step t35 (cl @p_197 @p_120) :rule and_pos)
(step t36 (cl @p_197 @p_52) :rule and_pos)
(step t37 (cl @p_197 @p_193) :rule and_pos)
(step t38 (cl false @p_197 @p_197 @p_197 @p_197) :rule resolution :premises (t33 t34 t35 t36 t37))
(step t39 (cl @p_197 @p_197 @p_197 @p_197 false) :rule reordering :premises (t38))
(step t40 (cl @p_197 false) :rule contraction :premises (t39))
(step t41 (cl @p_198 false) :rule resolution :premises (t32 t40))
(step t42 (cl @p_198 (! (not false) :named @p_101)) :rule implies_neg2)
(step t43 (cl @p_198 @p_198) :rule resolution :premises (t41 t42))
(step t44 (cl @p_198) :rule contraction :premises (t43))
(step t45 (cl (= @p_198 @p_197)) :rule implies_simplify)
(step t46 (cl (not @p_198) @p_197) :rule equiv1 :premises (t45))
(step t47 (cl @p_197) :rule resolution :premises (t44 t46))
(step t48 (cl @p_126 @p_125 @p_109 @p_194) :rule not_and :premises (t47))
(step t49 (cl @p_195 (! (not @p_126) :named @p_133)) :rule or_neg)
(step t50 (cl @p_195 (! (not @p_125) :named @p_132)) :rule or_neg)
(step t51 (cl @p_195 (! (not @p_109) :named @p_131)) :rule or_neg)
(step t52 (cl @p_195 (not @p_194)) :rule or_neg)
(step t53 (cl @p_195 @p_195 @p_195 @p_195) :rule resolution :premises (t48 t49 t50 t51 t52))
(step t54 (cl @p_195) :rule contraction :premises (t53))
(step t55 (cl @p_192) :rule resolution :premises (t26 t31 t54))
(step t56 (cl @p_126 @p_125 @p_109 @p_191) :rule or :premises (t55))
(step t57 (cl @p_191 @p_125 @p_126 @p_109) :rule reordering :premises (t56))
(step t58 (cl (not @p_124) (not @p_123) @p_121) :rule equiv_pos2)
(step t59 (cl (= (forall ((?v0 Real)) (= ?v0 (fun_app$ x_coord_inv$ (fun_app$ x_coord$ ?v0)))) (forall ((?v0 Real)) (= ?v0 (fun_app$ x_coord_inv$ (fun_app$ x_coord$ ?v0)))))) :rule refl)
(step t60 (cl (= @p_122 @p_120)) :rule hole)
(step t61 (cl @p_124) :rule cong :premises (t59 t60))
(step t62 (cl @p_123 (forall ((?v0 Real)) (= ?v0 (fun_app$ x_coord_inv$ (fun_app$ x_coord$ ?v0))))) :rule implies_neg1)
(anchor :step t63)
(assume t63.a0 (forall ((?v0 Real)) (= ?v0 (fun_app$ x_coord_inv$ (fun_app$ x_coord$ ?v0)))))
(step t63.t0 (cl (or @p_114 @p_122)) :rule forall_inst :args ((:= ?v0 @p_49)))
(step t63.t1 (cl @p_114 @p_122) :rule or :premises (t63.t0))
(step t63.t2 (cl (not @p_112) (not (forall ((?v0 Real)) (= (fun_app$ x_coord_inv$ (fun_app$ x_coord$ ?v0)) ?v0))) (forall ((?v0 Real)) (= ?v0 (fun_app$ x_coord_inv$ (fun_app$ x_coord$ ?v0))))) :rule equiv_pos2)
(anchor :step t63.t3 :args ((?v0 Real) (:= ?v0 ?v0)))
(step t63.t3.t0 (cl (= (= @p_113 ?v0) (= ?v0 @p_113))) :rule hole)
(step t63.t3 (cl @p_112) :rule bind)
(step t63.t4 (cl (forall ((?v0 Real)) (= ?v0 (fun_app$ x_coord_inv$ (fun_app$ x_coord$ ?v0))))) :rule resolution :premises (t63.t2 t63.t3 a130))
(step t63.t5 (cl @p_122) :rule resolution :premises (t63.t1 t63.t4))
(step t63 (cl @p_114 @p_122) :rule subproof :discharge (t63.a0))
(step t64 (cl @p_123 @p_122) :rule resolution :premises (t62 t63))
(step t65 (cl @p_123 (not @p_122)) :rule implies_neg2)
(step t66 (cl @p_123 @p_123) :rule resolution :premises (t64 t65))
(step t67 (cl @p_123) :rule contraction :premises (t66))
(step t68 (cl @p_121) :rule resolution :premises (t58 t61 t67))
(step t69 (cl @p_114 @p_120) :rule implies :premises (t68))
(step t70 (cl (not @p_112) (not (forall ((?v0 Real)) (= (fun_app$ x_coord_inv$ (fun_app$ x_coord$ ?v0)) ?v0))) (forall ((?v0 Real)) (= ?v0 (fun_app$ x_coord_inv$ (fun_app$ x_coord$ ?v0))))) :rule equiv_pos2)
(anchor :step t71 :args ((?v0 Real) (:= ?v0 ?v0)))
(step t71.t0 (cl (= (= @p_113 ?v0) (= ?v0 @p_113))) :rule hole)
(step t71 (cl @p_112) :rule bind)
(step t72 (cl (forall ((?v0 Real)) (= ?v0 (fun_app$ x_coord_inv$ (fun_app$ x_coord$ ?v0))))) :rule resolution :premises (t70 t71 a130))
(step t73 (cl @p_120) :rule resolution :premises (t69 t72))
(step t74 (cl (not @p_118) (not @p_117) @p_115) :rule equiv_pos2)
(step t75 (cl (= @p_116 @p_111)) :rule hole)
(step t76 (cl @p_118) :rule cong :premises (t59 t75))
(step t77 (cl @p_117 (forall ((?v0 Real)) (= ?v0 (fun_app$ x_coord_inv$ (fun_app$ x_coord$ ?v0))))) :rule implies_neg1)
(anchor :step t78)
(assume t78.a0 (forall ((?v0 Real)) (= ?v0 (fun_app$ x_coord_inv$ (fun_app$ x_coord$ ?v0)))))
(step t78.t0 (cl (or @p_114 @p_116)) :rule forall_inst :args ((:= ?v0 @p_45)))
(step t78.t1 (cl @p_114 @p_116) :rule or :premises (t78.t0))
(step t78.t2 (cl @p_116) :rule resolution :premises (t78.t1 t72))
(step t78 (cl @p_114 @p_116) :rule subproof :discharge (t78.a0))
(step t79 (cl @p_117 @p_116) :rule resolution :premises (t77 t78))
(step t80 (cl @p_117 (not @p_116)) :rule implies_neg2)
(step t81 (cl @p_117 @p_117) :rule resolution :premises (t79 t80))
(step t82 (cl @p_117) :rule contraction :premises (t81))
(step t83 (cl @p_115) :rule resolution :premises (t74 t76 t82))
(step t84 (cl @p_114 @p_111) :rule implies :premises (t83))
(step t85 (cl @p_111) :rule resolution :premises (t84 t72))
(step t86 (cl (! (=> (! (= @p_50 @p_46) :named @p_53) @p_52) :named @p_108) @p_53) :rule implies_neg1)
(anchor :step t87)
(assume t87.a0 @p_53)
(step t87.t0 (cl @p_108 @p_53) :rule implies_neg1)
(anchor :step t87.t1)
(assume t87.t1.a0 @p_53)
(step t87.t1.t0 (cl (= x_coord_inv$ x_coord_inv$)) :rule refl)
(step t87.t1.t1 (cl (= @p_46 @p_50)) :rule symm :premises (t87.t1.a0))
(step t87.t1.t2 (cl @p_53) :rule symm :premises (t87.t1.t1))
(step t87.t1.t3 (cl @p_52) :rule cong :premises (t87.t1.t0 t87.t1.t2))
(step t87.t1 (cl (! (not @p_53) :named @p_81) @p_52) :rule subproof :discharge (t87.t1.a0))
(step t87.t2 (cl @p_108 @p_52) :rule resolution :premises (t87.t0 t87.t1))
(step t87.t3 (cl @p_108 @p_109) :rule implies_neg2)
(step t87.t4 (cl @p_108 @p_108) :rule resolution :premises (t87.t2 t87.t3))
(step t87.t5 (cl @p_108) :rule contraction :premises (t87.t4))
(step t87.t6 (cl @p_81 @p_52) :rule implies :premises (t87.t5))
(step t87.t7 (cl @p_52) :rule resolution :premises (t87.t6 t87.a0))
(step t87 (cl @p_81 @p_52) :rule subproof :discharge (t87.a0))
(step t88 (cl @p_108 @p_52) :rule resolution :premises (t86 t87))
(step t89 (cl @p_108 @p_109) :rule implies_neg2)
(step t90 (cl @p_108 @p_108) :rule resolution :premises (t88 t89))
(step t91 (cl @p_108) :rule contraction :premises (t90))
(step t92 (cl @p_81 @p_52) :rule implies :premises (t91))
(step t93 (cl (not (! (= (! (or @p_23 (! (not (! (= @p_15 (! (* 2 @p_50) :named @p_72)) :named @p_73)) :named @p_78) (! (not (! (= @p_21 (! (* 2 @p_46) :named @p_54)) :named @p_55)) :named @p_79) (! (not @p_81) :named @p_82)) :named @p_83) (! (or @p_23 @p_78 @p_79 @p_53) :named @p_80)) :named @p_107)) (not @p_83) @p_80) :rule equiv_pos2)
(step t94 (cl (= @p_23 @p_23)) :rule refl)
(step t95 (cl (= @p_78 @p_78)) :rule refl)
(step t96 (cl (= @p_79 @p_79)) :rule refl)
(step t97 (cl (= @p_82 @p_53)) :rule hole)
(step t98 (cl @p_107) :rule cong :premises (t94 t95 t96 t97))
(step t99 (cl (not (! (= (! (=> (! (and @p_22 @p_73 @p_55 @p_81) :named @p_84) (! (and (! (= @p_72 @p_54) :named @p_86) @p_81) :named @p_87)) :named @p_88) (! (not @p_84) :named @p_85)) :named @p_97)) (not @p_88) @p_85) :rule equiv_pos2)
(step t100 (cl (= @p_84 @p_84)) :rule refl)
(step t101 (cl (= (! (= @p_87 false) :named @p_99) (! (not @p_87) :named @p_89))) :rule equiv_simplify)
(step t102 (cl @p_99 (! (not @p_89) :named @p_106)) :rule equiv2 :premises (t101))
(step t103 (cl (not @p_106) @p_87) :rule not_not)
(step t104 (cl @p_99 @p_87) :rule resolution :premises (t102 t103))
(step t105 (cl (! (=> @p_87 false) :named @p_100) @p_87) :rule implies_neg1)
(anchor :step t106)
(assume t106.a0 @p_86)
(assume t106.a1 @p_81)
(step t106.t0 (cl (not (! (= @p_86 (! (= (+ @p_50 (* (- 1) @p_46)) 0.0) :named @p_102)) :named @p_105)) (! (not @p_86) :named @p_96) @p_102) :rule equiv_pos2)
(step t106.t1 (cl (= @p_86 @p_53)) :rule hole)
(step t106.t2 (cl (= @p_102 @p_53)) :rule hole)
(step t106.t3 (cl (= @p_53 @p_102)) :rule symm :premises (t106.t2))
(step t106.t4 (cl @p_105) :rule trans :premises (t106.t1 t106.t3))
(step t106.t5 (cl (or (! (not (forall ((?v0 Real)) (= (fun_app$ uu$ ?v0) (* 2 (fun_app$ x_coord$ (+ 1 (* (- 1) ?v0))))))) :named @p_70) @p_73)) :rule forall_inst :args ((:= ?v0 @p_13)))
(step t106.t6 (cl @p_70 @p_73) :rule or :premises (t106.t5))
(step t106.t7 (cl (not (! (= (forall ((?v0 Real)) (= (fun_app$ uu$ ?v0) (* 2.0 (fun_app$ x_coord$ (- 1.0 ?v0))))) (forall ((?v0 Real)) (= (fun_app$ uu$ ?v0) (* 2 (fun_app$ x_coord$ (+ 1 (* (- 1) ?v0))))))) :named @p_56)) (not (forall ((?v0 Real)) (= (fun_app$ uu$ ?v0) (* 2.0 (fun_app$ x_coord$ (- 1.0 ?v0)))))) (forall ((?v0 Real)) (= (fun_app$ uu$ ?v0) (* 2 (fun_app$ x_coord$ (+ 1 (* (- 1) ?v0))))))) :rule equiv_pos2)
(anchor :step t106.t8 :args ((?v0 Real) (:= ?v0 ?v0)))
(step t106.t8.t0 (cl (= (! (fun_app$ uu$ ?v0) :named @p_62) @p_62)) :rule refl)
(step t106.t8.t1 (cl (= 2.0 2.0)) :rule refl)
(step t106.t8.t2 (cl (= x_coord$ x_coord$)) :rule refl)
(step t106.t8.t3 (cl (= (! (- 1.0 ?v0) :named @p_63) (! (+ 1.0 (! (* (- 1.0) ?v0) :named @p_67)) :named @p_68))) :rule hole)
(step t106.t8.t4 (cl @p_3) :rule refl)
(step t106.t8.t5 (cl (= @p_67 (! (* (- 1) ?v0) :named @p_58))) :rule hole)
(step t106.t8.t6 (cl (= @p_68 (! (+ 1.0 @p_58) :named @p_69))) :rule cong :premises (t106.t8.t4 t106.t8.t5))
(step t106.t8.t7 (cl (= @p_69 (! (+ 1 @p_58) :named @p_59))) :rule hole)
(step t106.t8.t8 (cl (= @p_68 @p_59)) :rule trans :premises (t106.t8.t6 t106.t8.t7))
(step t106.t8.t9 (cl (= @p_63 @p_59)) :rule trans :premises (t106.t8.t3 t106.t8.t8))
(step t106.t8.t10 (cl (= (! (fun_app$ x_coord$ @p_63) :named @p_64) (! (fun_app$ x_coord$ @p_59) :named @p_60))) :rule cong :premises (t106.t8.t2 t106.t8.t9))
(step t106.t8.t11 (cl (= (! (* 2.0 @p_64) :named @p_65) (! (* 2.0 @p_60) :named @p_66))) :rule cong :premises (t106.t8.t1 t106.t8.t10))
(step t106.t8.t12 (cl (= @p_66 (! (* 2 @p_60) :named @p_61))) :rule hole)
(step t106.t8.t13 (cl (= @p_65 @p_61)) :rule trans :premises (t106.t8.t11 t106.t8.t12))
(step t106.t8.t14 (cl (= (= @p_62 @p_65) (= @p_62 @p_61))) :rule cong :premises (t106.t8.t0 t106.t8.t13))
(step t106.t8 (cl @p_56) :rule bind)
(step t106.t9 (cl (forall ((?v0 Real)) (= (fun_app$ uu$ ?v0) (* 2 (fun_app$ x_coord$ (+ 1 (* (- 1) ?v0))))))) :rule resolution :premises (t106.t7 t106.t8 a0))
(step t106.t10 (cl @p_73) :rule resolution :premises (t106.t6 t106.t9))
(step t106.t11 (cl (= @p_72 @p_15)) :rule symm :premises (t106.t10))
(step t106.t12 (cl (not (! (= (! (or @p_24 (! (not @p_23) :named @p_75)) :named @p_76) (! (or @p_24 @p_22) :named @p_74)) :named @p_77)) (not @p_76) @p_74) :rule equiv_pos2)
(step t106.t13 (cl (= @p_24 @p_24)) :rule refl)
(step t106.t14 (cl (= @p_75 @p_22)) :rule hole)
(step t106.t15 (cl @p_77) :rule cong :premises (t106.t13 t106.t14))
(step t106.t16 (cl @p_24 @p_75) :rule or_neg)
(step t106.t17 (cl @p_76 @p_25) :rule or_neg)
(step t106.t18 (cl @p_76 (not @p_75)) :rule or_neg)
(step t106.t19 (cl @p_76 @p_76) :rule resolution :premises (t106.t16 t106.t17 t106.t18))
(step t106.t20 (cl @p_76) :rule contraction :premises (t106.t19))
(step t106.t21 (cl @p_74) :rule resolution :premises (t106.t12 t106.t15 t106.t20))
(step t106.t22 (cl @p_24 @p_22) :rule or :premises (t106.t21))
(step t106.t23 (cl @p_22 @p_24) :rule reordering :premises (t106.t22))
(step t106.t24 (cl (not @p_41) (not @p_26) @p_25) :rule equiv_pos2)
(anchor :step t106.t25 :args ((:= ?v2 @p_13) (:= BOUND_VARIABLE_1236 @p_18)))
(step t106.t25.t0 (cl (= (or (not (member$ ?v2 @p_7)) @p_16 (not (= (fun_app$ uu$ ?v2) @p_14)) @p_32) @p_24)) :rule refl)
(step t106.t25 (cl (= (forall ((?v2 Real) (BOUND_VARIABLE_1236 Real)) (or (not (member$ ?v2 (collect$b top$d))) (not (member$ BOUND_VARIABLE_1236 (collect$b top$d))) (not (= (fun_app$ uu$ ?v2) (fun_app$ uu$ BOUND_VARIABLE_1236))) (= ?v2 BOUND_VARIABLE_1236))) @p_24)) :rule sko_forall)
(step t106.t26 (cl @p_41) :rule cong :premises (t106.t25))
(step t106.t27 (cl @p_40 @p_27 @p_26) :rule equiv_pos1)
(step t106.t28 (cl @p_27 @p_26 @p_40) :rule reordering :premises (t106.t27))
(step t106.t29 (cl (not @p_39) (not @p_2) @p_38) :rule equiv_pos2)
(step t106.t30 (cl (= uu$ uu$)) :rule refl)
(step t106.t31 (cl (= @p_1 @p_27)) :rule cong :premises (t106.t30 a160))
(step t106.t32 (cl @p_39) :rule cong :premises (t106.t31))
(step t106.t33 (cl @p_38) :rule resolution :premises (t106.t29 t106.t32 a14))
(step t106.t34 (cl (or @p_37 @p_28)) :rule forall_inst :args ((:= ?v0 uu$) (:= ?v1 @p_7)))
(step t106.t35 (cl @p_37 @p_28) :rule or :premises (t106.t34))
(step t106.t36 (cl (not @p_29) (not (forall ((?v0 Real_real_fun$) (?v1 Real_set$)) (= (inj_on$ ?v0 ?v1) (forall ((?v2 Real)) (=> (member$ ?v2 ?v1) (forall ((?v3 Real)) (=> (and (member$ ?v3 ?v1) (= (fun_app$ ?v0 ?v2) (fun_app$ ?v0 ?v3))) (= ?v2 ?v3)))))))) (forall ((?v0 Real_real_fun$) (?v1 Real_set$)) (= (inj_on$ ?v0 ?v1) (forall ((?v2 Real) (BOUND_VARIABLE_1236 Real)) (or (not (member$ ?v2 ?v1)) (not (member$ BOUND_VARIABLE_1236 ?v1)) (not (= (fun_app$ ?v0 ?v2) (fun_app$ ?v0 BOUND_VARIABLE_1236))) (= ?v2 BOUND_VARIABLE_1236)))))) :rule equiv_pos2)
(anchor :step t106.t37 :args ((?v0 Real_real_fun$) (?v1 Real_set$) (:= ?v0 ?v0) (:= ?v1 ?v1)))
(step t106.t37.t0 (cl (= @p_30 @p_30)) :rule refl)
(anchor :step t106.t37.t1 :args ((?v2 Real) (:= ?v2 ?v2)))
(step t106.t37.t1.t0 (cl (= @p_35 @p_35)) :rule refl)
(step t106.t37.t1.t1 (cl (= (forall ((?v3 Real)) (=> (and (member$ ?v3 ?v1) (= (fun_app$ ?v0 ?v2) (fun_app$ ?v0 ?v3))) (= ?v2 ?v3))) (forall ((?v3 Real)) (or (not (member$ ?v3 ?v1)) (not (= (fun_app$ ?v0 ?v2) (fun_app$ ?v0 ?v3))) (= ?v2 ?v3))))) :rule hole)
(step t106.t37.t1.t2 (cl (= (=> @p_35 (forall ((?v3 Real)) (=> (and (member$ ?v3 ?v1) (= (fun_app$ ?v0 ?v2) (fun_app$ ?v0 ?v3))) (= ?v2 ?v3)))) (=> @p_35 (forall ((?v3 Real)) (or (not (member$ ?v3 ?v1)) (not (= (fun_app$ ?v0 ?v2) (fun_app$ ?v0 ?v3))) (= ?v2 ?v3)))))) :rule cong :premises (t106.t37.t1.t0 t106.t37.t1.t1))
(step t106.t37.t1 (cl (= (forall ((?v2 Real)) (=> (member$ ?v2 ?v1) (forall ((?v3 Real)) (=> (and (member$ ?v3 ?v1) (= (fun_app$ ?v0 ?v2) (fun_app$ ?v0 ?v3))) (= ?v2 ?v3))))) (forall ((?v2 Real)) (=> (member$ ?v2 ?v1) (forall ((?v3 Real)) (or (not (member$ ?v3 ?v1)) (not (= (fun_app$ ?v0 ?v2) (fun_app$ ?v0 ?v3))) (= ?v2 ?v3))))))) :rule bind)
(step t106.t37.t2 (cl (= (forall ((?v2 Real)) (=> (member$ ?v2 ?v1) (forall ((?v3 Real)) (or (not (member$ ?v3 ?v1)) (not (= (fun_app$ ?v0 ?v2) (fun_app$ ?v0 ?v3))) (= ?v2 ?v3))))) (forall ((?v2 Real)) (or (not (member$ ?v2 ?v1)) (forall ((?v3 Real)) (or (not (member$ ?v3 ?v1)) (not (= (fun_app$ ?v0 ?v2) (fun_app$ ?v0 ?v3))) (= ?v2 ?v3))))))) :rule hole)
(step t106.t37.t3 (cl (= (forall ((?v2 Real)) (or (not (member$ ?v2 ?v1)) (forall ((?v3 Real)) (or (not (member$ ?v3 ?v1)) (not (= (fun_app$ ?v0 ?v2) (fun_app$ ?v0 ?v3))) (= ?v2 ?v3))))) (forall ((?v2 Real) (BOUND_VARIABLE_1236 Real)) (or (not (member$ ?v2 ?v1)) (or (not (member$ BOUND_VARIABLE_1236 ?v1)) (not (= (fun_app$ ?v0 ?v2) (fun_app$ ?v0 BOUND_VARIABLE_1236))) (= ?v2 BOUND_VARIABLE_1236)))))) :rule hole)
(anchor :step t106.t37.t4 :args ((?v2 Real) (BOUND_VARIABLE_1236 Real) (:= ?v2 ?v2) (:= BOUND_VARIABLE_1236 BOUND_VARIABLE_1236)))
(step t106.t37.t4.t0 (cl (= (or @p_36 (or @p_34 @p_33 @p_32)) (or @p_36 @p_34 @p_33 @p_32))) :rule hole)
(step t106.t37.t4 (cl (= (forall ((?v2 Real) (BOUND_VARIABLE_1236 Real)) (or (not (member$ ?v2 ?v1)) (or (not (member$ BOUND_VARIABLE_1236 ?v1)) (not (= (fun_app$ ?v0 ?v2) (fun_app$ ?v0 BOUND_VARIABLE_1236))) (= ?v2 BOUND_VARIABLE_1236)))) (forall ((?v2 Real) (BOUND_VARIABLE_1236 Real)) (or (not (member$ ?v2 ?v1)) (not (member$ BOUND_VARIABLE_1236 ?v1)) (not (= (fun_app$ ?v0 ?v2) (fun_app$ ?v0 BOUND_VARIABLE_1236))) (= ?v2 BOUND_VARIABLE_1236))))) :rule bind)
(step t106.t37.t5 (cl (= (forall ((?v2 Real)) (or (not (member$ ?v2 ?v1)) (forall ((?v3 Real)) (or (not (member$ ?v3 ?v1)) (not (= (fun_app$ ?v0 ?v2) (fun_app$ ?v0 ?v3))) (= ?v2 ?v3))))) (forall ((?v2 Real) (BOUND_VARIABLE_1236 Real)) (or (not (member$ ?v2 ?v1)) (not (member$ BOUND_VARIABLE_1236 ?v1)) (not (= (fun_app$ ?v0 ?v2) (fun_app$ ?v0 BOUND_VARIABLE_1236))) (= ?v2 BOUND_VARIABLE_1236))))) :rule trans :premises (t106.t37.t3 t106.t37.t4))
(step t106.t37.t6 (cl (= (forall ((?v2 Real)) (=> (member$ ?v2 ?v1) (forall ((?v3 Real)) (or (not (member$ ?v3 ?v1)) (not (= (fun_app$ ?v0 ?v2) (fun_app$ ?v0 ?v3))) (= ?v2 ?v3))))) (forall ((?v2 Real) (BOUND_VARIABLE_1236 Real)) (or (not (member$ ?v2 ?v1)) (not (member$ BOUND_VARIABLE_1236 ?v1)) (not (= (fun_app$ ?v0 ?v2) (fun_app$ ?v0 BOUND_VARIABLE_1236))) (= ?v2 BOUND_VARIABLE_1236))))) :rule trans :premises (t106.t37.t2 t106.t37.t5))
(step t106.t37.t7 (cl (= (forall ((?v2 Real)) (=> (member$ ?v2 ?v1) (forall ((?v3 Real)) (=> (and (member$ ?v3 ?v1) (= (fun_app$ ?v0 ?v2) (fun_app$ ?v0 ?v3))) (= ?v2 ?v3))))) (forall ((?v2 Real) (BOUND_VARIABLE_1236 Real)) (or (not (member$ ?v2 ?v1)) (not (member$ BOUND_VARIABLE_1236 ?v1)) (not (= (fun_app$ ?v0 ?v2) (fun_app$ ?v0 BOUND_VARIABLE_1236))) (= ?v2 BOUND_VARIABLE_1236))))) :rule trans :premises (t106.t37.t1 t106.t37.t6))
(step t106.t37.t8 (cl (= (= @p_30 (forall ((?v2 Real)) (=> (member$ ?v2 ?v1) (forall ((?v3 Real)) (=> (and (member$ ?v3 ?v1) (= (fun_app$ ?v0 ?v2) (fun_app$ ?v0 ?v3))) (= ?v2 ?v3)))))) (= @p_30 (forall ((?v2 Real) (BOUND_VARIABLE_1236 Real)) (or (not (member$ ?v2 ?v1)) (not (member$ BOUND_VARIABLE_1236 ?v1)) (not (= (fun_app$ ?v0 ?v2) (fun_app$ ?v0 BOUND_VARIABLE_1236))) (= ?v2 BOUND_VARIABLE_1236)))))) :rule cong :premises (t106.t37.t0 t106.t37.t7))
(step t106.t37 (cl @p_29) :rule bind)
(step t106.t38 (cl (forall ((?v0 Real_real_fun$) (?v1 Real_set$)) (= (inj_on$ ?v0 ?v1) (forall ((?v2 Real) (BOUND_VARIABLE_1236 Real)) (or (not (member$ ?v2 ?v1)) (not (member$ BOUND_VARIABLE_1236 ?v1)) (not (= (fun_app$ ?v0 ?v2) (fun_app$ ?v0 BOUND_VARIABLE_1236))) (= ?v2 BOUND_VARIABLE_1236)))))) :rule resolution :premises (t106.t36 t106.t37 a91))
(step t106.t39 (cl @p_28) :rule resolution :premises (t106.t35 t106.t38))
(step t106.t40 (cl @p_26) :rule resolution :premises (t106.t28 t106.t33 t106.t39))
(step t106.t41 (cl @p_25) :rule resolution :premises (t106.t24 t106.t26 t106.t40))
(step t106.t42 (cl @p_22) :rule resolution :premises (t106.t23 t106.t41))
(step t106.t43 (cl (! (or @p_70 @p_55) :named @p_71)) :rule forall_inst :args ((:= ?v0 @p_18)))
(step t106.t44 (cl @p_70 @p_55) :rule or :premises (t106.t43))
(step t106.t45 (cl @p_55) :rule resolution :premises (t106.t44 t106.t9))
(step t106.t46 (cl @p_86) :rule trans :premises (t106.t11 t106.t42 t106.t45))
(step t106.t47 (cl @p_102) :rule resolution :premises (t106.t0 t106.t4 t106.t46))
(step t106.t48 (cl (not (! (= @p_81 (! (not @p_102) :named @p_103)) :named @p_104)) @p_82 @p_103) :rule equiv_pos2)
(step t106.t49 (cl (= @p_103 @p_81)) :rule cong :premises (t106.t2))
(step t106.t50 (cl @p_104) :rule symm :premises (t106.t49))
(step t106.t51 (cl @p_103) :rule resolution :premises (t106.t48 t106.t50 t106.a1))
(step t106.t52 (cl) :rule resolution :premises (t106.t47 t106.t51))
(step t106 (cl @p_96 @p_82 false) :rule subproof :discharge (t106.a0 t106.a1))
(step t107 (cl @p_89 @p_86) :rule and_pos)
(step t108 (cl @p_89 @p_81) :rule and_pos)
(step t109 (cl false @p_89 @p_89) :rule resolution :premises (t106 t107 t108))
(step t110 (cl @p_89 @p_89 false) :rule reordering :premises (t109))
(step t111 (cl @p_89 false) :rule contraction :premises (t110))
(step t112 (cl @p_100 false) :rule resolution :premises (t105 t111))
(step t113 (cl @p_100 @p_101) :rule implies_neg2)
(step t114 (cl @p_100 @p_100) :rule resolution :premises (t112 t113))
(step t115 (cl @p_100) :rule contraction :premises (t114))
(step t116 (cl (= @p_100 @p_89)) :rule implies_simplify)
(step t117 (cl (not @p_100) @p_89) :rule equiv1 :premises (t116))
(step t118 (cl @p_89) :rule resolution :premises (t115 t117))
(step t119 (cl @p_99) :rule resolution :premises (t104 t118))
(step t120 (cl (= @p_88 (! (=> @p_84 false) :named @p_98))) :rule cong :premises (t100 t119))
(step t121 (cl (= @p_98 @p_85)) :rule hole)
(step t122 (cl @p_97) :rule trans :premises (t120 t121))
(step t123 (cl @p_88 @p_84) :rule implies_neg1)
(anchor :step t124)
(assume t124.a0 @p_22)
(assume t124.a1 @p_73)
(assume t124.a2 @p_55)
(assume t124.a3 @p_81)
(step t124.t0 (cl @p_87 @p_96 @p_82) :rule and_neg)
(step t124.t1 (cl (or @p_70 @p_73)) :rule forall_inst :args ((:= ?v0 @p_13)))
(step t124.t2 (cl @p_70 @p_73) :rule or :premises (t124.t1))
(step t124.t3 (cl (not @p_56) (not (forall ((?v0 Real)) (= (fun_app$ uu$ ?v0) (* 2.0 (fun_app$ x_coord$ (- 1.0 ?v0)))))) (forall ((?v0 Real)) (= (fun_app$ uu$ ?v0) (* 2 (fun_app$ x_coord$ (+ 1 (* (- 1) ?v0))))))) :rule equiv_pos2)
(anchor :step t124.t4 :args ((?v0 Real) (:= ?v0 ?v0)))
(step t124.t4.t0 (cl (= @p_62 @p_62)) :rule refl)
(step t124.t4.t1 (cl (= 2.0 2.0)) :rule refl)
(step t124.t4.t2 (cl (= x_coord$ x_coord$)) :rule refl)
(step t124.t4.t3 (cl (= @p_63 @p_68)) :rule hole)
(step t124.t4.t4 (cl @p_3) :rule refl)
(step t124.t4.t5 (cl (= @p_67 @p_58)) :rule hole)
(step t124.t4.t6 (cl (= @p_68 @p_69)) :rule cong :premises (t124.t4.t4 t124.t4.t5))
(step t124.t4.t7 (cl (= @p_69 @p_59)) :rule hole)
(step t124.t4.t8 (cl (= @p_68 @p_59)) :rule trans :premises (t124.t4.t6 t124.t4.t7))
(step t124.t4.t9 (cl (= @p_63 @p_59)) :rule trans :premises (t124.t4.t3 t124.t4.t8))
(step t124.t4.t10 (cl (= @p_64 @p_60)) :rule cong :premises (t124.t4.t2 t124.t4.t9))
(step t124.t4.t11 (cl (= @p_65 @p_66)) :rule cong :premises (t124.t4.t1 t124.t4.t10))
(step t124.t4.t12 (cl (= @p_66 @p_61)) :rule hole)
(step t124.t4.t13 (cl (= @p_65 @p_61)) :rule trans :premises (t124.t4.t11 t124.t4.t12))
(step t124.t4.t14 (cl (= (= @p_62 @p_65) (= @p_62 @p_61))) :rule cong :premises (t124.t4.t0 t124.t4.t13))
(step t124.t4 (cl @p_56) :rule bind)
(step t124.t5 (cl (forall ((?v0 Real)) (= (fun_app$ uu$ ?v0) (* 2 (fun_app$ x_coord$ (+ 1 (* (- 1) ?v0))))))) :rule resolution :premises (t124.t3 t124.t4 a0))
(step t124.t6 (cl @p_73) :rule resolution :premises (t124.t2 t124.t5))
(step t124.t7 (cl (= @p_72 @p_15)) :rule symm :premises (t124.t6))
(step t124.t8 (cl (not @p_77) (not @p_76) @p_74) :rule equiv_pos2)
(step t124.t9 (cl (= @p_24 @p_24)) :rule refl)
(step t124.t10 (cl (= @p_75 @p_22)) :rule hole)
(step t124.t11 (cl @p_77) :rule cong :premises (t124.t9 t124.t10))
(step t124.t12 (cl @p_24 @p_75) :rule or_neg)
(step t124.t13 (cl @p_76 @p_25) :rule or_neg)
(step t124.t14 (cl @p_76 (not @p_75)) :rule or_neg)
(step t124.t15 (cl @p_76 @p_76) :rule resolution :premises (t124.t12 t124.t13 t124.t14))
(step t124.t16 (cl @p_76) :rule contraction :premises (t124.t15))
(step t124.t17 (cl @p_74) :rule resolution :premises (t124.t8 t124.t11 t124.t16))
(step t124.t18 (cl @p_24 @p_22) :rule or :premises (t124.t17))
(step t124.t19 (cl @p_22 @p_24) :rule reordering :premises (t124.t18))
(step t124.t20 (cl (not @p_41) (not @p_26) @p_25) :rule equiv_pos2)
(anchor :step t124.t21 :args ((:= ?v2 @p_13) (:= BOUND_VARIABLE_1236 @p_18)))
(step t124.t21.t0 (cl (= (or (not (member$ ?v2 @p_7)) @p_16 (not (= (fun_app$ uu$ ?v2) @p_14)) @p_32) @p_24)) :rule refl)
(step t124.t21 (cl (= (forall ((?v2 Real) (BOUND_VARIABLE_1236 Real)) (or (not (member$ ?v2 (collect$b top$d))) (not (member$ BOUND_VARIABLE_1236 (collect$b top$d))) (not (= (fun_app$ uu$ ?v2) (fun_app$ uu$ BOUND_VARIABLE_1236))) (= ?v2 BOUND_VARIABLE_1236))) @p_24)) :rule sko_forall)
(step t124.t22 (cl @p_41) :rule cong :premises (t124.t21))
(step t124.t23 (cl @p_40 @p_27 @p_26) :rule equiv_pos1)
(step t124.t24 (cl @p_27 @p_26 @p_40) :rule reordering :premises (t124.t23))
(step t124.t25 (cl (not @p_39) (not @p_2) @p_38) :rule equiv_pos2)
(step t124.t26 (cl (= uu$ uu$)) :rule refl)
(step t124.t27 (cl (= @p_1 @p_27)) :rule cong :premises (t124.t26 a160))
(step t124.t28 (cl @p_39) :rule cong :premises (t124.t27))
(step t124.t29 (cl @p_38) :rule resolution :premises (t124.t25 t124.t28 a14))
(step t124.t30 (cl (or @p_37 @p_28)) :rule forall_inst :args ((:= ?v0 uu$) (:= ?v1 @p_7)))
(step t124.t31 (cl @p_37 @p_28) :rule or :premises (t124.t30))
(step t124.t32 (cl (not @p_29) (not (forall ((?v0 Real_real_fun$) (?v1 Real_set$)) (= (inj_on$ ?v0 ?v1) (forall ((?v2 Real)) (=> (member$ ?v2 ?v1) (forall ((?v3 Real)) (=> (and (member$ ?v3 ?v1) (= (fun_app$ ?v0 ?v2) (fun_app$ ?v0 ?v3))) (= ?v2 ?v3)))))))) (forall ((?v0 Real_real_fun$) (?v1 Real_set$)) (= (inj_on$ ?v0 ?v1) (forall ((?v2 Real) (BOUND_VARIABLE_1236 Real)) (or (not (member$ ?v2 ?v1)) (not (member$ BOUND_VARIABLE_1236 ?v1)) (not (= (fun_app$ ?v0 ?v2) (fun_app$ ?v0 BOUND_VARIABLE_1236))) (= ?v2 BOUND_VARIABLE_1236)))))) :rule equiv_pos2)
(anchor :step t124.t33 :args ((?v0 Real_real_fun$) (?v1 Real_set$) (:= ?v0 ?v0) (:= ?v1 ?v1)))
(step t124.t33.t0 (cl (= @p_30 @p_30)) :rule refl)
(anchor :step t124.t33.t1 :args ((?v2 Real) (:= ?v2 ?v2)))
(step t124.t33.t1.t0 (cl (= @p_35 @p_35)) :rule refl)
(step t124.t33.t1.t1 (cl (= (forall ((?v3 Real)) (=> (and (member$ ?v3 ?v1) (= (fun_app$ ?v0 ?v2) (fun_app$ ?v0 ?v3))) (= ?v2 ?v3))) (forall ((?v3 Real)) (or (not (member$ ?v3 ?v1)) (not (= (fun_app$ ?v0 ?v2) (fun_app$ ?v0 ?v3))) (= ?v2 ?v3))))) :rule hole)
(step t124.t33.t1.t2 (cl (= (=> @p_35 (forall ((?v3 Real)) (=> (and (member$ ?v3 ?v1) (= (fun_app$ ?v0 ?v2) (fun_app$ ?v0 ?v3))) (= ?v2 ?v3)))) (=> @p_35 (forall ((?v3 Real)) (or (not (member$ ?v3 ?v1)) (not (= (fun_app$ ?v0 ?v2) (fun_app$ ?v0 ?v3))) (= ?v2 ?v3)))))) :rule cong :premises (t124.t33.t1.t0 t124.t33.t1.t1))
(step t124.t33.t1 (cl (= (forall ((?v2 Real)) (=> (member$ ?v2 ?v1) (forall ((?v3 Real)) (=> (and (member$ ?v3 ?v1) (= (fun_app$ ?v0 ?v2) (fun_app$ ?v0 ?v3))) (= ?v2 ?v3))))) (forall ((?v2 Real)) (=> (member$ ?v2 ?v1) (forall ((?v3 Real)) (or (not (member$ ?v3 ?v1)) (not (= (fun_app$ ?v0 ?v2) (fun_app$ ?v0 ?v3))) (= ?v2 ?v3))))))) :rule bind)
(step t124.t33.t2 (cl (= (forall ((?v2 Real)) (=> (member$ ?v2 ?v1) (forall ((?v3 Real)) (or (not (member$ ?v3 ?v1)) (not (= (fun_app$ ?v0 ?v2) (fun_app$ ?v0 ?v3))) (= ?v2 ?v3))))) (forall ((?v2 Real)) (or (not (member$ ?v2 ?v1)) (forall ((?v3 Real)) (or (not (member$ ?v3 ?v1)) (not (= (fun_app$ ?v0 ?v2) (fun_app$ ?v0 ?v3))) (= ?v2 ?v3))))))) :rule hole)
(step t124.t33.t3 (cl (= (forall ((?v2 Real)) (or (not (member$ ?v2 ?v1)) (forall ((?v3 Real)) (or (not (member$ ?v3 ?v1)) (not (= (fun_app$ ?v0 ?v2) (fun_app$ ?v0 ?v3))) (= ?v2 ?v3))))) (forall ((?v2 Real) (BOUND_VARIABLE_1236 Real)) (or (not (member$ ?v2 ?v1)) (or (not (member$ BOUND_VARIABLE_1236 ?v1)) (not (= (fun_app$ ?v0 ?v2) (fun_app$ ?v0 BOUND_VARIABLE_1236))) (= ?v2 BOUND_VARIABLE_1236)))))) :rule hole)
(anchor :step t124.t33.t4 :args ((?v2 Real) (BOUND_VARIABLE_1236 Real) (:= ?v2 ?v2) (:= BOUND_VARIABLE_1236 BOUND_VARIABLE_1236)))
(step t124.t33.t4.t0 (cl (= (or @p_36 (or @p_34 @p_33 @p_32)) (or @p_36 @p_34 @p_33 @p_32))) :rule hole)
(step t124.t33.t4 (cl (= (forall ((?v2 Real) (BOUND_VARIABLE_1236 Real)) (or (not (member$ ?v2 ?v1)) (or (not (member$ BOUND_VARIABLE_1236 ?v1)) (not (= (fun_app$ ?v0 ?v2) (fun_app$ ?v0 BOUND_VARIABLE_1236))) (= ?v2 BOUND_VARIABLE_1236)))) (forall ((?v2 Real) (BOUND_VARIABLE_1236 Real)) (or (not (member$ ?v2 ?v1)) (not (member$ BOUND_VARIABLE_1236 ?v1)) (not (= (fun_app$ ?v0 ?v2) (fun_app$ ?v0 BOUND_VARIABLE_1236))) (= ?v2 BOUND_VARIABLE_1236))))) :rule bind)
(step t124.t33.t5 (cl (= (forall ((?v2 Real)) (or (not (member$ ?v2 ?v1)) (forall ((?v3 Real)) (or (not (member$ ?v3 ?v1)) (not (= (fun_app$ ?v0 ?v2) (fun_app$ ?v0 ?v3))) (= ?v2 ?v3))))) (forall ((?v2 Real) (BOUND_VARIABLE_1236 Real)) (or (not (member$ ?v2 ?v1)) (not (member$ BOUND_VARIABLE_1236 ?v1)) (not (= (fun_app$ ?v0 ?v2) (fun_app$ ?v0 BOUND_VARIABLE_1236))) (= ?v2 BOUND_VARIABLE_1236))))) :rule trans :premises (t124.t33.t3 t124.t33.t4))
(step t124.t33.t6 (cl (= (forall ((?v2 Real)) (=> (member$ ?v2 ?v1) (forall ((?v3 Real)) (or (not (member$ ?v3 ?v1)) (not (= (fun_app$ ?v0 ?v2) (fun_app$ ?v0 ?v3))) (= ?v2 ?v3))))) (forall ((?v2 Real) (BOUND_VARIABLE_1236 Real)) (or (not (member$ ?v2 ?v1)) (not (member$ BOUND_VARIABLE_1236 ?v1)) (not (= (fun_app$ ?v0 ?v2) (fun_app$ ?v0 BOUND_VARIABLE_1236))) (= ?v2 BOUND_VARIABLE_1236))))) :rule trans :premises (t124.t33.t2 t124.t33.t5))
(step t124.t33.t7 (cl (= (forall ((?v2 Real)) (=> (member$ ?v2 ?v1) (forall ((?v3 Real)) (=> (and (member$ ?v3 ?v1) (= (fun_app$ ?v0 ?v2) (fun_app$ ?v0 ?v3))) (= ?v2 ?v3))))) (forall ((?v2 Real) (BOUND_VARIABLE_1236 Real)) (or (not (member$ ?v2 ?v1)) (not (member$ BOUND_VARIABLE_1236 ?v1)) (not (= (fun_app$ ?v0 ?v2) (fun_app$ ?v0 BOUND_VARIABLE_1236))) (= ?v2 BOUND_VARIABLE_1236))))) :rule trans :premises (t124.t33.t1 t124.t33.t6))
(step t124.t33.t8 (cl (= (= @p_30 (forall ((?v2 Real)) (=> (member$ ?v2 ?v1) (forall ((?v3 Real)) (=> (and (member$ ?v3 ?v1) (= (fun_app$ ?v0 ?v2) (fun_app$ ?v0 ?v3))) (= ?v2 ?v3)))))) (= @p_30 (forall ((?v2 Real) (BOUND_VARIABLE_1236 Real)) (or (not (member$ ?v2 ?v1)) (not (member$ BOUND_VARIABLE_1236 ?v1)) (not (= (fun_app$ ?v0 ?v2) (fun_app$ ?v0 BOUND_VARIABLE_1236))) (= ?v2 BOUND_VARIABLE_1236)))))) :rule cong :premises (t124.t33.t0 t124.t33.t7))
(step t124.t33 (cl @p_29) :rule bind)
(step t124.t34 (cl (forall ((?v0 Real_real_fun$) (?v1 Real_set$)) (= (inj_on$ ?v0 ?v1) (forall ((?v2 Real) (BOUND_VARIABLE_1236 Real)) (or (not (member$ ?v2 ?v1)) (not (member$ BOUND_VARIABLE_1236 ?v1)) (not (= (fun_app$ ?v0 ?v2) (fun_app$ ?v0 BOUND_VARIABLE_1236))) (= ?v2 BOUND_VARIABLE_1236)))))) :rule resolution :premises (t124.t32 t124.t33 a91))
(step t124.t35 (cl @p_28) :rule resolution :premises (t124.t31 t124.t34))
(step t124.t36 (cl @p_26) :rule resolution :premises (t124.t24 t124.t29 t124.t35))
(step t124.t37 (cl @p_25) :rule resolution :premises (t124.t20 t124.t22 t124.t36))
(step t124.t38 (cl @p_22) :rule resolution :premises (t124.t19 t124.t37))
(step t124.t39 (cl @p_71) :rule forall_inst :args ((:= ?v0 @p_18)))
(step t124.t40 (cl @p_70 @p_55) :rule or :premises (t124.t39))
(step t124.t41 (cl @p_55) :rule resolution :premises (t124.t40 t124.t5))
(step t124.t42 (cl @p_86) :rule trans :premises (t124.t7 t124.t38 t124.t41))
(step t124.t43 (cl @p_87) :rule resolution :premises (t124.t0 t124.t42 t124.a3))
(step t124 (cl @p_23 @p_78 @p_79 @p_82 @p_87) :rule subproof :discharge (t124.a0 t124.a1 t124.a2 t124.a3))
(step t125 (cl @p_85 @p_22) :rule and_pos)
(step t126 (cl @p_85 @p_73) :rule and_pos)
(step t127 (cl @p_85 @p_55) :rule and_pos)
(step t128 (cl @p_85 @p_81) :rule and_pos)
(step t129 (cl @p_87 @p_85 @p_85 @p_85 @p_85) :rule resolution :premises (t124 t125 t126 t127 t128))
(step t130 (cl @p_85 @p_85 @p_85 @p_85 @p_87) :rule reordering :premises (t129))
(step t131 (cl @p_85 @p_87) :rule contraction :premises (t130))
(step t132 (cl @p_88 @p_87) :rule resolution :premises (t123 t131))
(step t133 (cl @p_88 @p_89) :rule implies_neg2)
(step t134 (cl @p_88 @p_88) :rule resolution :premises (t132 t133))
(step t135 (cl @p_88) :rule contraction :premises (t134))
(step t136 (cl @p_85) :rule resolution :premises (t99 t122 t135))
(step t137 (cl @p_23 @p_78 @p_79 @p_82) :rule not_and :premises (t136))
(step t138 (cl @p_83 @p_75) :rule or_neg)
(step t139 (cl @p_83 (not @p_78)) :rule or_neg)
(step t140 (cl @p_83 (not @p_79)) :rule or_neg)
(step t141 (cl @p_83 (not @p_82)) :rule or_neg)
(step t142 (cl @p_83 @p_83 @p_83 @p_83) :rule resolution :premises (t137 t138 t139 t140 t141))
(step t143 (cl @p_83) :rule contraction :premises (t142))
(step t144 (cl @p_80) :rule resolution :premises (t93 t98 t143))
(step t145 (cl @p_23 @p_78 @p_79 @p_53) :rule or :premises (t144))
(step t146 (cl (not @p_77) (not @p_76) @p_74) :rule equiv_pos2)
(step t147 (cl (= @p_24 @p_24)) :rule refl)
(step t148 (cl (= @p_75 @p_22)) :rule hole)
(step t149 (cl @p_77) :rule cong :premises (t147 t148))
(step t150 (cl @p_24 @p_75) :rule or_neg)
(step t151 (cl @p_76 @p_25) :rule or_neg)
(step t152 (cl @p_76 (not @p_75)) :rule or_neg)
(step t153 (cl @p_76 @p_76) :rule resolution :premises (t150 t151 t152))
(step t154 (cl @p_76) :rule contraction :premises (t153))
(step t155 (cl @p_74) :rule resolution :premises (t146 t149 t154))
(step t156 (cl @p_24 @p_22) :rule or :premises (t155))
(step t157 (cl @p_22 @p_24) :rule reordering :premises (t156))
(step t158 (cl (not @p_41) (not @p_26) @p_25) :rule equiv_pos2)
(anchor :step t159 :args ((:= ?v2 @p_13) (:= BOUND_VARIABLE_1236 @p_18)))
(step t159.t0 (cl (= (or (not (member$ ?v2 @p_7)) @p_16 (not (= (fun_app$ uu$ ?v2) @p_14)) @p_32) @p_24)) :rule refl)
(step t159 (cl (= (forall ((?v2 Real) (BOUND_VARIABLE_1236 Real)) (or (not (member$ ?v2 (collect$b top$d))) (not (member$ BOUND_VARIABLE_1236 (collect$b top$d))) (not (= (fun_app$ uu$ ?v2) (fun_app$ uu$ BOUND_VARIABLE_1236))) (= ?v2 BOUND_VARIABLE_1236))) @p_24)) :rule sko_forall)
(step t160 (cl @p_41) :rule cong :premises (t159))
(step t161 (cl @p_40 @p_27 @p_26) :rule equiv_pos1)
(step t162 (cl @p_27 @p_26 @p_40) :rule reordering :premises (t161))
(step t163 (cl (not @p_39) (not @p_2) @p_38) :rule equiv_pos2)
(step t164 (cl (= uu$ uu$)) :rule refl)
(step t165 (cl (= @p_1 @p_27)) :rule cong :premises (t164 a160))
(step t166 (cl @p_39) :rule cong :premises (t165))
(step t167 (cl @p_38) :rule resolution :premises (t163 t166 a14))
(step t168 (cl (or @p_37 @p_28)) :rule forall_inst :args ((:= ?v0 uu$) (:= ?v1 @p_7)))
(step t169 (cl @p_37 @p_28) :rule or :premises (t168))
(step t170 (cl (not @p_29) (not (forall ((?v0 Real_real_fun$) (?v1 Real_set$)) (= (inj_on$ ?v0 ?v1) (forall ((?v2 Real)) (=> (member$ ?v2 ?v1) (forall ((?v3 Real)) (=> (and (member$ ?v3 ?v1) (= (fun_app$ ?v0 ?v2) (fun_app$ ?v0 ?v3))) (= ?v2 ?v3)))))))) (forall ((?v0 Real_real_fun$) (?v1 Real_set$)) (= (inj_on$ ?v0 ?v1) (forall ((?v2 Real) (BOUND_VARIABLE_1236 Real)) (or (not (member$ ?v2 ?v1)) (not (member$ BOUND_VARIABLE_1236 ?v1)) (not (= (fun_app$ ?v0 ?v2) (fun_app$ ?v0 BOUND_VARIABLE_1236))) (= ?v2 BOUND_VARIABLE_1236)))))) :rule equiv_pos2)
(anchor :step t171 :args ((?v0 Real_real_fun$) (?v1 Real_set$) (:= ?v0 ?v0) (:= ?v1 ?v1)))
(step t171.t0 (cl (= @p_30 @p_30)) :rule refl)
(anchor :step t171.t1 :args ((?v2 Real) (:= ?v2 ?v2)))
(step t171.t1.t0 (cl (= @p_35 @p_35)) :rule refl)
(step t171.t1.t1 (cl (= (forall ((?v3 Real)) (=> (and (member$ ?v3 ?v1) (= (fun_app$ ?v0 ?v2) (fun_app$ ?v0 ?v3))) (= ?v2 ?v3))) (forall ((?v3 Real)) (or (not (member$ ?v3 ?v1)) (not (= (fun_app$ ?v0 ?v2) (fun_app$ ?v0 ?v3))) (= ?v2 ?v3))))) :rule hole)
(step t171.t1.t2 (cl (= (=> @p_35 (forall ((?v3 Real)) (=> (and (member$ ?v3 ?v1) (= (fun_app$ ?v0 ?v2) (fun_app$ ?v0 ?v3))) (= ?v2 ?v3)))) (=> @p_35 (forall ((?v3 Real)) (or (not (member$ ?v3 ?v1)) (not (= (fun_app$ ?v0 ?v2) (fun_app$ ?v0 ?v3))) (= ?v2 ?v3)))))) :rule cong :premises (t171.t1.t0 t171.t1.t1))
(step t171.t1 (cl (= (forall ((?v2 Real)) (=> (member$ ?v2 ?v1) (forall ((?v3 Real)) (=> (and (member$ ?v3 ?v1) (= (fun_app$ ?v0 ?v2) (fun_app$ ?v0 ?v3))) (= ?v2 ?v3))))) (forall ((?v2 Real)) (=> (member$ ?v2 ?v1) (forall ((?v3 Real)) (or (not (member$ ?v3 ?v1)) (not (= (fun_app$ ?v0 ?v2) (fun_app$ ?v0 ?v3))) (= ?v2 ?v3))))))) :rule bind)
(step t171.t2 (cl (= (forall ((?v2 Real)) (=> (member$ ?v2 ?v1) (forall ((?v3 Real)) (or (not (member$ ?v3 ?v1)) (not (= (fun_app$ ?v0 ?v2) (fun_app$ ?v0 ?v3))) (= ?v2 ?v3))))) (forall ((?v2 Real)) (or (not (member$ ?v2 ?v1)) (forall ((?v3 Real)) (or (not (member$ ?v3 ?v1)) (not (= (fun_app$ ?v0 ?v2) (fun_app$ ?v0 ?v3))) (= ?v2 ?v3))))))) :rule hole)
(step t171.t3 (cl (= (forall ((?v2 Real)) (or (not (member$ ?v2 ?v1)) (forall ((?v3 Real)) (or (not (member$ ?v3 ?v1)) (not (= (fun_app$ ?v0 ?v2) (fun_app$ ?v0 ?v3))) (= ?v2 ?v3))))) (forall ((?v2 Real) (BOUND_VARIABLE_1236 Real)) (or (not (member$ ?v2 ?v1)) (or (not (member$ BOUND_VARIABLE_1236 ?v1)) (not (= (fun_app$ ?v0 ?v2) (fun_app$ ?v0 BOUND_VARIABLE_1236))) (= ?v2 BOUND_VARIABLE_1236)))))) :rule hole)
(anchor :step t171.t4 :args ((?v2 Real) (BOUND_VARIABLE_1236 Real) (:= ?v2 ?v2) (:= BOUND_VARIABLE_1236 BOUND_VARIABLE_1236)))
(step t171.t4.t0 (cl (= (or @p_36 (or @p_34 @p_33 @p_32)) (or @p_36 @p_34 @p_33 @p_32))) :rule hole)
(step t171.t4 (cl (= (forall ((?v2 Real) (BOUND_VARIABLE_1236 Real)) (or (not (member$ ?v2 ?v1)) (or (not (member$ BOUND_VARIABLE_1236 ?v1)) (not (= (fun_app$ ?v0 ?v2) (fun_app$ ?v0 BOUND_VARIABLE_1236))) (= ?v2 BOUND_VARIABLE_1236)))) (forall ((?v2 Real) (BOUND_VARIABLE_1236 Real)) (or (not (member$ ?v2 ?v1)) (not (member$ BOUND_VARIABLE_1236 ?v1)) (not (= (fun_app$ ?v0 ?v2) (fun_app$ ?v0 BOUND_VARIABLE_1236))) (= ?v2 BOUND_VARIABLE_1236))))) :rule bind)
(step t171.t5 (cl (= (forall ((?v2 Real)) (or (not (member$ ?v2 ?v1)) (forall ((?v3 Real)) (or (not (member$ ?v3 ?v1)) (not (= (fun_app$ ?v0 ?v2) (fun_app$ ?v0 ?v3))) (= ?v2 ?v3))))) (forall ((?v2 Real) (BOUND_VARIABLE_1236 Real)) (or (not (member$ ?v2 ?v1)) (not (member$ BOUND_VARIABLE_1236 ?v1)) (not (= (fun_app$ ?v0 ?v2) (fun_app$ ?v0 BOUND_VARIABLE_1236))) (= ?v2 BOUND_VARIABLE_1236))))) :rule trans :premises (t171.t3 t171.t4))
(step t171.t6 (cl (= (forall ((?v2 Real)) (=> (member$ ?v2 ?v1) (forall ((?v3 Real)) (or (not (member$ ?v3 ?v1)) (not (= (fun_app$ ?v0 ?v2) (fun_app$ ?v0 ?v3))) (= ?v2 ?v3))))) (forall ((?v2 Real) (BOUND_VARIABLE_1236 Real)) (or (not (member$ ?v2 ?v1)) (not (member$ BOUND_VARIABLE_1236 ?v1)) (not (= (fun_app$ ?v0 ?v2) (fun_app$ ?v0 BOUND_VARIABLE_1236))) (= ?v2 BOUND_VARIABLE_1236))))) :rule trans :premises (t171.t2 t171.t5))
(step t171.t7 (cl (= (forall ((?v2 Real)) (=> (member$ ?v2 ?v1) (forall ((?v3 Real)) (=> (and (member$ ?v3 ?v1) (= (fun_app$ ?v0 ?v2) (fun_app$ ?v0 ?v3))) (= ?v2 ?v3))))) (forall ((?v2 Real) (BOUND_VARIABLE_1236 Real)) (or (not (member$ ?v2 ?v1)) (not (member$ BOUND_VARIABLE_1236 ?v1)) (not (= (fun_app$ ?v0 ?v2) (fun_app$ ?v0 BOUND_VARIABLE_1236))) (= ?v2 BOUND_VARIABLE_1236))))) :rule trans :premises (t171.t1 t171.t6))
(step t171.t8 (cl (= (= @p_30 (forall ((?v2 Real)) (=> (member$ ?v2 ?v1) (forall ((?v3 Real)) (=> (and (member$ ?v3 ?v1) (= (fun_app$ ?v0 ?v2) (fun_app$ ?v0 ?v3))) (= ?v2 ?v3)))))) (= @p_30 (forall ((?v2 Real) (BOUND_VARIABLE_1236 Real)) (or (not (member$ ?v2 ?v1)) (not (member$ BOUND_VARIABLE_1236 ?v1)) (not (= (fun_app$ ?v0 ?v2) (fun_app$ ?v0 BOUND_VARIABLE_1236))) (= ?v2 BOUND_VARIABLE_1236)))))) :rule cong :premises (t171.t0 t171.t7))
(step t171 (cl @p_29) :rule bind)
(step t172 (cl (forall ((?v0 Real_real_fun$) (?v1 Real_set$)) (= (inj_on$ ?v0 ?v1) (forall ((?v2 Real) (BOUND_VARIABLE_1236 Real)) (or (not (member$ ?v2 ?v1)) (not (member$ BOUND_VARIABLE_1236 ?v1)) (not (= (fun_app$ ?v0 ?v2) (fun_app$ ?v0 BOUND_VARIABLE_1236))) (= ?v2 BOUND_VARIABLE_1236)))))) :rule resolution :premises (t170 t171 a91))
(step t173 (cl @p_28) :rule resolution :premises (t169 t172))
(step t174 (cl @p_26) :rule resolution :premises (t162 t167 t173))
(step t175 (cl @p_25) :rule resolution :premises (t158 t160 t174))
(step t176 (cl @p_22) :rule resolution :premises (t157 t175))
(step t177 (cl (or @p_70 @p_73)) :rule forall_inst :args ((:= ?v0 @p_13)))
(step t178 (cl @p_70 @p_73) :rule or :premises (t177))
(step t179 (cl (not @p_56) (not (forall ((?v0 Real)) (= (fun_app$ uu$ ?v0) (* 2.0 (fun_app$ x_coord$ (- 1.0 ?v0)))))) (forall ((?v0 Real)) (= (fun_app$ uu$ ?v0) (* 2 (fun_app$ x_coord$ (+ 1 (* (- 1) ?v0))))))) :rule equiv_pos2)
(anchor :step t180 :args ((?v0 Real) (:= ?v0 ?v0)))
(step t180.t0 (cl (= @p_62 @p_62)) :rule refl)
(step t180.t1 (cl (= 2.0 2.0)) :rule refl)
(step t180.t2 (cl (= x_coord$ x_coord$)) :rule refl)
(step t180.t3 (cl (= @p_63 @p_68)) :rule hole)
(step t180.t4 (cl @p_3) :rule refl)
(step t180.t5 (cl (= @p_67 @p_58)) :rule hole)
(step t180.t6 (cl (= @p_68 @p_69)) :rule cong :premises (t180.t4 t180.t5))
(step t180.t7 (cl (= @p_69 @p_59)) :rule hole)
(step t180.t8 (cl (= @p_68 @p_59)) :rule trans :premises (t180.t6 t180.t7))
(step t180.t9 (cl (= @p_63 @p_59)) :rule trans :premises (t180.t3 t180.t8))
(step t180.t10 (cl (= @p_64 @p_60)) :rule cong :premises (t180.t2 t180.t9))
(step t180.t11 (cl (= @p_65 @p_66)) :rule cong :premises (t180.t1 t180.t10))
(step t180.t12 (cl (= @p_66 @p_61)) :rule hole)
(step t180.t13 (cl (= @p_65 @p_61)) :rule trans :premises (t180.t11 t180.t12))
(step t180.t14 (cl (= (= @p_62 @p_65) (= @p_62 @p_61))) :rule cong :premises (t180.t0 t180.t13))
(step t180 (cl @p_56) :rule bind)
(step t181 (cl (forall ((?v0 Real)) (= (fun_app$ uu$ ?v0) (* 2 (fun_app$ x_coord$ (+ 1 (* (- 1) ?v0))))))) :rule resolution :premises (t179 t180 a0))
(step t182 (cl @p_73) :rule resolution :premises (t178 t181))
(step t183 (cl @p_71) :rule forall_inst :args ((:= ?v0 @p_18)))
(step t184 (cl @p_70 @p_55) :rule or :premises (t183))
(step t185 (cl @p_55) :rule resolution :premises (t184 t181))
(step t186 (cl @p_53) :rule resolution :premises (t145 t176 t182 t185))
(step t187 (cl @p_52) :rule resolution :premises (t92 t186))
(step t188 (cl @p_191) :rule resolution :premises (t57 t73 t85 t187))
(step t189 (cl (not (! (= (! (or @p_126 @p_125 @p_109 @p_129) :named @p_130) (! (or @p_126 @p_125 @p_109 @p_44) :named @p_127)) :named @p_189)) (not @p_130) @p_127) :rule equiv_pos2)
(step t190 (cl (= @p_129 @p_44)) :rule hole)
(step t191 (cl @p_189) :rule cong :premises (t27 t28 t29 t190))
(step t192 (cl (! (=> (! (and @p_111 @p_120 @p_52 @p_128) :named @p_134) false) :named @p_136) @p_134) :rule implies_neg1)
(anchor :step t193)
(assume t193.a0 @p_111)
(assume t193.a1 @p_120)
(assume t193.a2 @p_52)
(assume t193.a3 @p_128)
(step t193.t0 (cl (not (! (= (! (< (! (+ (! (* 1.0 @p_43) :named @p_147) (! (* 1.0 @p_145) :named @p_146) (! (* (- 1.0) @p_143) :named @p_144) (! (* 1.0 @p_141) :named @p_142)) :named @p_148) (! (+ (! (* 1.0 0.0) :named @p_137) @p_139 @p_138 @p_137) :named @p_140)) :named @p_149) false) :named @p_181)) (not @p_149) false) :rule equiv_pos2)
(step t193.t1 (cl (= @p_149 (! (not (! (>= @p_148 @p_140) :named @p_182)) :named @p_183))) :rule hole)
(step t193.t2 (cl (= @p_147 @p_43)) :rule hole)
(step t193.t3 (cl (= @p_146 @p_145)) :rule hole)
(step t193.t4 (cl (= @p_144 (! (+ @p_48 @p_119) :named @p_187))) :rule hole)
(step t193.t5 (cl (= @p_142 @p_141)) :rule hole)
(step t193.t6 (cl (= @p_148 (! (+ @p_43 @p_145 @p_187 @p_141) :named @p_188))) :rule cong :premises (t193.t2 t193.t3 t193.t4 t193.t5))
(step t193.t7 (cl (= @p_188 0.0)) :rule hole)
(step t193.t8 (cl (= @p_148 0.0)) :rule trans :premises (t193.t6 t193.t7))
(step t193.t9 (cl (= @p_137 0.0)) :rule hole)
(step t193.t10 (cl (= @p_139 1.0)) :rule hole)
(step t193.t11 (cl (= @p_138 (- 1.0))) :rule hole)
(step t193.t12 (cl (= @p_140 (! (+ 0.0 1.0 (- 1.0) 0.0) :named @p_186))) :rule cong :premises (t193.t9 t193.t10 t193.t11 t193.t9))
(step t193.t13 (cl (= @p_186 0.0)) :rule hole)
(step t193.t14 (cl (= @p_140 0.0)) :rule trans :premises (t193.t12 t193.t13))
(step t193.t15 (cl (= @p_182 @p_185)) :rule cong :premises (t193.t8 t193.t14))
(step t193.t16 (cl (= @p_185 true)) :rule hole)
(step t193.t17 (cl (= @p_182 true)) :rule trans :premises (t193.t15 t193.t16))
(step t193.t18 (cl (= @p_183 @p_184)) :rule cong :premises (t193.t17))
(step t193.t19 (cl (= @p_184 false)) :rule hole)
(step t193.t20 (cl (= @p_183 false)) :rule trans :premises (t193.t18 t193.t19))
(step t193.t21 (cl @p_181) :rule trans :premises (t193.t1 t193.t20))
(step t193.t22 (cl (not (! (< @p_147 @p_137) :named @p_173)) (not (! (= @p_146 @p_139) :named @p_168)) (not (! (= @p_144 @p_138) :named @p_160)) (not (! (= @p_142 @p_137) :named @p_150)) @p_149) :rule la_generic :args (1 (- 1) (- 1) (- 1) 1))
(step t193.t23 (cl (=> (! (and @p_152 @p_174) :named @p_175) @p_173)) :rule la_mult_pos)
(step t193.t24 (cl (not @p_175) @p_173) :rule implies :premises (t193.t23))
(step t193.t25 (cl @p_175 @p_158 @p_180) :rule and_neg)
(step t193.t26 (cl (= @p_157 @p_152)) :rule equiv_simplify)
(step t193.t27 (cl (not @p_157) @p_152) :rule equiv1 :premises (t193.t26))
(step t193.t28 (cl @p_157) :rule hole :args ("evaluate"))
(step t193.t29 (cl @p_152) :rule resolution :premises (t193.t27 t193.t28))
(step t193.t30 (cl (not (! (= @p_128 @p_174) :named @p_176)) @p_129 @p_174) :rule equiv_pos2)
(step t193.t31 (cl (= @p_174 @p_179)) :rule hole)
(step t193.t32 (cl (= @p_178 @p_44)) :rule hole)
(step t193.t33 (cl (= @p_179 @p_128)) :rule cong :premises (t193.t32))
(step t193.t34 (cl @p_177) :rule trans :premises (t193.t31 t193.t33))
(step t193.t35 (cl @p_176) :rule symm :premises (t193.t34))
(step t193.t36 (cl @p_174) :rule resolution :premises (t193.t30 t193.t35 t193.a3))
(step t193.t37 (cl @p_175) :rule resolution :premises (t193.t25 t193.t29 t193.t36))
(step t193.t38 (cl @p_173) :rule resolution :premises (t193.t24 t193.t37))
(step t193.t39 (cl (=> (! (and @p_152 @p_169) :named @p_170) @p_168)) :rule la_mult_pos)
(step t193.t40 (cl (not @p_170) @p_168) :rule implies :premises (t193.t39))
(step t193.t41 (cl @p_170 @p_158 @p_172) :rule and_neg)
(step t193.t42 (cl (not @p_171) @p_126 @p_169) :rule equiv_pos2)
(step t193.t43 (cl (= @p_169 @p_111)) :rule hole)
(step t193.t44 (cl @p_171) :rule symm :premises (t193.t43))
(step t193.t45 (cl @p_169) :rule resolution :premises (t193.t42 t193.t44 t85))
(step t193.t46 (cl @p_170) :rule resolution :premises (t193.t41 t193.t29 t193.t45))
(step t193.t47 (cl @p_168) :rule resolution :premises (t193.t40 t193.t46))
(step t193.t48 (cl (=> (! (and @p_162 @p_161) :named @p_163) @p_160)) :rule la_mult_neg)
(step t193.t49 (cl (not @p_163) @p_160) :rule implies :premises (t193.t48))
(step t193.t50 (cl @p_163 @p_166 @p_167) :rule and_neg)
(step t193.t51 (cl (= @p_165 @p_162)) :rule equiv_simplify)
(step t193.t52 (cl (not @p_165) @p_162) :rule equiv1 :premises (t193.t51))
(step t193.t53 (cl @p_165) :rule hole :args ("evaluate"))
(step t193.t54 (cl @p_162) :rule resolution :premises (t193.t52 t193.t53))
(step t193.t55 (cl (not @p_164) @p_125 @p_161) :rule equiv_pos2)
(step t193.t56 (cl (= @p_161 @p_120)) :rule hole)
(step t193.t57 (cl @p_164) :rule symm :premises (t193.t56))
(step t193.t58 (cl @p_161) :rule resolution :premises (t193.t55 t193.t57 t73))
(step t193.t59 (cl @p_163) :rule resolution :premises (t193.t50 t193.t54 t193.t58))
(step t193.t60 (cl @p_160) :rule resolution :premises (t193.t49 t193.t59))
(step t193.t61 (cl (=> (! (and @p_152 @p_151) :named @p_153) @p_150)) :rule la_mult_pos)
(step t193.t62 (cl (not @p_153) @p_150) :rule implies :premises (t193.t61))
(step t193.t63 (cl @p_153 @p_158 @p_159) :rule and_neg)
(step t193.t64 (cl @p_156 @p_109 @p_151) :rule equiv_pos2)
(step t193.t65 (cl (= @p_151 @p_52)) :rule hole)
(step t193.t66 (cl @p_155) :rule symm :premises (t193.t65))
(step t193.t67 (cl @p_151) :rule resolution :premises (t193.t64 t193.t66 t193.a2))
(step t193.t68 (cl @p_153) :rule resolution :premises (t193.t63 t193.t29 t193.t67))
(step t193.t69 (cl @p_150) :rule resolution :premises (t193.t62 t193.t68))
(step t193.t70 (cl @p_149) :rule resolution :premises (t193.t22 t193.t38 t193.t47 t193.t60 t193.t69))
(step t193.t71 (cl false) :rule resolution :premises (t193.t0 t193.t21 t193.t70))
(step t193 (cl @p_126 @p_125 @p_109 @p_129 false) :rule subproof :discharge (t193.a0 t193.a1 t193.a2 t193.a3))
(step t194 (cl (! (not @p_134) :named @p_135) @p_111) :rule and_pos)
(step t195 (cl @p_135 @p_120) :rule and_pos)
(step t196 (cl @p_135 @p_52) :rule and_pos)
(step t197 (cl @p_135 @p_128) :rule and_pos)
(step t198 (cl false @p_135 @p_135 @p_135 @p_135) :rule resolution :premises (t193 t194 t195 t196 t197))
(step t199 (cl @p_135 @p_135 @p_135 @p_135 false) :rule reordering :premises (t198))
(step t200 (cl @p_135 false) :rule contraction :premises (t199))
(step t201 (cl @p_136 false) :rule resolution :premises (t192 t200))
(step t202 (cl @p_136 @p_101) :rule implies_neg2)
(step t203 (cl @p_136 @p_136) :rule resolution :premises (t201 t202))
(step t204 (cl @p_136) :rule contraction :premises (t203))
(step t205 (cl (= @p_136 @p_135)) :rule implies_simplify)
(step t206 (cl (not @p_136) @p_135) :rule equiv1 :premises (t205))
(step t207 (cl @p_135) :rule resolution :premises (t204 t206))
(step t208 (cl @p_126 @p_125 @p_109 @p_129) :rule not_and :premises (t207))
(step t209 (cl @p_130 @p_133) :rule or_neg)
(step t210 (cl @p_130 @p_132) :rule or_neg)
(step t211 (cl @p_130 @p_131) :rule or_neg)
(step t212 (cl @p_130 (not @p_129)) :rule or_neg)
(step t213 (cl @p_130 @p_130 @p_130 @p_130) :rule resolution :premises (t208 t209 t210 t211 t212))
(step t214 (cl @p_130) :rule contraction :premises (t213))
(step t215 (cl @p_127) :rule resolution :premises (t189 t191 t214))
(step t216 (cl @p_126 @p_125 @p_109 @p_44) :rule or :premises (t215))
(step t217 (cl @p_44 @p_125 @p_126 @p_109) :rule reordering :premises (t216))
(step t218 (cl @p_44) :rule resolution :premises (t217 t73 t85 t187))
(step t219 (cl @p_24 @p_20) :rule or_neg)
(step t220 (cl @p_20) :rule resolution :premises (t219 t175))
(step t221 (cl) :rule resolution :premises (t25 t188 t218 t220))

