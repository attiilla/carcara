(assume a0 (not b))
(assume a1 (or a b (not (or c f))))
(assume a2 (or b d (not a)))
(assume a3 (not d))
(assume a4 (or b c d e f))
(assume a5 (or d (not c)))
(assume a6 (or d (not e)))
(step t0 (cl a b (not (or c f))) :rule or :premises (a1))
(step t1 (cl b d (not a)) :rule or :premises (a2))
(step t2 (cl b c d e f) :rule or :premises (a4))
(step t3 (cl d (not c)) :rule or :premises (a5))
(step t4 (cl d (not e)) :rule or :premises (a6))
(step t5 (cl a (not (or c f))) :rule resolution :premises (a0 t0) :args (b false))
(step t6 (cl b d (not (or c f))) :rule resolution :premises (t1 t5) :args (a false))
(step t7 (cl b (not (or c f))) :rule resolution :premises (t6 a3) :args (d true))
(step t8 (cl (not (or c f))) :rule resolution :premises (t7 a0) :args (b true))
(step t9 (cl (not f)) :rule not_or :premises (t8) :args (2))
(step t10 (cl c d e f) :rule resolution :premises (t2 a0) :args (b true))
(step t11 (cl c e f) :rule resolution :premises (a3 t10) :args (d false))
(step t12 (cl d e f) :rule resolution :premises (t11 t3) :args (c true))
(step t13 (cl d f) :rule resolution :premises (t12 t4) :args (e true))
(step t14 (cl f) :rule resolution :premises (t13 a3) :args (d true))
(step t15 (cl) :rule resolution :premises (t14 t9) :args (f true))
