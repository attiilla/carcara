(assume a0 (not a))
(assume a00 (not b))
(assume a1 (or a b (not (or c d))))
(assume a2 (or a (not d)))
(assume a3 (or a (not b)))
(assume a4 (or b c d))
(step t0 (cl a b (not (or c d))) :rule or :premises (a1))
(step t1 (cl a (not d)) :rule or :premises (a2))
(step t2 (cl a (not b)) :rule or :premises (a3))
(step t3 (cl b c d) :rule or :premises (a4))
(step t4 (cl b (not (or c d))) :rule resolution :premises (a0 t0) :args (a false))
(step t5 (cl a (not (or c d))) :rule resolution :premises (t4 t2) :args (b true))
(step t6 (cl (not (or c d))) :rule resolution :premises (t5 a0) :args (a true))
(step t7 (cl (not c)) :rule not_or :premises (t6) :args(1))
(step t8 (cl (not d)) :rule resolution :premises (a0 t1) :args (a false))
(step t9 (cl c b) :rule resolution :premises (t3 t8) :args (d true))
(step t10 (cl b) :rule resolution :premises (t9 t7) :args (c true))
(step t11 (cl) :rule resolution :premises (t10 a00) :args (b true))
