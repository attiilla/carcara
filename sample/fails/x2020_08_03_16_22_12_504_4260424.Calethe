(assume a0 (! (not (! (= (! (enat$ (! (the_enat$ (! (times$ (! (enat$ delta$) :named @p_5) (! (arity_sym$ f$) :named @p_6)) :named @p_4)) :named @p_3)) :named @p_2) @p_4) :named @p_1)) :named @p_0))
(assume a1 (! (= zero$ (! (enat$ zero$a) :named @p_8)) :named @p_7))
(assume a2 (! (forall ((?v0 Enat$) (?v1 Enat$)) (= (= (times$ ?v0 ?v1) infinity$) (or (and (= ?v0 infinity$) (not (= ?v1 zero$))) (and (= ?v1 infinity$) (not (= ?v0 zero$)))))) :named @p_9))
(assume a3 (! (forall ((?v0 S$)) (=> (! (less$ zero$a delta$) :named @p_11) (not (= (arity_sym$ ?v0) infinity$)))) :named @p_10))
(assume a4 (! (forall ((?v0 Enat$)) (= (not (less$a zero$ ?v0)) (= ?v0 zero$))) :named @p_12))
(assume a5 (! (forall ((?v0 Nat$)) (= (not (less$ zero$a ?v0)) (= ?v0 zero$a))) :named @p_13))
(assume a6 (! (forall ((?v0 Nat$)) (not (= infinity$ (enat$ ?v0)))) :named @p_14))
(assume a7 (! (forall ((?v0 Enat$)) (=> (not (= ?v0 infinity$)) (= (enat$ (the_enat$ ?v0)) ?v0))) :named @p_15))
(step t0 (cl (! (=> (! (forall ((?v0 S$)) (not (= infinity$ (arity_sym$ ?v0)))) :named @p_17) (! (not (! (= infinity$ @p_6) :named @p_19)) :named @p_18)) :named @p_16) @p_17) :rule implies_neg1)
(anchor :step t1)
(assume t1.a0 @p_17)
(step t1.t0 (cl (or (! (not @p_17) :named @p_20) @p_18)) :rule forall_inst :args (f$))
(step t1.t1 (cl @p_20 @p_18) :rule or :premises (t1.t0))
(step t1.t2 (cl @p_18) :rule resolution :premises (t1.t1 t1.a0) :args (@p_17 (! false :named @p_21)))
(step t1 (cl @p_20 @p_18) :rule subproof :discharge (t1.a0))
(step t2 (cl @p_16 @p_18) :rule resolution :premises (t0 t1) :args (@p_17 (! true :named @p_22)))
(step t3 (cl @p_16 (not @p_18)) :rule implies_neg2)
(step t4 (cl @p_16 @p_16) :rule resolution :premises (t2 t3) :args (@p_18 @p_22))
(step t5 (cl @p_16) :rule contraction :premises (t4))
(anchor :step t6 :args ((?v0 S$) (:= (?v0 S$) ?v0)))
(step t6.t0 (cl (= @p_11 @p_11)) :rule refl)
(step t6.t1 (cl (= (= (arity_sym$ ?v0) infinity$) (= infinity$ (arity_sym$ ?v0)))) :rule hole)
(step t6.t2 (cl (= (not (= (arity_sym$ ?v0) infinity$)) (not (= infinity$ (arity_sym$ ?v0))))) :rule cong :premises (t6.t1))
(step t6.t3 (cl (= (=> @p_11 (not (= (arity_sym$ ?v0) infinity$))) (=> @p_11 (not (= infinity$ (arity_sym$ ?v0)))))) :rule cong :premises (t6.t0 t6.t2))
(step t6 (cl (= @p_10 (! (forall ((?v0 S$)) (=> @p_11 (not (= infinity$ (arity_sym$ ?v0))))) :named @p_23))) :rule bind)
(step t7 (cl (= @p_23 (! (forall ((?v0 S$)) (or (! (not @p_11) :named @p_25) (not (= infinity$ (arity_sym$ ?v0))))) :named @p_24))) :rule hole)
(step t8 (cl (= @p_24 (! (or @p_25 @p_17) :named @p_26))) :rule hole)
(step t9 (cl (= @p_23 @p_26)) :rule trans :premises (t7 t8))
(step t10 (cl (not (! (= @p_10 @p_26) :named @p_27)) (not @p_10) @p_26) :rule equiv_pos2)
(step t11 (cl @p_27) :rule trans :premises (t6 t9))
(step t12 (cl @p_26) :rule resolution :premises (t10 t11 a3) :args (@p_27 @p_21 @p_10 @p_21))
(step t13 (cl (= (! (not (! (= @p_25 (! (= delta$ zero$a) :named @p_30)) :named @p_29)) :named @p_28) @p_28)) :rule refl)
(step t14 (cl (= (! (not @p_25) :named @p_31) @p_11)) :rule hole)
(step t15 (cl (= @p_30 @p_30)) :rule refl)
(step t16 (cl (not (! (= (! (or @p_28 @p_31 @p_30) :named @p_33) (! (or @p_28 @p_11 @p_30) :named @p_34)) :named @p_32)) (not @p_33) @p_34) :rule equiv_pos2)
(step t17 (cl @p_32) :rule cong :premises (t13 t14 t15))
(step t18 (cl @p_28 @p_31 @p_30) :rule equiv_pos2)
(step t19 (cl @p_33 (not @p_28)) :rule or_neg :args (0))
(step t20 (cl @p_33 (not @p_31)) :rule or_neg :args (1))
(step t21 (cl @p_33 (! (not @p_30) :named @p_35)) :rule or_neg :args (2))
(step t22 (cl @p_33 @p_33 @p_33) :rule resolution :premises (t18 t19 t20 t21) :args (@p_28 @p_22 @p_31 @p_22 @p_30 @p_22))
(step t23 (cl @p_33) :rule contraction :premises (t22))
(step t24 (cl @p_34) :rule resolution :premises (t16 t17 t23) :args (@p_32 @p_21 @p_33 @p_21))
(step t25 (cl @p_28 @p_11 @p_30) :rule or :premises (t24))
(step t26 (cl (! (=> (! (and @p_7 @p_30) :named @p_37) (! (= zero$ @p_5) :named @p_38)) :named @p_36) @p_37) :rule implies_neg1)
(anchor :step t27)
(assume t27.a0 @p_7)
(assume t27.a1 @p_30)
(step t27.t0 (cl (! (=> (! (and @p_30 @p_7) :named @p_40) @p_38) :named @p_39) @p_40) :rule implies_neg1)
(anchor :step t27.t1)
(assume t27.t1.a0 @p_30)
(assume t27.t1.a1 @p_7)
(step t27.t1.t0 (cl (! (= zero$a delta$) :named @p_41)) :rule symm :premises (t27.t1.a0))
(step t27.t1.t1 (cl (= @p_8 @p_5)) :rule cong :premises (t27.t1.t0))
(step t27.t1.t2 (cl @p_38) :rule trans :premises (t27.t1.a1 t27.t1.t1))
(step t27.t1 (cl @p_35 (! (not @p_7) :named @p_42) @p_38) :rule subproof :discharge (t27.t1.a0 t27.t1.a1))
(step t27.t2 (cl (! (not @p_40) :named @p_43) @p_30) :rule and_pos :args (0))
(step t27.t3 (cl @p_43 @p_7) :rule and_pos :args (1))
(step t27.t4 (cl @p_38 @p_43 @p_43) :rule resolution :premises (t27.t1 t27.t2 t27.t3) :args (@p_30 @p_21 @p_7 @p_21))
(step t27.t5 (cl @p_43 @p_43 @p_38) :rule reordering :premises (t27.t4))
(step t27.t6 (cl @p_43 @p_38) :rule contraction :premises (t27.t5))
(step t27.t7 (cl @p_39 @p_38) :rule resolution :premises (t27.t0 t27.t6) :args (@p_40 @p_22))
(step t27.t8 (cl @p_39 (! (not @p_38) :named @p_44)) :rule implies_neg2)
(step t27.t9 (cl @p_39 @p_39) :rule resolution :premises (t27.t7 t27.t8) :args (@p_38 @p_22))
(step t27.t10 (cl @p_39) :rule contraction :premises (t27.t9))
(step t27.t11 (cl @p_43 @p_38) :rule implies :premises (t27.t10))
(step t27.t12 (cl @p_40 @p_35 @p_42) :rule and_neg)
(step t27.t13 (cl @p_40) :rule resolution :premises (t27.t12 t27.a1 t27.a0) :args (@p_30 @p_21 @p_7 @p_21))
(step t27.t14 (cl @p_38) :rule resolution :premises (t27.t11 t27.t13) :args (@p_40 @p_21))
(step t27 (cl @p_42 @p_35 @p_38) :rule subproof :discharge (t27.a0 t27.a1))
(step t28 (cl (! (not @p_37) :named @p_45) @p_7) :rule and_pos :args (0))
(step t29 (cl @p_45 @p_30) :rule and_pos :args (1))
(step t30 (cl @p_38 @p_45 @p_45) :rule resolution :premises (t27 t28 t29) :args (@p_7 @p_21 @p_30 @p_21))
(step t31 (cl @p_45 @p_45 @p_38) :rule reordering :premises (t30))
(step t32 (cl @p_45 @p_38) :rule contraction :premises (t31))
(step t33 (cl @p_36 @p_38) :rule resolution :premises (t26 t32) :args (@p_37 @p_22))
(step t34 (cl @p_36 @p_44) :rule implies_neg2)
(step t35 (cl @p_36 @p_36) :rule resolution :premises (t33 t34) :args (@p_38 @p_22))
(step t36 (cl @p_36) :rule contraction :premises (t35))
(step t37 (cl (! (not (! (and @p_19 @p_44) :named @p_47)) :named @p_46) @p_44) :rule and_pos :args (1))
(step t38 (cl (! (not (! (or (! (and (! (= infinity$ @p_5) :named @p_51) (! (not (! (= zero$ @p_6) :named @p_53)) :named @p_52)) :named @p_50) @p_47) :named @p_49)) :named @p_48) @p_50 @p_47) :rule or_pos)
(step t39 (cl (! (not @p_50) :named @p_54) @p_51) :rule and_pos :args (0))
(step t40 (cl (or (! (not @p_14) :named @p_55) (! (not @p_51) :named @p_56))) :rule forall_inst :args (delta$))
(step t41 (cl (! (not (! (= (! (= infinity$ @p_4) :named @p_59) @p_49) :named @p_58)) :named @p_57) (! (not @p_59) :named @p_60) @p_49) :rule equiv_pos2)
(step t42 (cl (! (not (! (or @p_59 (! (= @p_4 @p_2) :named @p_63)) :named @p_62)) :named @p_61) @p_59 @p_63) :rule or_pos)
(step t43 (cl (or (! (not (! (forall ((?v0 Enat$)) (or (= infinity$ ?v0) (= ?v0 (enat$ (the_enat$ ?v0))))) :named @p_65)) :named @p_64) @p_62)) :rule forall_inst :args (@p_4))
(anchor :step t44 :args ((?v0 Enat$) (:= (?v0 Enat$) ?v0)))
(step t44.t0 (cl (= (= ?v0 infinity$) (= infinity$ ?v0))) :rule hole)
(step t44.t1 (cl (= (not (= ?v0 infinity$)) (not (= infinity$ ?v0)))) :rule cong :premises (t44.t0))
(step t44.t2 (cl (= (= (enat$ (the_enat$ ?v0)) ?v0) (= ?v0 (enat$ (the_enat$ ?v0))))) :rule hole)
(step t44.t3 (cl (= (=> (not (= ?v0 infinity$)) (= (enat$ (the_enat$ ?v0)) ?v0)) (=> (not (= infinity$ ?v0)) (= ?v0 (enat$ (the_enat$ ?v0)))))) :rule cong :premises (t44.t1 t44.t2))
(step t44 (cl (= @p_15 (! (forall ((?v0 Enat$)) (=> (not (= infinity$ ?v0)) (= ?v0 (enat$ (the_enat$ ?v0))))) :named @p_66))) :rule bind)
(step t45 (cl (= @p_66 @p_65)) :rule hole)
(step t46 (cl (or (! (not (! (forall ((?v0 Enat$) (?v1 Enat$)) (= (= infinity$ (times$ ?v0 ?v1)) (or (and (= infinity$ ?v0) (not (= zero$ ?v1))) (and (= infinity$ ?v1) (not (= zero$ ?v0)))))) :named @p_68)) :named @p_67) @p_58)) :rule forall_inst :args (@p_5 @p_6))
(step t47 (cl (= (! (forall ((?v0 Nat$)) (= (not (less$ zero$a ?v0)) (= zero$a ?v0))) :named @p_69) @p_69)) :rule refl)
(step t48 (cl (= @p_25 @p_25)) :rule refl)
(step t49 (cl (= @p_41 @p_30)) :rule hole)
(step t50 (cl (= (! (= @p_25 @p_41) :named @p_70) @p_29)) :rule cong :premises (t48 t49))
(step t51 (cl (not (! (= (! (=> @p_69 @p_70) :named @p_72) (! (=> @p_69 @p_29) :named @p_73)) :named @p_71)) (not @p_72) @p_73) :rule equiv_pos2)
(step t52 (cl @p_71) :rule cong :premises (t47 t50))
(step t53 (cl @p_72 @p_69) :rule implies_neg1)
(anchor :step t54)
(assume t54.a0 @p_69)
(step t54.t0 (cl (or (! (not @p_69) :named @p_74) @p_70)) :rule forall_inst :args (delta$))
(step t54.t1 (cl @p_74 @p_70) :rule or :premises (t54.t0))
(step t54.t2 (cl (! (not (! (= @p_13 @p_69) :named @p_76)) :named @p_75) (! (not @p_13) :named @p_77) @p_69) :rule equiv_pos2)
(anchor :step t54.t3 :args ((?v0 Nat$) (:= (?v0 Nat$) ?v0)))
(step t54.t3.t0 (cl (= (not (less$ zero$a ?v0)) (not (less$ zero$a ?v0)))) :rule refl)
(step t54.t3.t1 (cl (= (= ?v0 zero$a) (= zero$a ?v0))) :rule hole)
(step t54.t3.t2 (cl (= (= (not (less$ zero$a ?v0)) (= ?v0 zero$a)) (= (not (less$ zero$a ?v0)) (= zero$a ?v0)))) :rule cong :premises (t54.t3.t0 t54.t3.t1))
(step t54.t3 (cl @p_76) :rule bind)
(step t54.t4 (cl @p_69) :rule resolution :premises (t54.t2 t54.t3 a5) :args (@p_76 @p_21 @p_13 @p_21))
(step t54.t5 (cl @p_70) :rule resolution :premises (t54.t1 t54.t4) :args (@p_69 @p_21))
(step t54 (cl @p_74 @p_70) :rule subproof :discharge (t54.a0))
(step t55 (cl @p_72 @p_70) :rule resolution :premises (t53 t54) :args (@p_69 @p_22))
(step t56 (cl @p_72 (not @p_70)) :rule implies_neg2)
(step t57 (cl @p_72 @p_72) :rule resolution :premises (t55 t56) :args (@p_70 @p_22))
(step t58 (cl @p_72) :rule contraction :premises (t57))
(step t59 (cl @p_73) :rule resolution :premises (t51 t52 t58) :args (@p_71 @p_21 @p_72 @p_21))
(step t60 (cl @p_46 @p_19) :rule and_pos :args (0))
(step t61 (cl @p_20 @p_18) :rule implies :premises (t5))
(step t62 (cl @p_25 @p_17) :rule or :premises (t12))
(step t63 (cl @p_11 @p_30 @p_28) :rule reordering :premises (t25))
(step t64 (cl @p_37 @p_42 @p_35) :rule and_neg)
(step t65 (cl @p_45 @p_38) :rule implies :premises (t36))
(step t66 (cl @p_42 @p_35 @p_38) :rule resolution :premises (t64 t65) :args (@p_37 @p_22))
(step t67 (cl @p_44 @p_46) :rule reordering :premises (t37))
(step t68 (cl @p_50 @p_47 @p_48) :rule reordering :premises (t38))
(step t69 (cl @p_51 @p_54) :rule reordering :premises (t39))
(step t70 (cl @p_55 @p_56) :rule or :premises (t40))
(step t71 (cl @p_56) :rule resolution :premises (t70 a6) :args (@p_14 @p_21))
(step t72 (cl @p_54) :rule resolution :premises (t69 t71) :args (@p_51 @p_22))
(step t73 (cl @p_49 @p_60 @p_57) :rule reordering :premises (t41))
(step t74 (cl @p_63 @p_59 @p_61) :rule reordering :premises (t42))
(step t75 (cl (not @p_63)) :rule not_symm :premises (a0))
(step t76 (cl @p_64 @p_62) :rule or :premises (t43))
(step t77 (cl (not (! (= @p_15 @p_65) :named @p_78)) (not @p_15) @p_65) :rule equiv_pos2)
(step t78 (cl @p_78) :rule trans :premises (t44 t45))
(step t79 (cl @p_65) :rule resolution :premises (t77 t78 a7) :args (@p_78 @p_21 @p_15 @p_21))
(step t80 (cl @p_62) :rule resolution :premises (t76 t79) :args (@p_65 @p_21))
(step t81 (cl @p_59) :rule resolution :premises (t74 t75 t80) :args (@p_63 @p_22 @p_62 @p_21))
(step t82 (cl @p_67 @p_58) :rule or :premises (t46))
(step t83 (cl (not (! (= @p_9 @p_68) :named @p_79)) (not @p_9) @p_68) :rule equiv_pos2)
(anchor :step t84 :args ((?v0 Enat$) (?v1 Enat$) (:= (?v0 Enat$) ?v0) (:= (?v1 Enat$) ?v1)))
(step t84.t0 (cl (= (= (times$ ?v0 ?v1) infinity$) (= infinity$ (times$ ?v0 ?v1)))) :rule hole)
(step t84.t1 (cl (= (= ?v0 infinity$) (= infinity$ ?v0))) :rule hole)
(step t84.t2 (cl (= (= ?v1 zero$) (= zero$ ?v1))) :rule hole)
(step t84.t3 (cl (= (not (= ?v1 zero$)) (not (= zero$ ?v1)))) :rule cong :premises (t84.t2))
(step t84.t4 (cl (= (and (= ?v0 infinity$) (not (= ?v1 zero$))) (and (= infinity$ ?v0) (not (= zero$ ?v1))))) :rule cong :premises (t84.t1 t84.t3))
(step t84.t5 (cl (= (= ?v1 infinity$) (= infinity$ ?v1))) :rule hole)
(step t84.t6 (cl (= (= ?v0 zero$) (= zero$ ?v0))) :rule hole)
(step t84.t7 (cl (= (not (= ?v0 zero$)) (not (= zero$ ?v0)))) :rule cong :premises (t84.t6))
(step t84.t8 (cl (= (and (= ?v1 infinity$) (not (= ?v0 zero$))) (and (= infinity$ ?v1) (not (= zero$ ?v0))))) :rule cong :premises (t84.t5 t84.t7))
(step t84.t9 (cl (= (or (and (= ?v0 infinity$) (not (= ?v1 zero$))) (and (= ?v1 infinity$) (not (= ?v0 zero$)))) (or (and (= infinity$ ?v0) (not (= zero$ ?v1))) (and (= infinity$ ?v1) (not (= zero$ ?v0)))))) :rule cong :premises (t84.t4 t84.t8))
(step t84.t10 (cl (= (= (= (times$ ?v0 ?v1) infinity$) (or (and (= ?v0 infinity$) (not (= ?v1 zero$))) (and (= ?v1 infinity$) (not (= ?v0 zero$))))) (= (= infinity$ (times$ ?v0 ?v1)) (or (and (= infinity$ ?v0) (not (= zero$ ?v1))) (and (= infinity$ ?v1) (not (= zero$ ?v0))))))) :rule cong :premises (t84.t0 t84.t9))
(step t84 (cl @p_79) :rule bind)
(step t85 (cl @p_68) :rule resolution :premises (t83 t84 a2) :args (@p_79 @p_21 @p_9 @p_21))
(step t86 (cl @p_58) :rule resolution :premises (t82 t85) :args (@p_68 @p_21))
(step t87 (cl @p_49) :rule resolution :premises (t73 t81 t86) :args (@p_59 @p_21 @p_58 @p_21))
(step t88 (cl @p_47) :rule resolution :premises (t68 t72 t87) :args (@p_50 @p_22 @p_49 @p_21))
(step t89 (cl @p_46 @p_35) :rule resolution :premises (t66 t67 a1) :args (@p_38 @p_22 @p_7 @p_21))
(step t90 (cl @p_74 @p_29) :rule implies :premises (t59))
(step t91 (cl @p_75 @p_77 @p_69) :rule equiv_pos2)
(anchor :step t92 :args ((?v0 Nat$) (:= (?v0 Nat$) ?v0)))
(step t92.t0 (cl (= (not (less$ zero$a ?v0)) (not (less$ zero$a ?v0)))) :rule refl)
(step t92.t1 (cl (= (= ?v0 zero$a) (= zero$a ?v0))) :rule hole)
(step t92.t2 (cl (= (= (not (less$ zero$a ?v0)) (= ?v0 zero$a)) (= (not (less$ zero$a ?v0)) (= zero$a ?v0)))) :rule cong :premises (t92.t0 t92.t1))
(step t92 (cl @p_76) :rule bind)
(step t93 (cl @p_69) :rule resolution :premises (t91 t92 a5) :args (@p_76 @p_21 @p_13 @p_21))
(step t94 (cl @p_29) :rule resolution :premises (t90 t93) :args (@p_69 @p_21))
(step t95 (cl @p_11 @p_46) :rule resolution :premises (t63 t89 t94) :args (@p_30 @p_22 @p_29 @p_21))
(step t96 (cl @p_17 @p_46) :rule resolution :premises (t62 t95) :args (@p_11 @p_21))
(step t97 (cl @p_19 @p_46) :rule reordering :premises (t60))
(step t98 (cl @p_46) :rule resolution :premises (t61 t96 t97) :args (@p_17 @p_21 @p_19 @p_21))
(step t99 (cl) :rule resolution :premises (t98 t88) :args (@p_47 @p_21))
