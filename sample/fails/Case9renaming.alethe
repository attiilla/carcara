unsat
(assume a0 (forall ((?v0 S_v_tm$) (?v1 S_v_tm$)) (= (fun_app$ (fun_app$a uu$ ?v0) ?v1) (and (= (vars$ ?v0) bot$) (and (wary$ arity_sym$ arity_var$ ?v0) (and (wary$ arity_sym$ arity_var$ ?v1) (gt$ ground_heads_var$ gt_sym$ delta$ extf$ arity_sym$ wt_sym$ ?v0 ?v1)))))))
(assume a1 (forall ((?v0 S_v_tm$) (?v1 S_v_tm$)) (= (fun_app$ (fun_app$a uua$ ?v0) ?v1) (less$ (size$ ?v1) (size$ ?v0)))))
(assume a2 (not (and (! (wary$ arity_sym$ arity_var$ (worst_chain$ uu$ uua$ (minus$ (plus$ i$ k2$) one$))) :named @a5) (and (! (wary$ arity_sym$ arity_var$ u$) :named @a6) (! (gt$ ground_heads_var$ gt_sym$ delta$ extf$ arity_sym$ wt_sym$ (worst_chain$ uu$ uua$ (minus$ (plus$ i$ k2$) one$)) u$) :named @a4)))))
(assume a3 (and @a5 (and (! (wary$ arity_sym$ arity_var$ (worst_chain$ uu$ uua$ (plus$ i$ k2$))) :named @a7) (! (gt$ ground_heads_var$ gt_sym$ delta$ extf$ arity_sym$ wt_sym$ (worst_chain$ uu$ uua$ (minus$ (plus$ i$ k2$) one$)) (worst_chain$ uu$ uua$ (plus$ i$ k2$))) :named @a8))))
(assume a4 (! (forall ((?v0 S_v_tm$) (?v1 S_v_tm$) (?v2 S_v_tm$)) (=> (and (wary$ arity_sym$ arity_var$ ?v0) (and (wary$ arity_sym$ arity_var$ ?v1) (and (wary$ arity_sym$ arity_var$ ?v2) (and (gt$ ground_heads_var$ gt_sym$ delta$ extf$ arity_sym$ wt_sym$ ?v0 ?v1) (gt$ ground_heads_var$ gt_sym$ delta$ extf$ arity_sym$ wt_sym$ ?v1 ?v2))))) (gt$ ground_heads_var$ gt_sym$ delta$ extf$ arity_sym$ wt_sym$ ?v0 ?v2))) :named @a3))
(assume a5 (and @a7 (and @a6 (! (gt$ ground_heads_var$ gt_sym$ delta$ extf$ arity_sym$ wt_sym$ (worst_chain$ uu$ uua$ (plus$ i$ k2$)) u$) :named @a9))))
(step t0 (cl (=> (! (forall ((?v0 S_v_tm$) (?v1 S_v_tm$) (?v2 S_v_tm$)) (or (not (wary$ arity_sym$ arity_var$ ?v0)) (not (wary$ arity_sym$ arity_var$ ?v1)) (not (wary$ arity_sym$ arity_var$ ?v2)) (not (gt$ ground_heads_var$ gt_sym$ delta$ extf$ arity_sym$ wt_sym$ ?v0 ?v1)) (not (gt$ ground_heads_var$ gt_sym$ delta$ extf$ arity_sym$ wt_sym$ ?v1 ?v2)) (gt$ ground_heads_var$ gt_sym$ delta$ extf$ arity_sym$ wt_sym$ ?v0 ?v2))) :named @a1) (! (or (not @a5) (not @a7) (not @a6) (not @a8) (not @a9) @a4) :named @a0)) @a1) :rule implies_neg1)
(anchor :step t1)
(assume t1.a0 @a1)
(step t1.t0 (cl (or (not @a1) @a0)) :rule forall_inst :args ((worst_chain$ uu$ uua$ (minus$ (plus$ i$ k2$) one$)) (worst_chain$ uu$ uua$ (plus$ i$ k2$)) u$))
(step t1.t1 (cl (not @a1) @a0) :rule or :premises (t1.t0))
(step t1.t2 (cl (not (! (= @a3 @a1) :named @a2)) (not @a3) @a1) :rule equiv_pos2)
(anchor :step t1.t3 :args ((?v0 S_v_tm$) (?v1 S_v_tm$) (?v2 S_v_tm$) (:= (?v0 S_v_tm$) ?v0) (:= (?v1 S_v_tm$) ?v1) (:= (?v2 S_v_tm$) ?v2)))
(step t1.t3.t0 (cl (= (and (wary$ arity_sym$ arity_var$ ?v0) (and (wary$ arity_sym$ arity_var$ ?v1) (and (wary$ arity_sym$ arity_var$ ?v2) (and (gt$ ground_heads_var$ gt_sym$ delta$ extf$ arity_sym$ wt_sym$ ?v0 ?v1) (gt$ ground_heads_var$ gt_sym$ delta$ extf$ arity_sym$ wt_sym$ ?v1 ?v2))))) (and (wary$ arity_sym$ arity_var$ ?v0) (wary$ arity_sym$ arity_var$ ?v1) (wary$ arity_sym$ arity_var$ ?v2) (gt$ ground_heads_var$ gt_sym$ delta$ extf$ arity_sym$ wt_sym$ ?v0 ?v1) (gt$ ground_heads_var$ gt_sym$ delta$ extf$ arity_sym$ wt_sym$ ?v1 ?v2)))) :rule hole :args ("TRUST_THEORY_REWRITE" (= (and (wary$ arity_sym$ arity_var$ ?v0) (and (wary$ arity_sym$ arity_var$ ?v1) (and (wary$ arity_sym$ arity_var$ ?v2) (and (gt$ ground_heads_var$ gt_sym$ delta$ extf$ arity_sym$ wt_sym$ ?v0 ?v1) (gt$ ground_heads_var$ gt_sym$ delta$ extf$ arity_sym$ wt_sym$ ?v1 ?v2))))) (and (wary$ arity_sym$ arity_var$ ?v0) (wary$ arity_sym$ arity_var$ ?v1) (wary$ arity_sym$ arity_var$ ?v2) (gt$ ground_heads_var$ gt_sym$ delta$ extf$ arity_sym$ wt_sym$ ?v0 ?v1) (gt$ ground_heads_var$ gt_sym$ delta$ extf$ arity_sym$ wt_sym$ ?v1 ?v2))) 1 6))
(step t1.t3.t1 (cl (= (gt$ ground_heads_var$ gt_sym$ delta$ extf$ arity_sym$ wt_sym$ ?v0 ?v2) (gt$ ground_heads_var$ gt_sym$ delta$ extf$ arity_sym$ wt_sym$ ?v0 ?v2))) :rule refl)
(step t1.t3.t2 (cl (= (=> (and (wary$ arity_sym$ arity_var$ ?v0) (and (wary$ arity_sym$ arity_var$ ?v1) (and (wary$ arity_sym$ arity_var$ ?v2) (and (gt$ ground_heads_var$ gt_sym$ delta$ extf$ arity_sym$ wt_sym$ ?v0 ?v1) (gt$ ground_heads_var$ gt_sym$ delta$ extf$ arity_sym$ wt_sym$ ?v1 ?v2))))) (gt$ ground_heads_var$ gt_sym$ delta$ extf$ arity_sym$ wt_sym$ ?v0 ?v2)) (=> (and (wary$ arity_sym$ arity_var$ ?v0) (wary$ arity_sym$ arity_var$ ?v1) (wary$ arity_sym$ arity_var$ ?v2) (gt$ ground_heads_var$ gt_sym$ delta$ extf$ arity_sym$ wt_sym$ ?v0 ?v1) (gt$ ground_heads_var$ gt_sym$ delta$ extf$ arity_sym$ wt_sym$ ?v1 ?v2)) (gt$ ground_heads_var$ gt_sym$ delta$ extf$ arity_sym$ wt_sym$ ?v0 ?v2)))) :rule cong :premises (t1.t3.t0 t1.t3.t1))
(step t1.t3 (cl (= @a3 (forall ((?v0 S_v_tm$) (?v1 S_v_tm$) (?v2 S_v_tm$)) (=> (and (wary$ arity_sym$ arity_var$ ?v0) (wary$ arity_sym$ arity_var$ ?v1) (wary$ arity_sym$ arity_var$ ?v2) (gt$ ground_heads_var$ gt_sym$ delta$ extf$ arity_sym$ wt_sym$ ?v0 ?v1) (gt$ ground_heads_var$ gt_sym$ delta$ extf$ arity_sym$ wt_sym$ ?v1 ?v2)) (gt$ ground_heads_var$ gt_sym$ delta$ extf$ arity_sym$ wt_sym$ ?v0 ?v2))))) :rule bind)
(step t1.t4 (cl (= (forall ((?v0 S_v_tm$) (?v1 S_v_tm$) (?v2 S_v_tm$)) (=> (and (wary$ arity_sym$ arity_var$ ?v0) (wary$ arity_sym$ arity_var$ ?v1) (wary$ arity_sym$ arity_var$ ?v2) (gt$ ground_heads_var$ gt_sym$ delta$ extf$ arity_sym$ wt_sym$ ?v0 ?v1) (gt$ ground_heads_var$ gt_sym$ delta$ extf$ arity_sym$ wt_sym$ ?v1 ?v2)) (gt$ ground_heads_var$ gt_sym$ delta$ extf$ arity_sym$ wt_sym$ ?v0 ?v2))) @a1)) :rule hole :args ("TRUST_THEORY_REWRITE" (= (forall ((?v0 S_v_tm$) (?v1 S_v_tm$) (?v2 S_v_tm$)) (=> (and (wary$ arity_sym$ arity_var$ ?v0) (wary$ arity_sym$ arity_var$ ?v1) (wary$ arity_sym$ arity_var$ ?v2) (gt$ ground_heads_var$ gt_sym$ delta$ extf$ arity_sym$ wt_sym$ ?v0 ?v1) (gt$ ground_heads_var$ gt_sym$ delta$ extf$ arity_sym$ wt_sym$ ?v1 ?v2)) (gt$ ground_heads_var$ gt_sym$ delta$ extf$ arity_sym$ wt_sym$ ?v0 ?v2))) @a1) 13 7))
(step t1.t5 (cl @a2) :rule trans :premises (t1.t3 t1.t4))
(step t1.t6 (cl @a1) :rule resolution :premises (t1.t2 t1.t5 a4) :args (@a2 false @a3 false))
(step t1.t7 (cl @a0) :rule resolution :premises (t1.t1 t1.t6) :args (@a1 false))
(step t1 (cl (not @a1) @a0) :rule subproof :discharge (t1.a0))
(step t2 (cl (=> @a1 @a0) @a0) :rule resolution :premises (t0 t1) :args (@a1 true))
(step t3 (cl (=> @a1 @a0) (not @a0)) :rule implies_neg2)
(step t4 (cl (=> @a1 @a0) (=> @a1 @a0)) :rule resolution :premises (t2 t3) :args (@a0 true))
(step t5 (cl (=> @a1 @a0)) :rule contraction :premises (t4))
(step t6 (cl (not @a1) @a0) :rule implies :premises (t5))
(step t7 (cl (not @a0) (not @a5) (not @a7) (not @a6) (not @a8) (not @a9) @a4) :rule or_pos)
(step t8 (cl @a4 (not @a5) (not @a6) (not @a7) (not @a8) (not @a9) (not @a0)) :rule reordering :premises (t7))
(step t9 (cl (not (= (not (and @a5 (and @a6 @a4))) (not (and @a5 @a6 @a4)))) (not (not (and @a5 (and @a6 @a4)))) (not (and @a5 @a6 @a4))) :rule equiv_pos2)
(step t10 (cl (= (and @a5 (and @a6 @a4)) (and @a5 @a6 @a4))) :rule hole :args ("TRUST_THEORY_REWRITE" (= (and @a5 (and @a6 @a4)) (and @a5 @a6 @a4)) 1 6))
(step t11 (cl (= (not (and @a5 (and @a6 @a4))) (not (and @a5 @a6 @a4)))) :rule cong :premises (t10))
(step t12 (cl (not (and @a5 @a6 @a4))) :rule resolution :premises (t9 t11 a2) :args ((= (not (and @a5 (and @a6 @a4))) (not (and @a5 @a6 @a4))) false (not (and @a5 (and @a6 @a4))) false))
(step t13 (cl (not @a5) (not @a6) (not @a4)) :rule not_and :premises (t12))
(step t14 (cl @a5) :rule and :premises (a3) :args (0))
(step t15 (cl (and @a6 @a9)) :rule and :premises (a5) :args (1))
(step t16 (cl @a6) :rule and :premises (t15) :args (0))
(step t17 (cl (not @a4)) :rule resolution :premises (t13 t14 t16) :args (@a5 false @a6 false))
(step t18 (cl (and @a7 @a8)) :rule and :premises (a3) :args (1))
(step t19 (cl @a7) :rule and :premises (t18) :args (0))
(step t20 (cl @a8) :rule and :premises (t18) :args (1))
(step t21 (cl @a9) :rule and :premises (t15) :args (1))
(step t22 (cl (not @a0)) :rule resolution :premises (t8 t17 t14 t16 t19 t20 t21) :args (@a4 true @a5 false @a6 false @a7 false @a8 false @a9 false))
(step t23 (cl (not @a2) (not @a3) @a1) :rule equiv_pos2)
(anchor :step t24 :args ((?v0 S_v_tm$) (?v1 S_v_tm$) (?v2 S_v_tm$) (:= (?v0 S_v_tm$) ?v0) (:= (?v1 S_v_tm$) ?v1) (:= (?v2 S_v_tm$) ?v2)))
(step t24.t0 (cl (= (and (wary$ arity_sym$ arity_var$ ?v0) (and (wary$ arity_sym$ arity_var$ ?v1) (and (wary$ arity_sym$ arity_var$ ?v2) (and (gt$ ground_heads_var$ gt_sym$ delta$ extf$ arity_sym$ wt_sym$ ?v0 ?v1) (gt$ ground_heads_var$ gt_sym$ delta$ extf$ arity_sym$ wt_sym$ ?v1 ?v2))))) (and (wary$ arity_sym$ arity_var$ ?v0) (wary$ arity_sym$ arity_var$ ?v1) (wary$ arity_sym$ arity_var$ ?v2) (gt$ ground_heads_var$ gt_sym$ delta$ extf$ arity_sym$ wt_sym$ ?v0 ?v1) (gt$ ground_heads_var$ gt_sym$ delta$ extf$ arity_sym$ wt_sym$ ?v1 ?v2)))) :rule hole :args ("TRUST_THEORY_REWRITE" (= (and (wary$ arity_sym$ arity_var$ ?v0) (and (wary$ arity_sym$ arity_var$ ?v1) (and (wary$ arity_sym$ arity_var$ ?v2) (and (gt$ ground_heads_var$ gt_sym$ delta$ extf$ arity_sym$ wt_sym$ ?v0 ?v1) (gt$ ground_heads_var$ gt_sym$ delta$ extf$ arity_sym$ wt_sym$ ?v1 ?v2))))) (and (wary$ arity_sym$ arity_var$ ?v0) (wary$ arity_sym$ arity_var$ ?v1) (wary$ arity_sym$ arity_var$ ?v2) (gt$ ground_heads_var$ gt_sym$ delta$ extf$ arity_sym$ wt_sym$ ?v0 ?v1) (gt$ ground_heads_var$ gt_sym$ delta$ extf$ arity_sym$ wt_sym$ ?v1 ?v2))) 1 6))
(step t24.t1 (cl (= (gt$ ground_heads_var$ gt_sym$ delta$ extf$ arity_sym$ wt_sym$ ?v0 ?v2) (gt$ ground_heads_var$ gt_sym$ delta$ extf$ arity_sym$ wt_sym$ ?v0 ?v2))) :rule refl)
(step t24.t2 (cl (= (=> (and (wary$ arity_sym$ arity_var$ ?v0) (and (wary$ arity_sym$ arity_var$ ?v1) (and (wary$ arity_sym$ arity_var$ ?v2) (and (gt$ ground_heads_var$ gt_sym$ delta$ extf$ arity_sym$ wt_sym$ ?v0 ?v1) (gt$ ground_heads_var$ gt_sym$ delta$ extf$ arity_sym$ wt_sym$ ?v1 ?v2))))) (gt$ ground_heads_var$ gt_sym$ delta$ extf$ arity_sym$ wt_sym$ ?v0 ?v2)) (=> (and (wary$ arity_sym$ arity_var$ ?v0) (wary$ arity_sym$ arity_var$ ?v1) (wary$ arity_sym$ arity_var$ ?v2) (gt$ ground_heads_var$ gt_sym$ delta$ extf$ arity_sym$ wt_sym$ ?v0 ?v1) (gt$ ground_heads_var$ gt_sym$ delta$ extf$ arity_sym$ wt_sym$ ?v1 ?v2)) (gt$ ground_heads_var$ gt_sym$ delta$ extf$ arity_sym$ wt_sym$ ?v0 ?v2)))) :rule cong :premises (t24.t0 t24.t1))
(step t24 (cl (= @a3 (forall ((?v0 S_v_tm$) (?v1 S_v_tm$) (?v2 S_v_tm$)) (=> (and (wary$ arity_sym$ arity_var$ ?v0) (wary$ arity_sym$ arity_var$ ?v1) (wary$ arity_sym$ arity_var$ ?v2) (gt$ ground_heads_var$ gt_sym$ delta$ extf$ arity_sym$ wt_sym$ ?v0 ?v1) (gt$ ground_heads_var$ gt_sym$ delta$ extf$ arity_sym$ wt_sym$ ?v1 ?v2)) (gt$ ground_heads_var$ gt_sym$ delta$ extf$ arity_sym$ wt_sym$ ?v0 ?v2))))) :rule bind)
(step t25 (cl (= (forall ((?v0 S_v_tm$) (?v1 S_v_tm$) (?v2 S_v_tm$)) (=> (and (wary$ arity_sym$ arity_var$ ?v0) (wary$ arity_sym$ arity_var$ ?v1) (wary$ arity_sym$ arity_var$ ?v2) (gt$ ground_heads_var$ gt_sym$ delta$ extf$ arity_sym$ wt_sym$ ?v0 ?v1) (gt$ ground_heads_var$ gt_sym$ delta$ extf$ arity_sym$ wt_sym$ ?v1 ?v2)) (gt$ ground_heads_var$ gt_sym$ delta$ extf$ arity_sym$ wt_sym$ ?v0 ?v2))) @a1)) :rule hole :args ("TRUST_THEORY_REWRITE" (= (forall ((?v0 S_v_tm$) (?v1 S_v_tm$) (?v2 S_v_tm$)) (=> (and (wary$ arity_sym$ arity_var$ ?v0) (wary$ arity_sym$ arity_var$ ?v1) (wary$ arity_sym$ arity_var$ ?v2) (gt$ ground_heads_var$ gt_sym$ delta$ extf$ arity_sym$ wt_sym$ ?v0 ?v1) (gt$ ground_heads_var$ gt_sym$ delta$ extf$ arity_sym$ wt_sym$ ?v1 ?v2)) (gt$ ground_heads_var$ gt_sym$ delta$ extf$ arity_sym$ wt_sym$ ?v0 ?v2))) @a1) 13 7))
(step t26 (cl @a2) :rule trans :premises (t24 t25))
(step t27 (cl @a1) :rule resolution :premises (t23 t26 a4) :args (@a2 false @a3 false))
(step t28 (cl) :rule resolution :premises (t6 t22 t27) :args (@a0 true @a1 false))

