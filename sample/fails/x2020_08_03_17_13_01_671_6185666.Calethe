(assume a0 (! (not (! (forall ((?v0 S_v_tm$)) (=> (member$ ?v0 (! (set$ (! (args$ ta$) :named @p_3)) :named @p_2)) (= (vars$ ?v0) bot$))) :named @p_1)) :named @p_0))
(assume a1 (! (forall ((?v0 S_v_tm$) (?v1 S_v_tm$)) (=> (and (member$ ?v0 (set$ (args$ ?v1))) (= (vars$ ?v1) bot$)) (= (vars$ ?v0) bot$))) :named @p_4))
(assume a2 (! (= (! (vars$ ta$) :named @p_6) bot$) :named @p_5))
(step t0 (cl (! (=> (! (forall ((?v0 S_v_tm$) (?v1 S_v_tm$)) (or (not (member$ ?v0 (set$ (args$ ?v1)))) (not (= bot$ (vars$ ?v1))) (= bot$ (vars$ ?v0)))) :named @p_8) (! (or (! (not (! (member$ (! (choice ((?v0 S_v_tm$)) (not (or (not (member$ ?v0 @p_2)) (= bot$ (vars$ ?v0))))) :named @p_12) @p_2) :named @p_11)) :named @p_10) (! (not (! (= bot$ @p_6) :named @p_14)) :named @p_13) (! (= bot$ (! (vars$ @p_12) :named @p_16)) :named @p_15)) :named @p_9)) :named @p_7) @p_8) :rule implies_neg1)
(anchor :step t1)
(assume t1.a0 @p_8)
(step t1.t0 (cl (or (! (not @p_8) :named @p_17) @p_9)) :rule forall_inst :args (@p_12 ta$))
(anchor :step t1.t1 :args ((?v0 S_v_tm$) (?v1 S_v_tm$) (:= (?v0 S_v_tm$) ?v0) (:= (?v1 S_v_tm$) ?v1)))
(step t1.t1.t0 (cl (= (member$ ?v0 (set$ (args$ ?v1))) (member$ ?v0 (set$ (args$ ?v1))))) :rule refl)
(step t1.t1.t1 (cl (= (= (vars$ ?v1) bot$) (= bot$ (vars$ ?v1)))) :rule hole)
(step t1.t1.t2 (cl (= (and (member$ ?v0 (set$ (args$ ?v1))) (= (vars$ ?v1) bot$)) (and (member$ ?v0 (set$ (args$ ?v1))) (= bot$ (vars$ ?v1))))) :rule cong :premises (t1.t1.t0 t1.t1.t1))
(step t1.t1.t3 (cl (= (= (vars$ ?v0) bot$) (= bot$ (vars$ ?v0)))) :rule hole)
(step t1.t1.t4 (cl (= (=> (and (member$ ?v0 (set$ (args$ ?v1))) (= (vars$ ?v1) bot$)) (= (vars$ ?v0) bot$)) (=> (and (member$ ?v0 (set$ (args$ ?v1))) (= bot$ (vars$ ?v1))) (= bot$ (vars$ ?v0))))) :rule cong :premises (t1.t1.t2 t1.t1.t3))
(step t1.t1 (cl (! (= @p_4 (! (forall ((?v0 S_v_tm$) (?v1 S_v_tm$)) (=> (and (member$ ?v0 (set$ (args$ ?v1))) (= bot$ (vars$ ?v1))) (= bot$ (vars$ ?v0)))) :named @p_19)) :named @p_18)) :rule bind)
(step t1.t2 (cl (! (= @p_19 @p_8) :named @p_20)) :rule hole)
(step t1.t3 (cl @p_17 @p_9) :rule or :premises (t1.t0))
(step t1.t4 (cl (! (not (! (= @p_4 @p_8) :named @p_22)) :named @p_21) (! (not @p_4) :named @p_23) @p_8) :rule equiv_pos2)
(step t1.t5 (cl @p_22) :rule trans :premises (t1.t1 t1.t2))
(step t1.t6 (cl @p_8) :rule resolution :premises (t1.t4 t1.t5 a1) :args (@p_22 (! false :named @p_24) @p_4 @p_24))
(step t1.t7 (cl @p_9) :rule resolution :premises (t1.t3 t1.t6) :args (@p_8 @p_24))
(step t1 (cl @p_17 @p_9) :rule subproof :discharge (t1.a0))
(step t2 (cl @p_7 @p_9) :rule resolution :premises (t0 t1) :args (@p_8 (! true :named @p_25)))
(step t3 (cl @p_7 (! (not @p_9) :named @p_26)) :rule implies_neg2)
(step t4 (cl @p_7 @p_7) :rule resolution :premises (t2 t3) :args (@p_9 @p_25))
(step t5 (cl @p_7) :rule contraction :premises (t4))
(step t6 (cl @p_26 @p_10 @p_13 @p_15) :rule or_pos)
(step t7 (cl (= (! (or @p_10 @p_15) :named @p_27) @p_27)) :rule refl)
(step t8 (cl (= (! (not @p_10) :named @p_28) @p_11)) :rule hole)
(step t9 (cl (not (! (= (! (or @p_27 @p_28) :named @p_30) (! (or @p_27 @p_11) :named @p_31)) :named @p_29)) (not @p_30) @p_31) :rule equiv_pos2)
(step t10 (cl @p_29) :rule cong :premises (t7 t8))
(step t11 (cl @p_27 @p_28) :rule or_neg :args (0))
(step t12 (cl @p_30 (! (not @p_27) :named @p_32)) :rule or_neg :args (0))
(step t13 (cl @p_30 (not @p_28)) :rule or_neg :args (1))
(step t14 (cl @p_30 @p_30) :rule resolution :premises (t11 t12 t13) :args (@p_27 @p_25 @p_28 @p_25))
(step t15 (cl @p_30) :rule contraction :premises (t14))
(step t16 (cl @p_31) :rule resolution :premises (t9 t10 t15) :args (@p_29 @p_24 @p_30 @p_24))
(step t17 (cl @p_27 @p_11) :rule or :premises (t16))
(anchor :step t18 :args ((:= (?v0 S_v_tm$) @p_12)))
(step t18.t0 (cl (= (or (not (member$ ?v0 @p_2)) (= bot$ (vars$ ?v0))) @p_27)) :rule refl)
(step t18 (cl (= (! (forall ((?v0 S_v_tm$)) (or (not (member$ ?v0 @p_2)) (= bot$ (vars$ ?v0)))) :named @p_33) @p_27)) :rule sko_forall)
(anchor :step t19 :args ((?v0 S_v_tm$) (:= (?v0 S_v_tm$) ?v0)))
(step t19.t0 (cl (= (member$ ?v0 @p_2) (member$ ?v0 @p_2))) :rule refl)
(step t19.t1 (cl (= (= (vars$ ?v0) bot$) (= bot$ (vars$ ?v0)))) :rule hole)
(step t19.t2 (cl (= (=> (member$ ?v0 @p_2) (= (vars$ ?v0) bot$)) (=> (member$ ?v0 @p_2) (= bot$ (vars$ ?v0))))) :rule cong :premises (t19.t0 t19.t1))
(step t19 (cl (= @p_1 (! (forall ((?v0 S_v_tm$)) (=> (member$ ?v0 @p_2) (= bot$ (vars$ ?v0)))) :named @p_34))) :rule bind)
(step t20 (cl (= @p_34 @p_33)) :rule hole)
(step t21 (cl (= @p_1 @p_33)) :rule trans :premises (t19 t20))
(anchor :step t22 :args ((?v0 S_v_tm$) (?v1 S_v_tm$) (:= (?v0 S_v_tm$) ?v0) (:= (?v1 S_v_tm$) ?v1)))
(step t22.t0 (cl (= (member$ ?v0 (set$ (args$ ?v1))) (member$ ?v0 (set$ (args$ ?v1))))) :rule refl)
(step t22.t1 (cl (= (= (vars$ ?v1) bot$) (= bot$ (vars$ ?v1)))) :rule hole)
(step t22.t2 (cl (= (and (member$ ?v0 (set$ (args$ ?v1))) (= (vars$ ?v1) bot$)) (and (member$ ?v0 (set$ (args$ ?v1))) (= bot$ (vars$ ?v1))))) :rule cong :premises (t22.t0 t22.t1))
(step t22.t3 (cl (= (= (vars$ ?v0) bot$) (= bot$ (vars$ ?v0)))) :rule hole)
(step t22.t4 (cl (= (=> (and (member$ ?v0 (set$ (args$ ?v1))) (= (vars$ ?v1) bot$)) (= (vars$ ?v0) bot$)) (=> (and (member$ ?v0 (set$ (args$ ?v1))) (= bot$ (vars$ ?v1))) (= bot$ (vars$ ?v0))))) :rule cong :premises (t22.t2 t22.t3))
(step t22 (cl @p_18) :rule bind)
(step t23 (cl @p_20) :rule hole)
(step t24 (cl @p_17 @p_9) :rule implies :premises (t5))
(step t25 (cl @p_13 @p_10 @p_15 @p_26) :rule reordering :premises (t6))
(step t26 (cl @p_14) :rule symm :premises (a2))
(step t27 (cl @p_11 @p_27) :rule reordering :premises (t17))
(step t28 (cl (not (! (= (! (not @p_33) :named @p_36) @p_32) :named @p_35)) (not @p_36) @p_32) :rule equiv_pos2)
(step t29 (cl @p_35) :rule cong :premises (t18))
(step t30 (cl (not (! (= @p_0 @p_36) :named @p_37)) (not @p_0) @p_36) :rule equiv_pos2)
(step t31 (cl @p_37) :rule cong :premises (t21))
(step t32 (cl @p_36) :rule resolution :premises (t30 t31 a0) :args (@p_37 @p_24 @p_0 @p_24))
(step t33 (cl @p_32) :rule resolution :premises (t28 t29 t32) :args (@p_35 @p_24 @p_36 @p_24))
(step t34 (cl @p_27 (not @p_15)) :rule or_neg :args (1))
(step t35 (cl @p_26 @p_27) :rule resolution :premises (t25 t26 t27 t34) :args (@p_14 @p_24 @p_11 @p_24 @p_15 @p_25))
(step t36 (cl @p_21 @p_23 @p_8) :rule equiv_pos2)
(step t37 (cl @p_22) :rule trans :premises (t22 t23))
(step t38 (cl @p_8) :rule resolution :premises (t36 t37 a1) :args (@p_22 @p_24 @p_4 @p_24))
(step t39 (cl @p_27) :rule resolution :premises (t24 t35 t38) :args (@p_9 @p_25 @p_8 @p_24))
(step t40 (cl) :rule resolution :premises (t39 t33) :args (@p_27 @p_25))
