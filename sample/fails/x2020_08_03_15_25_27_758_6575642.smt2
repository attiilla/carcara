; --full-saturate-quant --inst-when=full-last-call --inst-no-entail --term-db-mode=relevant --multi-trigger-linear --no-statistics --random-seed=1 --lang=smt2 --continued-execution --tlimit 212
(set-option :produce-unsat-cores true)
(set-logic AUFLIA)
(declare-sort Nat$ 0)
(declare-sort Enat$ 0)
(declare-sort S_v_hd$ 0)
(declare-sort S_v_tm$ 0)
(declare-sort S_enat_fun$ 0)
(declare-sort S_v_tm_set$ 0)
(declare-sort V_enat_fun$ 0)
(declare-sort S_v_tm_list$ 0)
(declare-fun hd$ (S_v_hd$) S_v_tm$)
(declare-fun sa$ () S_v_tm$)
(declare-fun ta$ () S_v_tm$)
(declare-fun ua$ () S_v_tm$)
(declare-fun saa$ () S_v_tm$)
(declare-fun set$ (S_v_tm_list$) S_v_tm_set$)
(declare-fun sup$ (S_v_tm_set$ S_v_tm_set$) S_v_tm_set$)
(declare-fun taa$ () S_v_tm$)
(declare-fun uaa$ () S_v_tm$)
(declare-fun apps$ (S_v_tm$ S_v_tm_list$) S_v_tm$)
(declare-fun args$ (S_v_tm$) S_v_tm_list$)
(declare-fun enat$ (Nat$) Enat$)
(declare-fun size$ (S_v_tm_list$) Nat$)
(declare-fun wary$ (S_enat_fun$ V_enat_fun$ S_v_tm$) Bool)
(declare-fun member$ (S_v_tm$ S_v_tm_set$) Bool)
(declare-fun less_eq$ (Enat$ Enat$) Bool)
(declare-fun arity_hd$ (S_enat_fun$ V_enat_fun$ S_v_hd$) Enat$)
(declare-fun arity_sym$ () S_enat_fun$)
(declare-fun arity_var$ () V_enat_fun$)
(assert (! (not (wary$ arity_sym$ arity_var$ saa$)) :named a0))
(assert (! (wary$ arity_sym$ arity_var$ sa$) :named a1))
(assert (! (wary$ arity_sym$ arity_var$ ua$) :named a2))
(assert (! (wary$ arity_sym$ arity_var$ ta$) :named a3))
(assert (! (member$ uaa$ (sup$ (sup$ (set$ (args$ ua$)) (set$ (args$ ta$))) (set$ (args$ sa$)))) :named a4))
(assert (! (forall ((?v0 S_v_tm$) (?v1 S_v_tm$)) (=> (and (member$ ?v0 (set$ (args$ ?v1))) (wary$ arity_sym$ arity_var$ ?v1)) (wary$ arity_sym$ arity_var$ ?v0))) :named a5))
(assert (! (member$ taa$ (sup$ (sup$ (set$ (args$ ua$)) (set$ (args$ ta$))) (set$ (args$ sa$)))) :named a6))
(assert (! (member$ saa$ (sup$ (sup$ (set$ (args$ ua$)) (set$ (args$ ta$))) (set$ (args$ sa$)))) :named a7))
(assert (! (forall ((?v0 S_v_hd$) (?v1 S_v_tm_list$) (?v2 S_v_hd$) (?v3 S_v_tm_list$)) (= (= (apps$ (hd$ ?v0) ?v1) (apps$ (hd$ ?v2) ?v3)) (and (= ?v0 ?v2) (= ?v1 ?v3)))) :named a8))
(assert (! (forall ((?v0 S_v_tm$)) (=> (and (wary$ arity_sym$ arity_var$ ?v0) (forall ((?v1 S_v_hd$) (?v2 S_v_tm_list$)) (=> (and (= ?v0 (apps$ (hd$ ?v1) ?v2)) (and (forall ((?v3 S_v_tm$)) (=> (member$ ?v3 (set$ ?v2)) (wary$ arity_sym$ arity_var$ ?v3))) (less_eq$ (enat$ (size$ ?v2)) (arity_hd$ arity_sym$ arity_var$ ?v1)))) false))) false)) :named a9))
(assert (! (forall ((?v0 S_v_tm$) (?v1 S_v_tm_set$) (?v2 S_v_tm_set$)) (= (member$ ?v0 (sup$ ?v1 ?v2)) (or (member$ ?v0 ?v1) (member$ ?v0 ?v2)))) :named a10))
(check-sat)
