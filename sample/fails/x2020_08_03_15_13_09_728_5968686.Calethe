(assume a0 (! (not (! (= (! (of_nat$ delta$) :named @p_2) (! (of_nat$ epsilon$) :named @p_3)) :named @p_1)) :named @p_0))
(assume a1 (! (forall ((?v0 S$)) (=> (and (= (arity_sym$ ?v0) one$) (= (wt_sym$ ?v0) zero$)) @p_1)) :named @p_4))
(assume a2 (! (exists ((?v0 S$)) (and (member$ ?v0 (! (ground_heads$ ground_heads_var$ (! (head$ ta$) :named @p_7)) :named @p_6)) (and (= (arity_sym$ ?v0) one$) (= (wt_sym$ ?v0) zero$)))) :named @p_5))
(step t0 (cl (! (=> (! (forall ((?v0 S$)) (or (not (= one$ (arity_sym$ ?v0))) (not (= zero$ (wt_sym$ ?v0))))) :named @p_9) (! (or (! (not (! (= one$ (! (arity_sym$ (! (choice ((?v0 S$)) (not (or (not (member$ ?v0 @p_6)) (not (= one$ (arity_sym$ ?v0))) (not (= zero$ (wt_sym$ ?v0)))))) :named @p_14)) :named @p_13)) :named @p_12)) :named @p_11) (! (not (! (= zero$ (! (wt_sym$ @p_14) :named @p_17)) :named @p_16)) :named @p_15)) :named @p_10)) :named @p_8) @p_9) :rule implies_neg1)
(anchor :step t1)
(assume t1.a0 @p_9)
(step t1.t0 (cl (or (! (not @p_9) :named @p_18) @p_10)) :rule forall_inst :args (@p_14))
(anchor :step t1.t1 :args ((?v0 S$) (:= (?v0 S$) ?v0)))
(step t1.t1.t0 (cl (= (= (arity_sym$ ?v0) one$) (= one$ (arity_sym$ ?v0)))) :rule hole)
(step t1.t1.t1 (cl (= (= (wt_sym$ ?v0) zero$) (= zero$ (wt_sym$ ?v0)))) :rule hole)
(step t1.t1.t2 (cl (= (and (= (arity_sym$ ?v0) one$) (= (wt_sym$ ?v0) zero$)) (and (= one$ (arity_sym$ ?v0)) (= zero$ (wt_sym$ ?v0))))) :rule cong :premises (t1.t1.t0 t1.t1.t1))
(step t1.t1.t3 (cl (! (= @p_1 @p_1) :named @p_19)) :rule refl)
(step t1.t1.t4 (cl (= (=> (and (= (arity_sym$ ?v0) one$) (= (wt_sym$ ?v0) zero$)) @p_1) (=> (and (= one$ (arity_sym$ ?v0)) (= zero$ (wt_sym$ ?v0))) @p_1))) :rule cong :premises (t1.t1.t2 t1.t1.t3))
(step t1.t1 (cl (! (= @p_4 (! (forall ((?v0 S$)) (=> (and (= one$ (arity_sym$ ?v0)) (= zero$ (wt_sym$ ?v0))) @p_1)) :named @p_21)) :named @p_20)) :rule bind)
(step t1.t2 (cl (! (= @p_21 (! (forall ((?v0 S$)) (or (not (= one$ (arity_sym$ ?v0))) (not (= zero$ (wt_sym$ ?v0))) @p_1)) :named @p_23)) :named @p_22)) :rule hole)
(step t1.t3 (cl (! (= @p_23 (! (or @p_1 @p_9) :named @p_25)) :named @p_24)) :rule hole)
(step t1.t4 (cl (! (= @p_21 @p_25) :named @p_26)) :rule trans :premises (t1.t2 t1.t3))
(step t1.t5 (cl (! (not (! (= @p_4 @p_25) :named @p_28)) :named @p_27) (! (not @p_4) :named @p_29) @p_25) :rule equiv_pos2)
(step t1.t6 (cl @p_28) :rule trans :premises (t1.t1 t1.t4))
(step t1.t7 (cl @p_25) :rule resolution :premises (t1.t5 t1.t6 a1) :args (@p_28 (! false :named @p_30) @p_4 @p_30))
(step t1.t8 (cl @p_18 @p_10) :rule or :premises (t1.t0))
(step t1.t9 (cl @p_1 @p_9) :rule or :premises (t1.t7))
(step t1.t10 (cl @p_9) :rule resolution :premises (t1.t9 a0) :args (@p_1 (! true :named @p_31)))
(step t1.t11 (cl @p_10) :rule resolution :premises (t1.t8 t1.t10) :args (@p_9 @p_30))
(step t1 (cl @p_18 @p_10) :rule subproof :discharge (t1.a0))
(step t2 (cl @p_8 @p_10) :rule resolution :premises (t0 t1) :args (@p_9 @p_31))
(step t3 (cl @p_8 (! (not @p_10) :named @p_32)) :rule implies_neg2)
(step t4 (cl @p_8 @p_8) :rule resolution :premises (t2 t3) :args (@p_10 @p_31))
(step t5 (cl @p_8) :rule contraction :premises (t4))
(step t6 (cl @p_32 @p_11 @p_15) :rule or_pos)
(step t7 (cl (= (! (or (! (not (! (member$ @p_14 @p_6) :named @p_35)) :named @p_34) @p_11 @p_15) :named @p_33) @p_33)) :rule refl)
(step t8 (cl (= (! (not @p_11) :named @p_36) @p_12)) :rule hole)
(step t9 (cl (not (! (= (! (or @p_33 @p_36) :named @p_38) (! (or @p_33 @p_12) :named @p_39)) :named @p_37)) (not @p_38) @p_39) :rule equiv_pos2)
(step t10 (cl @p_37) :rule cong :premises (t7 t8))
(step t11 (cl @p_33 @p_36) :rule or_neg :args (1))
(step t12 (cl @p_38 (! (not @p_33) :named @p_40)) :rule or_neg :args (0))
(step t13 (cl @p_38 (not @p_36)) :rule or_neg :args (1))
(step t14 (cl @p_38 @p_38) :rule resolution :premises (t11 t12 t13) :args (@p_33 @p_31 @p_36 @p_31))
(step t15 (cl @p_38) :rule contraction :premises (t14))
(step t16 (cl @p_39) :rule resolution :premises (t9 t10 t15) :args (@p_37 @p_30 @p_38 @p_30))
(step t17 (cl @p_33 @p_12) :rule or :premises (t16))
(anchor :step t18 :args ((:= (?v0 S$) @p_14)))
(step t18.t0 (cl (= (or (not (member$ ?v0 @p_6)) (not (= one$ (arity_sym$ ?v0))) (not (= zero$ (wt_sym$ ?v0)))) @p_33)) :rule refl)
(step t18 (cl (= (! (forall ((?v0 S$)) (or (not (member$ ?v0 @p_6)) (not (= one$ (arity_sym$ ?v0))) (not (= zero$ (wt_sym$ ?v0))))) :named @p_41) @p_33)) :rule sko_forall)
(anchor :step t19 :args ((?v0 S$) (:= (?v0 S$) ?v0)))
(step t19.t0 (cl (= (and (member$ ?v0 @p_6) (and (= (arity_sym$ ?v0) one$) (= (wt_sym$ ?v0) zero$))) (and (member$ ?v0 @p_6) (= (arity_sym$ ?v0) one$) (= (wt_sym$ ?v0) zero$)))) :rule hole)
(step t19.t1 (cl (= (member$ ?v0 @p_6) (member$ ?v0 @p_6))) :rule refl)
(step t19.t2 (cl (= (= (arity_sym$ ?v0) one$) (= one$ (arity_sym$ ?v0)))) :rule hole)
(step t19.t3 (cl (= (= (wt_sym$ ?v0) zero$) (= zero$ (wt_sym$ ?v0)))) :rule hole)
(step t19.t4 (cl (= (and (member$ ?v0 @p_6) (= (arity_sym$ ?v0) one$) (= (wt_sym$ ?v0) zero$)) (and (member$ ?v0 @p_6) (= one$ (arity_sym$ ?v0)) (= zero$ (wt_sym$ ?v0))))) :rule cong :premises (t19.t1 t19.t2 t19.t3))
(step t19.t5 (cl (= (and (member$ ?v0 @p_6) (and (= (arity_sym$ ?v0) one$) (= (wt_sym$ ?v0) zero$))) (and (member$ ?v0 @p_6) (= one$ (arity_sym$ ?v0)) (= zero$ (wt_sym$ ?v0))))) :rule trans :premises (t19.t0 t19.t4))
(step t19 (cl (= @p_5 (! (exists ((?v0 S$)) (and (member$ ?v0 @p_6) (= one$ (arity_sym$ ?v0)) (= zero$ (wt_sym$ ?v0)))) :named @p_42))) :rule bind)
(step t20 (cl (= @p_42 (! (not (! (forall ((?v0 S$)) (not (and (member$ ?v0 @p_6) (= one$ (arity_sym$ ?v0)) (= zero$ (wt_sym$ ?v0))))) :named @p_44)) :named @p_43))) :rule hole)
(step t21 (cl (= @p_44 @p_41)) :rule hole)
(step t22 (cl (= @p_43 (! (not @p_41) :named @p_45))) :rule cong :premises (t21))
(step t23 (cl (= @p_42 @p_45)) :rule trans :premises (t20 t22))
(step t24 (cl (= (! (not @p_15) :named @p_46) @p_16)) :rule hole)
(step t25 (cl (not (! (= (! (or @p_33 @p_46) :named @p_48) (! (or @p_33 @p_16) :named @p_49)) :named @p_47)) (not @p_48) @p_49) :rule equiv_pos2)
(step t26 (cl @p_47) :rule cong :premises (t7 t24))
(step t27 (cl @p_33 @p_46) :rule or_neg :args (2))
(step t28 (cl @p_48 @p_40) :rule or_neg :args (0))
(step t29 (cl @p_48 (not @p_46)) :rule or_neg :args (1))
(step t30 (cl @p_48 @p_48) :rule resolution :premises (t27 t28 t29) :args (@p_33 @p_31 @p_46 @p_31))
(step t31 (cl @p_48) :rule contraction :premises (t30))
(step t32 (cl @p_49) :rule resolution :premises (t25 t26 t31) :args (@p_47 @p_30 @p_48 @p_30))
(step t33 (cl @p_33 @p_16) :rule or :premises (t32))
(anchor :step t34 :args ((?v0 S$) (:= (?v0 S$) ?v0)))
(step t34.t0 (cl (= (= (arity_sym$ ?v0) one$) (= one$ (arity_sym$ ?v0)))) :rule hole)
(step t34.t1 (cl (= (= (wt_sym$ ?v0) zero$) (= zero$ (wt_sym$ ?v0)))) :rule hole)
(step t34.t2 (cl (= (and (= (arity_sym$ ?v0) one$) (= (wt_sym$ ?v0) zero$)) (and (= one$ (arity_sym$ ?v0)) (= zero$ (wt_sym$ ?v0))))) :rule cong :premises (t34.t0 t34.t1))
(step t34.t3 (cl @p_19) :rule refl)
(step t34.t4 (cl (= (=> (and (= (arity_sym$ ?v0) one$) (= (wt_sym$ ?v0) zero$)) @p_1) (=> (and (= one$ (arity_sym$ ?v0)) (= zero$ (wt_sym$ ?v0))) @p_1))) :rule cong :premises (t34.t2 t34.t3))
(step t34 (cl @p_20) :rule bind)
(step t35 (cl @p_22) :rule hole)
(step t36 (cl @p_24) :rule hole)
(step t37 (cl @p_26) :rule trans :premises (t35 t36))
(step t38 (cl @p_27 @p_29 @p_25) :rule equiv_pos2)
(step t39 (cl @p_28) :rule trans :premises (t34 t37))
(step t40 (cl @p_25) :rule resolution :premises (t38 t39 a1) :args (@p_28 @p_30 @p_4 @p_30))
(step t41 (cl @p_18 @p_10) :rule implies :premises (t5))
(step t42 (cl @p_11 @p_15 @p_32) :rule reordering :premises (t6))
(step t43 (cl @p_12 @p_33) :rule reordering :premises (t17))
(step t44 (cl (not (! (= @p_45 @p_40) :named @p_50)) (not @p_45) @p_40) :rule equiv_pos2)
(step t45 (cl @p_50) :rule cong :premises (t18))
(step t46 (cl (not (! (= @p_5 @p_45) :named @p_51)) (not @p_5) @p_45) :rule equiv_pos2)
(step t47 (cl @p_51) :rule trans :premises (t19 t23))
(step t48 (cl @p_45) :rule resolution :premises (t46 t47 a2) :args (@p_51 @p_30 @p_5 @p_30))
(step t49 (cl @p_40) :rule resolution :premises (t44 t45 t48) :args (@p_50 @p_30 @p_45 @p_30))
(step t50 (cl @p_16 @p_33) :rule reordering :premises (t33))
(step t51 (cl @p_32 @p_33) :rule resolution :premises (t42 t43 t50) :args (@p_12 @p_30 @p_16 @p_30))
(step t52 (cl @p_1 @p_9) :rule or :premises (t40))
(step t53 (cl @p_9) :rule resolution :premises (t52 a0) :args (@p_1 @p_31))
(step t54 (cl @p_33) :rule resolution :premises (t41 t51 t53) :args (@p_10 @p_31 @p_9 @p_30))
(step t55 (cl) :rule resolution :premises (t54 t49) :args (@p_33 @p_31))
