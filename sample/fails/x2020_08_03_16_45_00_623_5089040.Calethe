(assume a0 (! (forall ((?v0 S_v_tm$)) (=> (not (is_Hd$ ?v0)) (less$ (size$ (arg$ ?v0)) (size$ ?v0)))) :named @p_0))
(assume a1 (! (less$ (! (size$ ta$) :named @p_2) (! (size$ ua$) :named @p_3)) :named @p_1))
(assume a2 (! (not (! (is_Hd$ ta$) :named @p_5)) :named @p_4))
(assume a3 (! (not (! (is_Hd$ ua$) :named @p_7)) :named @p_6))
(assume a4 (! (forall ((?v0 Nat_set$) (?v1 Nat$)) (=> (and (finite$ ?v0) (not (= ?v0 bot$))) (= (max$ (insert$ ?v1 ?v0)) (max$a ?v1 (max$ ?v0))))) :named @p_8))
(assume a5 (! (forall ((?v0 Nat$)) (= (max$ (insert$ ?v0 bot$)) ?v0)) :named @p_9))
(assume a6 (! (forall ((?v0 Nat$) (?v1 Nat$) (?v2 Nat$)) (=> (and (less$ ?v0 ?v1) (less$ ?v2 ?v0)) (less$ ?v2 ?v1))) :named @p_10))
(assume a7 (! (finite$ bot$) :named @p_11))
(assume a8 (! (forall ((?v0 Nat_set$) (?v1 Nat$)) (=> (finite$ ?v0) (finite$ (insert$ ?v1 ?v0)))) :named @p_12))
(assume a9 (! (forall ((?v0 Nat$) (?v1 Nat$)) (= (max$a ?v0 ?v1) (ite (less_eq$ ?v0 ?v1) ?v1 ?v0))) :named @p_13))
(assume a10 (! (not (! (less$ (! (max$ (! (insert$ (! (size$ (! (arg$ ta$) :named @p_19)) :named @p_18) (! (insert$ @p_2 (! (insert$ (! (size$ (! (arg$ ua$) :named @p_23)) :named @p_22) bot$) :named @p_21)) :named @p_20)) :named @p_17)) :named @p_16) @p_3) :named @p_15)) :named @p_14))
(step t0 (cl (= (! (not @p_1) :named @p_24) @p_24)) :rule refl)
(step t1 (cl (= (! (not @p_14) :named @p_25) @p_15)) :rule hole)
(step t2 (cl (= (! (not (! (= (! (max$ @p_20) :named @p_28) (! (max$a @p_2 (! (max$ @p_21) :named @p_30)) :named @p_29)) :named @p_27)) :named @p_26) @p_26)) :rule refl)
(step t3 (cl (= (! (not (! (= @p_16 (! (max$a @p_18 @p_28) :named @p_33)) :named @p_32)) :named @p_31) @p_31)) :rule refl)
(step t4 (cl (= (! (not (! (= @p_33 (! (ite (! (less_eq$ @p_18 @p_28) :named @p_37) @p_28 @p_18) :named @p_36)) :named @p_35)) :named @p_34) @p_34)) :rule refl)
(step t5 (cl (= (! (not (! (= @p_28 @p_36) :named @p_39)) :named @p_38) @p_38)) :rule refl)
(step t6 (cl (= (! (not (! (= @p_29 (! (ite (! (less_eq$ @p_2 @p_30) :named @p_43) @p_30 @p_2) :named @p_42)) :named @p_41)) :named @p_40) @p_40)) :rule refl)
(step t7 (cl (= (! (not (! (= @p_2 @p_42) :named @p_45)) :named @p_44) @p_44)) :rule refl)
(step t8 (cl (! (=> (! (and @p_1 @p_14 @p_27 @p_32 @p_35 @p_39 @p_41 @p_45) :named @p_47) (! (and @p_1 @p_45 @p_41 @p_27 @p_39 @p_35 @p_32 @p_14) :named @p_48)) :named @p_46) @p_47) :rule implies_neg1)
(anchor :step t9)
(assume t9.a0 @p_1)
(assume t9.a1 @p_14)
(assume t9.a2 @p_27)
(assume t9.a3 @p_32)
(assume t9.a4 @p_35)
(assume t9.a5 @p_39)
(assume t9.a6 @p_41)
(assume t9.a7 @p_45)
(step t9.t0 (cl (! (= (! (= (! (= @p_42 @p_42) :named @p_51) (! true :named @p_52)) :named @p_50) @p_51) :named @p_49)) :rule equiv_simplify)
(step t9.t1 (cl (! (= @p_51 @p_51) :named @p_53)) :rule refl)
(step t9.t2 (cl @p_51) :rule refl)
(step t9.t3 (cl @p_51) :rule refl)
(step t9.t4 (cl @p_53) :rule cong :premises (t9.t2 t9.t3))
(step t9.t5 (cl @p_50) :rule hole)
(step t9.t6 (cl (! (not @p_50) :named @p_54) @p_51) :rule equiv1 :premises (t9.t0))
(step t9.t7 (cl @p_50) :rule trans :premises (t9.t1 t9.t4 t9.t5))
(step t9.t8 (cl @p_51) :rule resolution :premises (t9.t6 t9.t7) :args (@p_50 (! false :named @p_55)))
(step t9.t9 (cl (! (= @p_13 @p_13) :named @p_56)) :rule refl)
(step t9.t10 (cl (! (= @p_29 @p_29) :named @p_57)) :rule refl)
(step t9.t11 (cl (! (= @p_41 @p_41) :named @p_58)) :rule cong :premises (t9.t10 t9.t8))
(step t9.t12 (cl (! (not (! (= (! (=> @p_13 @p_41) :named @p_61) @p_61) :named @p_60)) :named @p_59) (! (not @p_61) :named @p_62) @p_61) :rule equiv_pos2)
(step t9.t13 (cl @p_60) :rule cong :premises (t9.t9 t9.t11))
(step t9.t14 (cl @p_61 @p_13) :rule implies_neg1)
(anchor :step t9.t15)
(assume t9.t15.a0 @p_13)
(step t9.t15.t0 (cl (! (or (! (not @p_13) :named @p_64) @p_41) :named @p_63)) :rule forall_inst :args (@p_2 @p_30))
(step t9.t15.t1 (cl @p_64 @p_41) :rule or :premises (t9.t15.t0))
(step t9.t15.t2 (cl @p_41) :rule resolution :premises (t9.t15.t1 t9.t15.a0) :args (@p_13 @p_55))
(step t9.t15 (cl @p_64 @p_41) :rule subproof :discharge (t9.t15.a0))
(step t9.t16 (cl @p_61 @p_41) :rule resolution :premises (t9.t14 t9.t15) :args (@p_13 @p_52))
(step t9.t17 (cl @p_61 @p_40) :rule implies_neg2)
(step t9.t18 (cl @p_61 @p_61) :rule resolution :premises (t9.t16 t9.t17) :args (@p_41 @p_52))
(step t9.t19 (cl @p_61) :rule contraction :premises (t9.t18))
(step t9.t20 (cl @p_61) :rule resolution :premises (t9.t12 t9.t13 t9.t19) :args (@p_60 @p_55 @p_61 @p_55))
(step t9.t21 (cl (! (= (! (= (! (= @p_36 @p_36) :named @p_67) @p_52) :named @p_66) @p_67) :named @p_65)) :rule equiv_simplify)
(step t9.t22 (cl (! (= @p_67 @p_67) :named @p_68)) :rule refl)
(step t9.t23 (cl @p_67) :rule refl)
(step t9.t24 (cl @p_67) :rule refl)
(step t9.t25 (cl @p_68) :rule cong :premises (t9.t23 t9.t24))
(step t9.t26 (cl @p_66) :rule hole)
(step t9.t27 (cl (! (not @p_66) :named @p_69) @p_67) :rule equiv1 :premises (t9.t21))
(step t9.t28 (cl @p_66) :rule trans :premises (t9.t22 t9.t25 t9.t26))
(step t9.t29 (cl @p_67) :rule resolution :premises (t9.t27 t9.t28) :args (@p_66 @p_55))
(step t9.t30 (cl (! (= @p_33 @p_33) :named @p_70)) :rule refl)
(step t9.t31 (cl (! (= @p_35 @p_35) :named @p_71)) :rule cong :premises (t9.t30 t9.t29))
(step t9.t32 (cl (! (not (! (= (! (=> @p_13 @p_35) :named @p_74) @p_74) :named @p_73)) :named @p_72) (! (not @p_74) :named @p_75) @p_74) :rule equiv_pos2)
(step t9.t33 (cl @p_73) :rule cong :premises (t9.t9 t9.t31))
(step t9.t34 (cl @p_74 @p_13) :rule implies_neg1)
(anchor :step t9.t35)
(assume t9.t35.a0 @p_13)
(step t9.t35.t0 (cl (! (or @p_64 @p_35) :named @p_76)) :rule forall_inst :args (@p_18 @p_28))
(step t9.t35.t1 (cl @p_64 @p_35) :rule or :premises (t9.t35.t0))
(step t9.t35.t2 (cl @p_35) :rule resolution :premises (t9.t35.t1 t9.t35.a0) :args (@p_13 @p_55))
(step t9.t35 (cl @p_64 @p_35) :rule subproof :discharge (t9.t35.a0))
(step t9.t36 (cl @p_74 @p_35) :rule resolution :premises (t9.t34 t9.t35) :args (@p_13 @p_52))
(step t9.t37 (cl @p_74 @p_34) :rule implies_neg2)
(step t9.t38 (cl @p_74 @p_74) :rule resolution :premises (t9.t36 t9.t37) :args (@p_35 @p_52))
(step t9.t39 (cl @p_74) :rule contraction :premises (t9.t38))
(step t9.t40 (cl @p_74) :rule resolution :premises (t9.t32 t9.t33 t9.t39) :args (@p_73 @p_55 @p_74 @p_55))
(step t9.t41 (cl @p_48 @p_24 @p_44 @p_40 @p_26 @p_38 @p_34 @p_31 @p_25) :rule and_neg)
(step t9.t42 (cl @p_64 @p_41) :rule implies :premises (t9.t20))
(step t9.t43 (cl @p_64 @p_35) :rule implies :premises (t9.t40))
(step t9.t44 (cl @p_48 @p_64) :rule resolution :premises (t9.t41 t9.a0 t9.a7 t9.t42 t9.a2 t9.a5 t9.t43 t9.a3 t9.a1) :args (@p_1 @p_55 @p_45 @p_55 @p_41 @p_55 @p_27 @p_55 @p_39 @p_55 @p_35 @p_55 @p_32 @p_55 @p_14 @p_55))
(step t9.t45 (cl @p_48) :rule resolution :premises (t9.t44 a9) :args (@p_13 @p_55))
(step t9 (cl @p_24 @p_25 @p_26 @p_31 @p_34 @p_38 @p_40 @p_44 @p_48) :rule subproof :discharge (t9.a0 t9.a1 t9.a2 t9.a3 t9.a4 t9.a5 t9.a6 t9.a7))
(step t10 (cl (! (not @p_47) :named @p_77) @p_1) :rule and_pos :args (0))
(step t11 (cl @p_77 @p_14) :rule and_pos :args (1))
(step t12 (cl @p_77 @p_27) :rule and_pos :args (2))
(step t13 (cl @p_77 @p_32) :rule and_pos :args (3))
(step t14 (cl @p_77 @p_35) :rule and_pos :args (4))
(step t15 (cl @p_77 @p_39) :rule and_pos :args (5))
(step t16 (cl @p_77 @p_41) :rule and_pos :args (6))
(step t17 (cl @p_77 @p_45) :rule and_pos :args (7))
(step t18 (cl @p_48 @p_77 @p_77 @p_77 @p_77 @p_77 @p_77 @p_77 @p_77) :rule resolution :premises (t9 t10 t11 t12 t13 t14 t15 t16 t17) :args (@p_1 @p_55 @p_14 @p_55 @p_27 @p_55 @p_32 @p_55 @p_35 @p_55 @p_39 @p_55 @p_41 @p_55 @p_45 @p_55))
(step t19 (cl @p_77 @p_77 @p_77 @p_77 @p_77 @p_77 @p_77 @p_77 @p_48) :rule reordering :premises (t18))
(step t20 (cl @p_77 @p_48) :rule contraction :premises (t19))
(step t21 (cl @p_46 @p_48) :rule resolution :premises (t8 t20) :args (@p_47 @p_52))
(step t22 (cl @p_46 (! (not @p_48) :named @p_78)) :rule implies_neg2)
(step t23 (cl @p_46 @p_46) :rule resolution :premises (t21 t22) :args (@p_48 @p_52))
(step t24 (cl @p_46) :rule contraction :premises (t23))
(anchor :step t25)
(assume t25.a0 @p_1)
(assume t25.a1 @p_45)
(assume t25.a2 @p_41)
(assume t25.a3 @p_27)
(assume t25.a4 @p_39)
(assume t25.a5 @p_35)
(assume t25.a6 @p_32)
(assume t25.a7 @p_14)
(step t25.t0 (cl (! (= (! (= @p_15 @p_55) :named @p_80) @p_14) :named @p_79)) :rule equiv_simplify)
(step t25.t1 (cl @p_80 @p_25) :rule equiv2 :premises (t25.t0))
(step t25.t2 (cl (! (not @p_25) :named @p_81) @p_15) :rule not_not)
(step t25.t3 (cl @p_80 @p_15) :rule resolution :premises (t25.t1 t25.t2) :args (@p_25 @p_52))
(step t25.t4 (cl @p_80) :rule resolution :premises (t25.t3 t25.a7) :args (@p_15 @p_52))
(step t25.t5 (cl @p_65) :rule equiv_simplify)
(step t25.t6 (cl @p_68) :rule refl)
(step t25.t7 (cl @p_67) :rule refl)
(step t25.t8 (cl @p_67) :rule refl)
(step t25.t9 (cl @p_68) :rule cong :premises (t25.t7 t25.t8))
(step t25.t10 (cl @p_66) :rule hole)
(step t25.t11 (cl @p_69 @p_67) :rule equiv1 :premises (t25.t5))
(step t25.t12 (cl @p_66) :rule trans :premises (t25.t6 t25.t9 t25.t10))
(step t25.t13 (cl @p_67) :rule resolution :premises (t25.t11 t25.t12) :args (@p_66 @p_55))
(step t25.t14 (cl @p_56) :rule refl)
(step t25.t15 (cl @p_70) :rule refl)
(step t25.t16 (cl @p_71) :rule cong :premises (t25.t15 t25.t13))
(step t25.t17 (cl @p_72 @p_75 @p_74) :rule equiv_pos2)
(step t25.t18 (cl @p_73) :rule cong :premises (t25.t14 t25.t16))
(step t25.t19 (cl @p_74 @p_13) :rule implies_neg1)
(anchor :step t25.t20)
(assume t25.t20.a0 @p_13)
(step t25.t20.t0 (cl @p_76) :rule forall_inst :args (@p_18 @p_28))
(step t25.t20.t1 (cl @p_64 @p_35) :rule or :premises (t25.t20.t0))
(step t25.t20.t2 (cl @p_35) :rule resolution :premises (t25.t20.t1 t25.t20.a0) :args (@p_13 @p_55))
(step t25.t20 (cl @p_64 @p_35) :rule subproof :discharge (t25.t20.a0))
(step t25.t21 (cl @p_74 @p_35) :rule resolution :premises (t25.t19 t25.t20) :args (@p_13 @p_52))
(step t25.t22 (cl @p_74 @p_34) :rule implies_neg2)
(step t25.t23 (cl @p_74 @p_74) :rule resolution :premises (t25.t21 t25.t22) :args (@p_35 @p_52))
(step t25.t24 (cl @p_74) :rule contraction :premises (t25.t23))
(step t25.t25 (cl @p_74) :rule resolution :premises (t25.t17 t25.t18 t25.t24) :args (@p_73 @p_55 @p_74 @p_55))
(step t25.t26 (cl @p_49) :rule equiv_simplify)
(step t25.t27 (cl @p_53) :rule refl)
(step t25.t28 (cl @p_51) :rule refl)
(step t25.t29 (cl @p_51) :rule refl)
(step t25.t30 (cl @p_53) :rule cong :premises (t25.t28 t25.t29))
(step t25.t31 (cl @p_50) :rule hole)
(step t25.t32 (cl @p_54 @p_51) :rule equiv1 :premises (t25.t26))
(step t25.t33 (cl @p_50) :rule trans :premises (t25.t27 t25.t30 t25.t31))
(step t25.t34 (cl @p_51) :rule resolution :premises (t25.t32 t25.t33) :args (@p_50 @p_55))
(step t25.t35 (cl @p_57) :rule refl)
(step t25.t36 (cl @p_58) :rule cong :premises (t25.t35 t25.t34))
(step t25.t37 (cl @p_59 @p_62 @p_61) :rule equiv_pos2)
(step t25.t38 (cl @p_60) :rule cong :premises (t25.t14 t25.t36))
(step t25.t39 (cl @p_61 @p_13) :rule implies_neg1)
(anchor :step t25.t40)
(assume t25.t40.a0 @p_13)
(step t25.t40.t0 (cl @p_63) :rule forall_inst :args (@p_2 @p_30))
(step t25.t40.t1 (cl @p_64 @p_41) :rule or :premises (t25.t40.t0))
(step t25.t40.t2 (cl @p_41) :rule resolution :premises (t25.t40.t1 t25.t40.a0) :args (@p_13 @p_55))
(step t25.t40 (cl @p_64 @p_41) :rule subproof :discharge (t25.t40.a0))
(step t25.t41 (cl @p_61 @p_41) :rule resolution :premises (t25.t39 t25.t40) :args (@p_13 @p_52))
(step t25.t42 (cl @p_61 @p_40) :rule implies_neg2)
(step t25.t43 (cl @p_61 @p_61) :rule resolution :premises (t25.t41 t25.t42) :args (@p_41 @p_52))
(step t25.t44 (cl @p_61) :rule contraction :premises (t25.t43))
(step t25.t45 (cl @p_61) :rule resolution :premises (t25.t37 t25.t38 t25.t44) :args (@p_60 @p_55 @p_61 @p_55))
(step t25.t46 (cl @p_64 @p_41) :rule implies :premises (t25.t45))
(step t25.t47 (cl @p_41) :rule resolution :premises (t25.t46 a9) :args (@p_13 @p_55))
(step t25.t48 (cl @p_64 @p_35) :rule implies :premises (t25.t25))
(step t25.t49 (cl @p_35) :rule resolution :premises (t25.t48 a9) :args (@p_13 @p_55))
(step t25.t50 (cl (! (= (! (= @p_1 @p_52) :named @p_83) @p_1) :named @p_82)) :rule equiv_simplify)
(step t25.t51 (cl (! (= @p_55 @p_15) :named @p_84)) :rule symm :premises (t25.t4))
(step t25.t52 (cl (! (= @p_33 @p_16) :named @p_85)) :rule symm :premises (t25.a6))
(step t25.t53 (cl @p_32) :rule symm :premises (t25.t52))
(step t25.t54 (cl (! (= @p_36 @p_28) :named @p_86)) :rule symm :premises (t25.a4))
(step t25.t55 (cl (! (= @p_29 @p_28) :named @p_87)) :rule symm :premises (t25.a3))
(step t25.t56 (cl @p_27) :rule symm :premises (t25.t55))
(step t25.t57 (cl (! (= @p_42 @p_2) :named @p_88)) :rule symm :premises (t25.a1))
(step t25.t58 (cl (= @p_16 @p_2)) :rule trans :premises (t25.t53 t25.t49 t25.t54 t25.t56 t25.t47 t25.t57))
(step t25.t59 (cl (! (= @p_3 @p_3) :named @p_89)) :rule refl)
(step t25.t60 (cl (= @p_15 @p_1)) :rule cong :premises (t25.t58 t25.t59))
(step t25.t61 (cl @p_83 @p_24) :rule equiv2 :premises (t25.t50))
(step t25.t62 (cl @p_83) :rule resolution :premises (t25.t61 t25.a0) :args (@p_1 @p_55))
(step t25.t63 (cl (! (not (! (= (! (= @p_55 @p_52) :named @p_92) @p_55) :named @p_91)) :named @p_90) (! (not @p_92) :named @p_93) @p_55) :rule equiv_pos2)
(step t25.t64 (cl @p_91) :rule hole)
(step t25.t65 (cl @p_92) :rule trans :premises (t25.t51 t25.t60 t25.t62))
(step t25.t66 (cl @p_55) :rule resolution :premises (t25.t63 t25.t64 t25.t65) :args (@p_91 @p_55 @p_92 @p_55))
(step t25 (cl @p_24 @p_44 @p_40 @p_26 @p_38 @p_34 @p_31 @p_25 @p_55) :rule subproof :discharge (t25.a0 t25.a1 t25.a2 t25.a3 t25.a4 t25.a5 t25.a6 t25.a7))
(step t26 (cl @p_78 @p_1) :rule and_pos :args (0))
(step t27 (cl @p_78 @p_45) :rule and_pos :args (1))
(step t28 (cl @p_78 @p_41) :rule and_pos :args (2))
(step t29 (cl @p_78 @p_27) :rule and_pos :args (3))
(step t30 (cl @p_78 @p_39) :rule and_pos :args (4))
(step t31 (cl @p_78 @p_35) :rule and_pos :args (5))
(step t32 (cl @p_78 @p_32) :rule and_pos :args (6))
(step t33 (cl @p_78 @p_14) :rule and_pos :args (7))
(step t34 (cl @p_55 @p_78 @p_78 @p_78 @p_78 @p_78 @p_78 @p_78 @p_78) :rule resolution :premises (t25 t26 t27 t28 t29 t30 t31 t32 t33) :args (@p_1 @p_55 @p_45 @p_55 @p_41 @p_55 @p_27 @p_55 @p_39 @p_55 @p_35 @p_55 @p_32 @p_55 @p_14 @p_55))
(step t35 (cl @p_78 @p_78 @p_78 @p_78 @p_78 @p_78 @p_78 @p_78 @p_55) :rule reordering :premises (t34))
(step t36 (cl (= (! (=> @p_48 @p_55) :named @p_94) @p_78)) :rule implies_simplify)
(step t37 (cl @p_77 @p_48) :rule implies :premises (t24))
(step t38 (cl @p_94 @p_48) :rule implies_neg1)
(step t39 (cl @p_78 @p_55) :rule contraction :premises (t35))
(step t40 (cl @p_94 @p_55) :rule resolution :premises (t38 t39) :args (@p_48 @p_52))
(step t41 (cl @p_94 (! (not @p_55) :named @p_95)) :rule implies_neg2)
(step t42 (cl @p_94 @p_94) :rule resolution :premises (t40 t41) :args (@p_55 @p_52))
(step t43 (cl @p_94) :rule contraction :premises (t42))
(step t44 (cl (not @p_94) @p_78) :rule equiv1 :premises (t36))
(step t45 (cl @p_78) :rule resolution :premises (t43 t44) :args (@p_94 @p_52))
(step t46 (cl @p_77) :rule resolution :premises (t37 t45) :args (@p_48 @p_52))
(step t47 (cl (not (! (= (! (or @p_24 @p_25 @p_26 @p_31 @p_34 @p_38 @p_40 @p_44) :named @p_97) (! (or @p_24 @p_15 @p_26 @p_31 @p_34 @p_38 @p_40 @p_44) :named @p_98)) :named @p_96)) (not @p_97) @p_98) :rule equiv_pos2)
(step t48 (cl @p_96) :rule cong :premises (t0 t1 t2 t3 t4 t5 t6 t7))
(step t49 (cl @p_24 @p_25 @p_26 @p_31 @p_34 @p_38 @p_40 @p_44) :rule not_and :premises (t46))
(step t50 (cl @p_97 (! (not @p_24) :named @p_99)) :rule or_neg :args (0))
(step t51 (cl @p_97 @p_81) :rule or_neg :args (1))
(step t52 (cl @p_97 (! (not @p_26) :named @p_100)) :rule or_neg :args (2))
(step t53 (cl @p_97 (! (not @p_31) :named @p_101)) :rule or_neg :args (3))
(step t54 (cl @p_97 (! (not @p_34) :named @p_102)) :rule or_neg :args (4))
(step t55 (cl @p_97 (! (not @p_38) :named @p_103)) :rule or_neg :args (5))
(step t56 (cl @p_97 (! (not @p_40) :named @p_104)) :rule or_neg :args (6))
(step t57 (cl @p_97 (not @p_44)) :rule or_neg :args (7))
(step t58 (cl @p_97 @p_97 @p_97 @p_97 @p_97 @p_97 @p_97 @p_97) :rule resolution :premises (t49 t50 t51 t52 t53 t54 t55 t56 t57) :args (@p_24 @p_52 @p_25 @p_52 @p_26 @p_52 @p_31 @p_52 @p_34 @p_52 @p_38 @p_52 @p_40 @p_52 @p_44 @p_52))
(step t59 (cl @p_97) :rule contraction :premises (t58))
(step t60 (cl @p_98) :rule resolution :premises (t47 t48 t59) :args (@p_96 @p_55 @p_97 @p_55))
(step t61 (cl @p_24 @p_15 @p_26 @p_31 @p_34 @p_38 @p_40 @p_44) :rule or :premises (t60))
(step t62 (cl (= @p_43 @p_43)) :rule refl)
(step t63 (cl (= (! (= @p_42 @p_30) :named @p_105) (! (= @p_30 @p_42) :named @p_106))) :rule hole)
(step t64 (cl (= @p_88 @p_45)) :rule hole)
(step t65 (cl @p_49) :rule equiv_simplify)
(step t66 (cl @p_53) :rule refl)
(step t67 (cl @p_51) :rule refl)
(step t68 (cl @p_51) :rule refl)
(step t69 (cl @p_53) :rule cong :premises (t67 t68))
(step t70 (cl @p_50) :rule hole)
(step t71 (cl @p_54 @p_51) :rule equiv1 :premises (t65))
(step t72 (cl @p_50) :rule trans :premises (t66 t69 t70))
(step t73 (cl @p_51) :rule resolution :premises (t71 t72) :args (@p_50 @p_55))
(step t74 (cl (= @p_30 @p_30)) :rule refl)
(step t75 (cl (= @p_105 @p_105)) :rule cong :premises (t73 t74))
(step t76 (cl (= @p_2 @p_2)) :rule refl)
(step t77 (cl (= @p_88 @p_88)) :rule cong :premises (t73 t76))
(step t78 (cl (not (! (= (! (ite @p_43 @p_105 @p_88) :named @p_108) (! (ite @p_43 @p_106 @p_45) :named @p_109)) :named @p_107)) (! (not @p_108) :named @p_110) @p_109) :rule equiv_pos2)
(step t79 (cl @p_107) :rule cong :premises (t62 t63 t64))
(step t80 (cl (not (! (= @p_108 @p_108) :named @p_111)) @p_110 @p_108) :rule equiv_pos2)
(step t81 (cl @p_111) :rule cong :premises (t62 t75 t77))
(step t82 (cl @p_108) :rule hole)
(step t83 (cl @p_108) :rule resolution :premises (t80 t81 t82) :args (@p_111 @p_55 @p_108 @p_55))
(step t84 (cl @p_109) :rule resolution :premises (t78 t79 t83) :args (@p_107 @p_55 @p_108 @p_55))
(step t85 (cl (! (not @p_43) :named @p_112) @p_106) :rule ite2 :premises (t84))
(step t86 (cl (= (! (not (! (less$ @p_22 @p_3) :named @p_114)) :named @p_113) @p_113)) :rule refl)
(step t87 (cl (= (! (not (! (= @p_22 @p_30) :named @p_116)) :named @p_115) @p_115)) :rule refl)
(step t88 (cl (= (! (not @p_106) :named @p_117) @p_117)) :rule refl)
(step t89 (cl (! (=> (! (and @p_14 @p_114 @p_27 @p_32 @p_116 @p_35 @p_39 @p_41 @p_106) :named @p_119) (! (and @p_114 @p_116 @p_106 @p_41 @p_27 @p_39 @p_35 @p_32 @p_14) :named @p_120)) :named @p_118) @p_119) :rule implies_neg1)
(anchor :step t90)
(assume t90.a0 @p_14)
(assume t90.a1 @p_114)
(assume t90.a2 @p_27)
(assume t90.a3 @p_32)
(assume t90.a4 @p_116)
(assume t90.a5 @p_35)
(assume t90.a6 @p_39)
(assume t90.a7 @p_41)
(assume t90.a8 @p_106)
(step t90.t0 (cl (! (not (! (or @p_7 @p_114) :named @p_122)) :named @p_121) @p_7 @p_114) :rule or_pos)
(step t90.t1 (cl (! (or (! (not (! (forall ((?v0 S_v_tm$)) (or (is_Hd$ ?v0) (less$ (size$ (arg$ ?v0)) (size$ ?v0)))) :named @p_125)) :named @p_124) @p_122) :named @p_123)) :rule forall_inst :args (ua$))
(step t90.t2 (cl (! (or (! (not (! (forall ((?v0 Nat$)) (= ?v0 (max$ (insert$ ?v0 bot$)))) :named @p_128)) :named @p_127) @p_116) :named @p_126)) :rule forall_inst :args (@p_22))
(step t90.t3 (cl @p_56) :rule refl)
(step t90.t4 (cl @p_57) :rule refl)
(step t90.t5 (cl @p_58) :rule cong :premises (t90.t4 t73))
(step t90.t6 (cl @p_59 @p_62 @p_61) :rule equiv_pos2)
(step t90.t7 (cl @p_60) :rule cong :premises (t90.t3 t90.t5))
(step t90.t8 (cl @p_61 @p_13) :rule implies_neg1)
(anchor :step t90.t9)
(assume t90.t9.a0 @p_13)
(step t90.t9.t0 (cl @p_63) :rule forall_inst :args (@p_2 @p_30))
(step t90.t9.t1 (cl @p_64 @p_41) :rule or :premises (t90.t9.t0))
(step t90.t9.t2 (cl @p_41) :rule resolution :premises (t90.t9.t1 t90.t9.a0) :args (@p_13 @p_55))
(step t90.t9 (cl @p_64 @p_41) :rule subproof :discharge (t90.t9.a0))
(step t90.t10 (cl @p_61 @p_41) :rule resolution :premises (t90.t8 t90.t9) :args (@p_13 @p_52))
(step t90.t11 (cl @p_61 @p_40) :rule implies_neg2)
(step t90.t12 (cl @p_61 @p_61) :rule resolution :premises (t90.t10 t90.t11) :args (@p_41 @p_52))
(step t90.t13 (cl @p_61) :rule contraction :premises (t90.t12))
(step t90.t14 (cl @p_61) :rule resolution :premises (t90.t6 t90.t7 t90.t13) :args (@p_60 @p_55 @p_61 @p_55))
(step t90.t15 (cl @p_65) :rule equiv_simplify)
(step t90.t16 (cl @p_68) :rule refl)
(step t90.t17 (cl @p_67) :rule refl)
(step t90.t18 (cl @p_67) :rule refl)
(step t90.t19 (cl @p_68) :rule cong :premises (t90.t17 t90.t18))
(step t90.t20 (cl @p_66) :rule hole)
(step t90.t21 (cl @p_69 @p_67) :rule equiv1 :premises (t90.t15))
(step t90.t22 (cl @p_66) :rule trans :premises (t90.t16 t90.t19 t90.t20))
(step t90.t23 (cl @p_67) :rule resolution :premises (t90.t21 t90.t22) :args (@p_66 @p_55))
(step t90.t24 (cl @p_70) :rule refl)
(step t90.t25 (cl @p_71) :rule cong :premises (t90.t24 t90.t23))
(step t90.t26 (cl @p_72 @p_75 @p_74) :rule equiv_pos2)
(step t90.t27 (cl @p_73) :rule cong :premises (t90.t3 t90.t25))
(step t90.t28 (cl @p_74 @p_13) :rule implies_neg1)
(anchor :step t90.t29)
(assume t90.t29.a0 @p_13)
(step t90.t29.t0 (cl @p_76) :rule forall_inst :args (@p_18 @p_28))
(step t90.t29.t1 (cl @p_64 @p_35) :rule or :premises (t90.t29.t0))
(step t90.t29.t2 (cl @p_35) :rule resolution :premises (t90.t29.t1 t90.t29.a0) :args (@p_13 @p_55))
(step t90.t29 (cl @p_64 @p_35) :rule subproof :discharge (t90.t29.a0))
(step t90.t30 (cl @p_74 @p_35) :rule resolution :premises (t90.t28 t90.t29) :args (@p_13 @p_52))
(step t90.t31 (cl @p_74 @p_34) :rule implies_neg2)
(step t90.t32 (cl @p_74 @p_74) :rule resolution :premises (t90.t30 t90.t31) :args (@p_35 @p_52))
(step t90.t33 (cl @p_74) :rule contraction :premises (t90.t32))
(step t90.t34 (cl @p_74) :rule resolution :premises (t90.t26 t90.t27 t90.t33) :args (@p_73 @p_55 @p_74 @p_55))
(step t90.t35 (cl @p_120 @p_113 @p_115 @p_117 @p_40 @p_26 @p_38 @p_34 @p_31 @p_25) :rule and_neg)
(step t90.t36 (cl @p_7 @p_114 @p_121) :rule reordering :premises (t90.t0))
(step t90.t37 (cl @p_124 @p_122) :rule or :premises (t90.t1))
(step t90.t38 (cl (! (not (! (= @p_0 @p_125) :named @p_130)) :named @p_129) (! (not @p_0) :named @p_131) @p_125) :rule equiv_pos2)
(step t90.t39 (cl @p_130) :rule hole)
(step t90.t40 (cl @p_125) :rule resolution :premises (t90.t38 t90.t39 a0) :args (@p_130 @p_55 @p_0 @p_55))
(step t90.t41 (cl @p_122) :rule resolution :premises (t90.t37 t90.t40) :args (@p_125 @p_55))
(step t90.t42 (cl @p_114) :rule resolution :premises (t90.t36 a3 t90.t41) :args (@p_7 @p_52 @p_122 @p_55))
(step t90.t43 (cl @p_127 @p_116) :rule or :premises (t90.t2))
(step t90.t44 (cl (! (not (! (= @p_9 @p_128) :named @p_133)) :named @p_132) (! (not @p_9) :named @p_134) @p_128) :rule equiv_pos2)
(anchor :step t90.t45 :args ((?v0 Nat$) (:= (?v0 Nat$) ?v0)))
(step t90.t45.t0 (cl (= (= (max$ (insert$ ?v0 bot$)) ?v0) (= ?v0 (max$ (insert$ ?v0 bot$))))) :rule hole)
(step t90.t45 (cl @p_133) :rule bind)
(step t90.t46 (cl @p_128) :rule resolution :premises (t90.t44 t90.t45 a5) :args (@p_133 @p_55 @p_9 @p_55))
(step t90.t47 (cl @p_116) :rule resolution :premises (t90.t43 t90.t46) :args (@p_128 @p_55))
(step t90.t48 (cl @p_64 @p_41) :rule implies :premises (t90.t14))
(step t90.t49 (cl @p_64 @p_35) :rule implies :premises (t90.t34))
(step t90.t50 (cl @p_120 @p_64) :rule resolution :premises (t90.t35 t90.t42 t90.t47 t90.a8 t90.t48 t90.a2 t90.a6 t90.t49 t90.a3 t90.a0) :args (@p_114 @p_55 @p_116 @p_55 @p_106 @p_55 @p_41 @p_55 @p_27 @p_55 @p_39 @p_55 @p_35 @p_55 @p_32 @p_55 @p_14 @p_55))
(step t90.t51 (cl @p_120) :rule resolution :premises (t90.t50 a9) :args (@p_13 @p_55))
(step t90 (cl @p_25 @p_113 @p_26 @p_31 @p_115 @p_34 @p_38 @p_40 @p_117 @p_120) :rule subproof :discharge (t90.a0 t90.a1 t90.a2 t90.a3 t90.a4 t90.a5 t90.a6 t90.a7 t90.a8))
(step t91 (cl (! (not @p_119) :named @p_135) @p_14) :rule and_pos :args (0))
(step t92 (cl @p_135 @p_114) :rule and_pos :args (1))
(step t93 (cl @p_135 @p_27) :rule and_pos :args (2))
(step t94 (cl @p_135 @p_32) :rule and_pos :args (3))
(step t95 (cl @p_135 @p_116) :rule and_pos :args (4))
(step t96 (cl @p_135 @p_35) :rule and_pos :args (5))
(step t97 (cl @p_135 @p_39) :rule and_pos :args (6))
(step t98 (cl @p_135 @p_41) :rule and_pos :args (7))
(step t99 (cl @p_135 @p_106) :rule and_pos :args (8))
(step t100 (cl @p_120 @p_135 @p_135 @p_135 @p_135 @p_135 @p_135 @p_135 @p_135 @p_135) :rule resolution :premises (t90 t91 t92 t93 t94 t95 t96 t97 t98 t99) :args (@p_14 @p_55 @p_114 @p_55 @p_27 @p_55 @p_32 @p_55 @p_116 @p_55 @p_35 @p_55 @p_39 @p_55 @p_41 @p_55 @p_106 @p_55))
(step t101 (cl @p_135 @p_135 @p_135 @p_135 @p_135 @p_135 @p_135 @p_135 @p_135 @p_120) :rule reordering :premises (t100))
(step t102 (cl @p_135 @p_120) :rule contraction :premises (t101))
(step t103 (cl @p_118 @p_120) :rule resolution :premises (t89 t102) :args (@p_119 @p_52))
(step t104 (cl @p_118 (! (not @p_120) :named @p_136)) :rule implies_neg2)
(step t105 (cl @p_118 @p_118) :rule resolution :premises (t103 t104) :args (@p_120 @p_52))
(step t106 (cl @p_118) :rule contraction :premises (t105))
(anchor :step t107)
(assume t107.a0 @p_114)
(assume t107.a1 @p_116)
(assume t107.a2 @p_106)
(assume t107.a3 @p_41)
(assume t107.a4 @p_27)
(assume t107.a5 @p_39)
(assume t107.a6 @p_35)
(assume t107.a7 @p_32)
(assume t107.a8 @p_14)
(step t107.t0 (cl @p_79) :rule equiv_simplify)
(step t107.t1 (cl @p_80 @p_25) :rule equiv2 :premises (t107.t0))
(step t107.t2 (cl @p_81 @p_15) :rule not_not)
(step t107.t3 (cl @p_80 @p_15) :rule resolution :premises (t107.t1 t107.t2) :args (@p_25 @p_52))
(step t107.t4 (cl @p_80) :rule resolution :premises (t107.t3 t107.a8) :args (@p_15 @p_52))
(step t107.t5 (cl @p_65) :rule equiv_simplify)
(step t107.t6 (cl @p_68) :rule refl)
(step t107.t7 (cl @p_67) :rule refl)
(step t107.t8 (cl @p_67) :rule refl)
(step t107.t9 (cl @p_68) :rule cong :premises (t107.t7 t107.t8))
(step t107.t10 (cl @p_66) :rule hole)
(step t107.t11 (cl @p_69 @p_67) :rule equiv1 :premises (t107.t5))
(step t107.t12 (cl @p_66) :rule trans :premises (t107.t6 t107.t9 t107.t10))
(step t107.t13 (cl @p_67) :rule resolution :premises (t107.t11 t107.t12) :args (@p_66 @p_55))
(step t107.t14 (cl @p_56) :rule refl)
(step t107.t15 (cl @p_70) :rule refl)
(step t107.t16 (cl @p_71) :rule cong :premises (t107.t15 t107.t13))
(step t107.t17 (cl @p_72 @p_75 @p_74) :rule equiv_pos2)
(step t107.t18 (cl @p_73) :rule cong :premises (t107.t14 t107.t16))
(step t107.t19 (cl @p_74 @p_13) :rule implies_neg1)
(anchor :step t107.t20)
(assume t107.t20.a0 @p_13)
(step t107.t20.t0 (cl @p_76) :rule forall_inst :args (@p_18 @p_28))
(step t107.t20.t1 (cl @p_64 @p_35) :rule or :premises (t107.t20.t0))
(step t107.t20.t2 (cl @p_35) :rule resolution :premises (t107.t20.t1 t107.t20.a0) :args (@p_13 @p_55))
(step t107.t20 (cl @p_64 @p_35) :rule subproof :discharge (t107.t20.a0))
(step t107.t21 (cl @p_74 @p_35) :rule resolution :premises (t107.t19 t107.t20) :args (@p_13 @p_52))
(step t107.t22 (cl @p_74 @p_34) :rule implies_neg2)
(step t107.t23 (cl @p_74 @p_74) :rule resolution :premises (t107.t21 t107.t22) :args (@p_35 @p_52))
(step t107.t24 (cl @p_74) :rule contraction :premises (t107.t23))
(step t107.t25 (cl @p_74) :rule resolution :premises (t107.t17 t107.t18 t107.t24) :args (@p_73 @p_55 @p_74 @p_55))
(step t107.t26 (cl @p_57) :rule refl)
(step t107.t27 (cl @p_58) :rule cong :premises (t107.t26 t73))
(step t107.t28 (cl @p_59 @p_62 @p_61) :rule equiv_pos2)
(step t107.t29 (cl @p_60) :rule cong :premises (t107.t14 t107.t27))
(step t107.t30 (cl @p_61 @p_13) :rule implies_neg1)
(anchor :step t107.t31)
(assume t107.t31.a0 @p_13)
(step t107.t31.t0 (cl @p_63) :rule forall_inst :args (@p_2 @p_30))
(step t107.t31.t1 (cl @p_64 @p_41) :rule or :premises (t107.t31.t0))
(step t107.t31.t2 (cl @p_41) :rule resolution :premises (t107.t31.t1 t107.t31.a0) :args (@p_13 @p_55))
(step t107.t31 (cl @p_64 @p_41) :rule subproof :discharge (t107.t31.a0))
(step t107.t32 (cl @p_61 @p_41) :rule resolution :premises (t107.t30 t107.t31) :args (@p_13 @p_52))
(step t107.t33 (cl @p_61 @p_40) :rule implies_neg2)
(step t107.t34 (cl @p_61 @p_61) :rule resolution :premises (t107.t32 t107.t33) :args (@p_41 @p_52))
(step t107.t35 (cl @p_61) :rule contraction :premises (t107.t34))
(step t107.t36 (cl @p_61) :rule resolution :premises (t107.t28 t107.t29 t107.t35) :args (@p_60 @p_55 @p_61 @p_55))
(step t107.t37 (cl @p_126) :rule forall_inst :args (@p_22))
(step t107.t38 (cl @p_127 @p_116) :rule or :premises (t107.t37))
(step t107.t39 (cl @p_132 @p_134 @p_128) :rule equiv_pos2)
(anchor :step t107.t40 :args ((?v0 Nat$) (:= (?v0 Nat$) ?v0)))
(step t107.t40.t0 (cl (= (= (max$ (insert$ ?v0 bot$)) ?v0) (= ?v0 (max$ (insert$ ?v0 bot$))))) :rule hole)
(step t107.t40 (cl @p_133) :rule bind)
(step t107.t41 (cl @p_128) :rule resolution :premises (t107.t39 t107.t40 a5) :args (@p_133 @p_55 @p_9 @p_55))
(step t107.t42 (cl @p_116) :rule resolution :premises (t107.t38 t107.t41) :args (@p_128 @p_55))
(step t107.t43 (cl @p_64 @p_41) :rule implies :premises (t107.t36))
(step t107.t44 (cl @p_41) :rule resolution :premises (t107.t43 a9) :args (@p_13 @p_55))
(step t107.t45 (cl @p_64 @p_35) :rule implies :premises (t107.t25))
(step t107.t46 (cl @p_35) :rule resolution :premises (t107.t45 a9) :args (@p_13 @p_55))
(step t107.t47 (cl (= (! (= @p_114 @p_52) :named @p_137) @p_114)) :rule equiv_simplify)
(step t107.t48 (cl @p_121 @p_7 @p_114) :rule or_pos)
(step t107.t49 (cl @p_123) :rule forall_inst :args (ua$))
(step t107.t50 (cl @p_84) :rule symm :premises (t107.t4))
(step t107.t51 (cl @p_85) :rule symm :premises (t107.a7))
(step t107.t52 (cl @p_32) :rule symm :premises (t107.t51))
(step t107.t53 (cl @p_86) :rule symm :premises (t107.a5))
(step t107.t54 (cl @p_87) :rule symm :premises (t107.a4))
(step t107.t55 (cl @p_27) :rule symm :premises (t107.t54))
(step t107.t56 (cl @p_105) :rule symm :premises (t107.a2))
(step t107.t57 (cl (= @p_30 @p_22)) :rule symm :premises (t107.t42))
(step t107.t58 (cl (= @p_16 @p_22)) :rule trans :premises (t107.t52 t107.t46 t107.t53 t107.t55 t107.t44 t107.t56 t107.t57))
(step t107.t59 (cl @p_89) :rule refl)
(step t107.t60 (cl (= @p_15 @p_114)) :rule cong :premises (t107.t58 t107.t59))
(step t107.t61 (cl @p_137 @p_113) :rule equiv2 :premises (t107.t47))
(step t107.t62 (cl @p_7 @p_114 @p_121) :rule reordering :premises (t107.t48))
(step t107.t63 (cl @p_124 @p_122) :rule or :premises (t107.t49))
(step t107.t64 (cl @p_129 @p_131 @p_125) :rule equiv_pos2)
(step t107.t65 (cl @p_130) :rule hole)
(step t107.t66 (cl @p_125) :rule resolution :premises (t107.t64 t107.t65 a0) :args (@p_130 @p_55 @p_0 @p_55))
(step t107.t67 (cl @p_122) :rule resolution :premises (t107.t63 t107.t66) :args (@p_125 @p_55))
(step t107.t68 (cl @p_114) :rule resolution :premises (t107.t62 a3 t107.t67) :args (@p_7 @p_52 @p_122 @p_55))
(step t107.t69 (cl @p_137) :rule resolution :premises (t107.t61 t107.t68) :args (@p_114 @p_55))
(step t107.t70 (cl @p_90 @p_93 @p_55) :rule equiv_pos2)
(step t107.t71 (cl @p_91) :rule hole)
(step t107.t72 (cl @p_92) :rule trans :premises (t107.t50 t107.t60 t107.t69))
(step t107.t73 (cl @p_55) :rule resolution :premises (t107.t70 t107.t71 t107.t72) :args (@p_91 @p_55 @p_92 @p_55))
(step t107 (cl @p_113 @p_115 @p_117 @p_40 @p_26 @p_38 @p_34 @p_31 @p_25 @p_55) :rule subproof :discharge (t107.a0 t107.a1 t107.a2 t107.a3 t107.a4 t107.a5 t107.a6 t107.a7 t107.a8))
(step t108 (cl @p_136 @p_114) :rule and_pos :args (0))
(step t109 (cl @p_136 @p_116) :rule and_pos :args (1))
(step t110 (cl @p_136 @p_106) :rule and_pos :args (2))
(step t111 (cl @p_136 @p_41) :rule and_pos :args (3))
(step t112 (cl @p_136 @p_27) :rule and_pos :args (4))
(step t113 (cl @p_136 @p_39) :rule and_pos :args (5))
(step t114 (cl @p_136 @p_35) :rule and_pos :args (6))
(step t115 (cl @p_136 @p_32) :rule and_pos :args (7))
(step t116 (cl @p_136 @p_14) :rule and_pos :args (8))
(step t117 (cl @p_55 @p_136 @p_136 @p_136 @p_136 @p_136 @p_136 @p_136 @p_136 @p_136) :rule resolution :premises (t107 t108 t109 t110 t111 t112 t113 t114 t115 t116) :args (@p_114 @p_55 @p_116 @p_55 @p_106 @p_55 @p_41 @p_55 @p_27 @p_55 @p_39 @p_55 @p_35 @p_55 @p_32 @p_55 @p_14 @p_55))
(step t118 (cl @p_136 @p_136 @p_136 @p_136 @p_136 @p_136 @p_136 @p_136 @p_136 @p_55) :rule reordering :premises (t117))
(step t119 (cl (= (! (=> @p_120 @p_55) :named @p_138) @p_136)) :rule implies_simplify)
(step t120 (cl @p_135 @p_120) :rule implies :premises (t106))
(step t121 (cl @p_138 @p_120) :rule implies_neg1)
(step t122 (cl @p_136 @p_55) :rule contraction :premises (t118))
(step t123 (cl @p_138 @p_55) :rule resolution :premises (t121 t122) :args (@p_120 @p_52))
(step t124 (cl @p_138 @p_95) :rule implies_neg2)
(step t125 (cl @p_138 @p_138) :rule resolution :premises (t123 t124) :args (@p_55 @p_52))
(step t126 (cl @p_138) :rule contraction :premises (t125))
(step t127 (cl (not @p_138) @p_136) :rule equiv1 :premises (t119))
(step t128 (cl @p_136) :rule resolution :premises (t126 t127) :args (@p_138 @p_52))
(step t129 (cl @p_135) :rule resolution :premises (t120 t128) :args (@p_120 @p_52))
(step t130 (cl (not (! (= (! (or @p_25 @p_113 @p_26 @p_31 @p_115 @p_34 @p_38 @p_40 @p_117) :named @p_140) (! (or @p_15 @p_113 @p_26 @p_31 @p_115 @p_34 @p_38 @p_40 @p_117) :named @p_141)) :named @p_139)) (not @p_140) @p_141) :rule equiv_pos2)
(step t131 (cl @p_139) :rule cong :premises (t1 t86 t2 t3 t87 t4 t5 t6 t88))
(step t132 (cl @p_25 @p_113 @p_26 @p_31 @p_115 @p_34 @p_38 @p_40 @p_117) :rule not_and :premises (t129))
(step t133 (cl @p_140 @p_81) :rule or_neg :args (0))
(step t134 (cl @p_140 (not @p_113)) :rule or_neg :args (1))
(step t135 (cl @p_140 @p_100) :rule or_neg :args (2))
(step t136 (cl @p_140 @p_101) :rule or_neg :args (3))
(step t137 (cl @p_140 (not @p_115)) :rule or_neg :args (4))
(step t138 (cl @p_140 @p_102) :rule or_neg :args (5))
(step t139 (cl @p_140 @p_103) :rule or_neg :args (6))
(step t140 (cl @p_140 @p_104) :rule or_neg :args (7))
(step t141 (cl @p_140 (not @p_117)) :rule or_neg :args (8))
(step t142 (cl @p_140 @p_140 @p_140 @p_140 @p_140 @p_140 @p_140 @p_140 @p_140) :rule resolution :premises (t132 t133 t134 t135 t136 t137 t138 t139 t140 t141) :args (@p_25 @p_52 @p_113 @p_52 @p_26 @p_52 @p_31 @p_52 @p_115 @p_52 @p_34 @p_52 @p_38 @p_52 @p_40 @p_52 @p_117 @p_52))
(step t143 (cl @p_140) :rule contraction :premises (t142))
(step t144 (cl @p_141) :rule resolution :premises (t130 t131 t143) :args (@p_139 @p_55 @p_140 @p_55))
(step t145 (cl @p_121 @p_7 @p_114) :rule or_pos)
(step t146 (cl @p_123) :rule forall_inst :args (ua$))
(step t147 (cl @p_129 @p_131 @p_125) :rule equiv_pos2)
(step t148 (cl @p_130) :rule hole)
(step t149 (cl @p_125) :rule resolution :premises (t147 t148 a0) :args (@p_130 @p_55 @p_0 @p_55))
(step t150 (cl (! (not (! (or (! (not (! (finite$ @p_21) :named @p_145)) :named @p_144) (! (= bot$ @p_21) :named @p_146) @p_27) :named @p_143)) :named @p_142) @p_144 @p_146 @p_27) :rule or_pos)
(step t151 (cl (! (not (! (or (! (not @p_11) :named @p_149) @p_145) :named @p_148)) :named @p_147) @p_149 @p_145) :rule or_pos)
(step t152 (cl (or (! (not (! (forall ((?v0 Nat_set$) (?v1 Nat$)) (or (not (finite$ ?v0)) (finite$ (insert$ ?v1 ?v0)))) :named @p_151)) :named @p_150) @p_148)) :rule forall_inst :args (bot$ @p_22))
(step t153 (cl (= (! (not @p_146) :named @p_152) @p_152)) :rule refl)
(step t154 (cl (= (! (not (! (= @p_2 (! (max$ (! (insert$ @p_2 bot$) :named @p_156)) :named @p_155)) :named @p_154)) :named @p_153) @p_153)) :rule refl)
(step t155 (cl (! (=> (! (and @p_1 @p_14 @p_146 @p_32 @p_154 @p_35 @p_39) :named @p_158) (! (and @p_14 @p_32 @p_35 @p_39 @p_146 @p_154 @p_1) :named @p_159)) :named @p_157) @p_158) :rule implies_neg1)
(anchor :step t156)
(assume t156.a0 @p_1)
(assume t156.a1 @p_14)
(assume t156.a2 @p_146)
(assume t156.a3 @p_32)
(assume t156.a4 @p_154)
(assume t156.a5 @p_35)
(assume t156.a6 @p_39)
(step t156.t0 (cl @p_65) :rule equiv_simplify)
(step t156.t1 (cl @p_68) :rule refl)
(step t156.t2 (cl @p_67) :rule refl)
(step t156.t3 (cl @p_67) :rule refl)
(step t156.t4 (cl @p_68) :rule cong :premises (t156.t2 t156.t3))
(step t156.t5 (cl @p_66) :rule hole)
(step t156.t6 (cl @p_69 @p_67) :rule equiv1 :premises (t156.t0))
(step t156.t7 (cl @p_66) :rule trans :premises (t156.t1 t156.t4 t156.t5))
(step t156.t8 (cl @p_67) :rule resolution :premises (t156.t6 t156.t7) :args (@p_66 @p_55))
(step t156.t9 (cl @p_56) :rule refl)
(step t156.t10 (cl @p_70) :rule refl)
(step t156.t11 (cl @p_71) :rule cong :premises (t156.t10 t156.t8))
(step t156.t12 (cl @p_72 @p_75 @p_74) :rule equiv_pos2)
(step t156.t13 (cl @p_73) :rule cong :premises (t156.t9 t156.t11))
(step t156.t14 (cl @p_74 @p_13) :rule implies_neg1)
(anchor :step t156.t15)
(assume t156.t15.a0 @p_13)
(step t156.t15.t0 (cl @p_76) :rule forall_inst :args (@p_18 @p_28))
(step t156.t15.t1 (cl @p_64 @p_35) :rule or :premises (t156.t15.t0))
(step t156.t15.t2 (cl @p_35) :rule resolution :premises (t156.t15.t1 t156.t15.a0) :args (@p_13 @p_55))
(step t156.t15 (cl @p_64 @p_35) :rule subproof :discharge (t156.t15.a0))
(step t156.t16 (cl @p_74 @p_35) :rule resolution :premises (t156.t14 t156.t15) :args (@p_13 @p_52))
(step t156.t17 (cl @p_74 @p_34) :rule implies_neg2)
(step t156.t18 (cl @p_74 @p_74) :rule resolution :premises (t156.t16 t156.t17) :args (@p_35 @p_52))
(step t156.t19 (cl @p_74) :rule contraction :premises (t156.t18))
(step t156.t20 (cl @p_74) :rule resolution :premises (t156.t12 t156.t13 t156.t19) :args (@p_73 @p_55 @p_74 @p_55))
(step t156.t21 (cl (! (or @p_127 @p_154) :named @p_160)) :rule forall_inst :args (@p_2))
(step t156.t22 (cl @p_159 @p_25 @p_31 @p_34 @p_38 @p_152 @p_153 @p_24) :rule and_neg)
(step t156.t23 (cl @p_64 @p_35) :rule implies :premises (t156.t20))
(step t156.t24 (cl @p_35) :rule resolution :premises (t156.t23 a9) :args (@p_13 @p_55))
(step t156.t25 (cl @p_127 @p_154) :rule or :premises (t156.t21))
(step t156.t26 (cl @p_132 @p_134 @p_128) :rule equiv_pos2)
(anchor :step t156.t27 :args ((?v0 Nat$) (:= (?v0 Nat$) ?v0)))
(step t156.t27.t0 (cl (= (= (max$ (insert$ ?v0 bot$)) ?v0) (= ?v0 (max$ (insert$ ?v0 bot$))))) :rule hole)
(step t156.t27 (cl @p_133) :rule bind)
(step t156.t28 (cl @p_128) :rule resolution :premises (t156.t26 t156.t27 a5) :args (@p_133 @p_55 @p_9 @p_55))
(step t156.t29 (cl @p_154) :rule resolution :premises (t156.t25 t156.t28) :args (@p_128 @p_55))
(step t156.t30 (cl @p_159) :rule resolution :premises (t156.t22 t156.a1 t156.a3 t156.t24 t156.a6 t156.a2 t156.t29 t156.a0) :args (@p_14 @p_55 @p_32 @p_55 @p_35 @p_55 @p_39 @p_55 @p_146 @p_55 @p_154 @p_55 @p_1 @p_55))
(step t156 (cl @p_24 @p_25 @p_152 @p_31 @p_153 @p_34 @p_38 @p_159) :rule subproof :discharge (t156.a0 t156.a1 t156.a2 t156.a3 t156.a4 t156.a5 t156.a6))
(step t157 (cl (! (not @p_158) :named @p_161) @p_1) :rule and_pos :args (0))
(step t158 (cl @p_161 @p_14) :rule and_pos :args (1))
(step t159 (cl @p_161 @p_146) :rule and_pos :args (2))
(step t160 (cl @p_161 @p_32) :rule and_pos :args (3))
(step t161 (cl @p_161 @p_154) :rule and_pos :args (4))
(step t162 (cl @p_161 @p_35) :rule and_pos :args (5))
(step t163 (cl @p_161 @p_39) :rule and_pos :args (6))
(step t164 (cl @p_159 @p_161 @p_161 @p_161 @p_161 @p_161 @p_161 @p_161) :rule resolution :premises (t156 t157 t158 t159 t160 t161 t162 t163) :args (@p_1 @p_55 @p_14 @p_55 @p_146 @p_55 @p_32 @p_55 @p_154 @p_55 @p_35 @p_55 @p_39 @p_55))
(step t165 (cl @p_161 @p_161 @p_161 @p_161 @p_161 @p_161 @p_161 @p_159) :rule reordering :premises (t164))
(step t166 (cl @p_161 @p_159) :rule contraction :premises (t165))
(step t167 (cl @p_157 @p_159) :rule resolution :premises (t155 t166) :args (@p_158 @p_52))
(step t168 (cl @p_157 (! (not @p_159) :named @p_162)) :rule implies_neg2)
(step t169 (cl @p_157 @p_157) :rule resolution :premises (t167 t168) :args (@p_159 @p_52))
(step t170 (cl @p_157) :rule contraction :premises (t169))
(anchor :step t171)
(assume t171.a0 @p_14)
(assume t171.a1 @p_32)
(assume t171.a2 @p_35)
(assume t171.a3 @p_39)
(assume t171.a4 @p_146)
(assume t171.a5 @p_154)
(assume t171.a6 @p_1)
(step t171.t0 (cl @p_82) :rule equiv_simplify)
(step t171.t1 (cl @p_83 @p_24) :rule equiv2 :premises (t171.t0))
(step t171.t2 (cl @p_83) :rule resolution :premises (t171.t1 t171.a6) :args (@p_1 @p_55))
(step t171.t3 (cl @p_160) :rule forall_inst :args (@p_2))
(step t171.t4 (cl @p_65) :rule equiv_simplify)
(step t171.t5 (cl @p_68) :rule refl)
(step t171.t6 (cl @p_67) :rule refl)
(step t171.t7 (cl @p_67) :rule refl)
(step t171.t8 (cl @p_68) :rule cong :premises (t171.t6 t171.t7))
(step t171.t9 (cl @p_66) :rule hole)
(step t171.t10 (cl @p_69 @p_67) :rule equiv1 :premises (t171.t4))
(step t171.t11 (cl @p_66) :rule trans :premises (t171.t5 t171.t8 t171.t9))
(step t171.t12 (cl @p_67) :rule resolution :premises (t171.t10 t171.t11) :args (@p_66 @p_55))
(step t171.t13 (cl @p_56) :rule refl)
(step t171.t14 (cl @p_70) :rule refl)
(step t171.t15 (cl @p_71) :rule cong :premises (t171.t14 t171.t12))
(step t171.t16 (cl @p_72 @p_75 @p_74) :rule equiv_pos2)
(step t171.t17 (cl @p_73) :rule cong :premises (t171.t13 t171.t15))
(step t171.t18 (cl @p_74 @p_13) :rule implies_neg1)
(anchor :step t171.t19)
(assume t171.t19.a0 @p_13)
(step t171.t19.t0 (cl @p_76) :rule forall_inst :args (@p_18 @p_28))
(step t171.t19.t1 (cl @p_64 @p_35) :rule or :premises (t171.t19.t0))
(step t171.t19.t2 (cl @p_35) :rule resolution :premises (t171.t19.t1 t171.t19.a0) :args (@p_13 @p_55))
(step t171.t19 (cl @p_64 @p_35) :rule subproof :discharge (t171.t19.a0))
(step t171.t20 (cl @p_74 @p_35) :rule resolution :premises (t171.t18 t171.t19) :args (@p_13 @p_52))
(step t171.t21 (cl @p_74 @p_34) :rule implies_neg2)
(step t171.t22 (cl @p_74 @p_74) :rule resolution :premises (t171.t20 t171.t21) :args (@p_35 @p_52))
(step t171.t23 (cl @p_74) :rule contraction :premises (t171.t22))
(step t171.t24 (cl @p_74) :rule resolution :premises (t171.t16 t171.t17 t171.t23) :args (@p_73 @p_55 @p_74 @p_55))
(step t171.t25 (cl @p_64 @p_35) :rule implies :premises (t171.t24))
(step t171.t26 (cl @p_35) :rule resolution :premises (t171.t25 a9) :args (@p_13 @p_55))
(step t171.t27 (cl @p_127 @p_154) :rule or :premises (t171.t3))
(step t171.t28 (cl @p_132 @p_134 @p_128) :rule equiv_pos2)
(anchor :step t171.t29 :args ((?v0 Nat$) (:= (?v0 Nat$) ?v0)))
(step t171.t29.t0 (cl (= (= (max$ (insert$ ?v0 bot$)) ?v0) (= ?v0 (max$ (insert$ ?v0 bot$))))) :rule hole)
(step t171.t29 (cl @p_133) :rule bind)
(step t171.t30 (cl @p_128) :rule resolution :premises (t171.t28 t171.t29 a5) :args (@p_133 @p_55 @p_9 @p_55))
(step t171.t31 (cl @p_154) :rule resolution :premises (t171.t27 t171.t30) :args (@p_128 @p_55))
(step t171.t32 (cl @p_79) :rule equiv_simplify)
(step t171.t33 (cl (= @p_52 @p_1)) :rule symm :premises (t171.t2))
(step t171.t34 (cl (= @p_21 bot$)) :rule symm :premises (t171.a4))
(step t171.t35 (cl @p_146) :rule symm :premises (t171.t34))
(step t171.t36 (cl (= @p_156 @p_20)) :rule cong :premises (t76 t171.t35))
(step t171.t37 (cl (= @p_155 @p_28)) :rule cong :premises (t171.t36))
(step t171.t38 (cl @p_86) :rule symm :premises (t171.a3))
(step t171.t39 (cl @p_39) :rule symm :premises (t171.t38))
(step t171.t40 (cl (= @p_36 @p_33)) :rule symm :premises (t171.t26))
(step t171.t41 (cl @p_85) :rule symm :premises (t171.a1))
(step t171.t42 (cl (= @p_2 @p_16)) :rule trans :premises (t171.t31 t171.t37 t171.t39 t171.t40 t171.t41))
(step t171.t43 (cl @p_89) :rule refl)
(step t171.t44 (cl (= @p_1 @p_15)) :rule cong :premises (t171.t42 t171.t43))
(step t171.t45 (cl @p_80 @p_25) :rule equiv2 :premises (t171.t32))
(step t171.t46 (cl @p_81 @p_15) :rule not_not)
(step t171.t47 (cl @p_80 @p_15) :rule resolution :premises (t171.t45 t171.t46) :args (@p_25 @p_52))
(step t171.t48 (cl @p_80) :rule resolution :premises (t171.t47 t171.a0) :args (@p_15 @p_52))
(step t171.t49 (cl (not (! (= (! (= @p_52 @p_55) :named @p_164) @p_55) :named @p_163)) (not @p_164) @p_55) :rule equiv_pos2)
(step t171.t50 (cl @p_163) :rule hole)
(step t171.t51 (cl @p_164) :rule trans :premises (t171.t33 t171.t44 t171.t48))
(step t171.t52 (cl @p_55) :rule resolution :premises (t171.t49 t171.t50 t171.t51) :args (@p_163 @p_55 @p_164 @p_55))
(step t171 (cl @p_25 @p_31 @p_34 @p_38 @p_152 @p_153 @p_24 @p_55) :rule subproof :discharge (t171.a0 t171.a1 t171.a2 t171.a3 t171.a4 t171.a5 t171.a6))
(step t172 (cl @p_162 @p_14) :rule and_pos :args (0))
(step t173 (cl @p_162 @p_32) :rule and_pos :args (1))
(step t174 (cl @p_162 @p_35) :rule and_pos :args (2))
(step t175 (cl @p_162 @p_39) :rule and_pos :args (3))
(step t176 (cl @p_162 @p_146) :rule and_pos :args (4))
(step t177 (cl @p_162 @p_154) :rule and_pos :args (5))
(step t178 (cl @p_162 @p_1) :rule and_pos :args (6))
(step t179 (cl @p_55 @p_162 @p_162 @p_162 @p_162 @p_162 @p_162 @p_162) :rule resolution :premises (t171 t172 t173 t174 t175 t176 t177 t178) :args (@p_14 @p_55 @p_32 @p_55 @p_35 @p_55 @p_39 @p_55 @p_146 @p_55 @p_154 @p_55 @p_1 @p_55))
(step t180 (cl @p_162 @p_162 @p_162 @p_162 @p_162 @p_162 @p_162 @p_55) :rule reordering :premises (t179))
(step t181 (cl (= (! (=> @p_159 @p_55) :named @p_165) @p_162)) :rule implies_simplify)
(step t182 (cl @p_161 @p_159) :rule implies :premises (t170))
(step t183 (cl @p_165 @p_159) :rule implies_neg1)
(step t184 (cl @p_162 @p_55) :rule contraction :premises (t180))
(step t185 (cl @p_165 @p_55) :rule resolution :premises (t183 t184) :args (@p_159 @p_52))
(step t186 (cl @p_165 @p_95) :rule implies_neg2)
(step t187 (cl @p_165 @p_165) :rule resolution :premises (t185 t186) :args (@p_55 @p_52))
(step t188 (cl @p_165) :rule contraction :premises (t187))
(step t189 (cl (not @p_165) @p_162) :rule equiv1 :premises (t181))
(step t190 (cl @p_162) :rule resolution :premises (t188 t189) :args (@p_165 @p_52))
(step t191 (cl @p_161) :rule resolution :premises (t182 t190) :args (@p_159 @p_52))
(step t192 (cl (not (! (= (! (or @p_24 @p_25 @p_152 @p_31 @p_153 @p_34 @p_38) :named @p_167) (! (or @p_24 @p_15 @p_152 @p_31 @p_153 @p_34 @p_38) :named @p_168)) :named @p_166)) (not @p_167) @p_168) :rule equiv_pos2)
(step t193 (cl @p_166) :rule cong :premises (t0 t1 t153 t3 t154 t4 t5))
(step t194 (cl @p_24 @p_25 @p_152 @p_31 @p_153 @p_34 @p_38) :rule not_and :premises (t191))
(step t195 (cl @p_167 @p_99) :rule or_neg :args (0))
(step t196 (cl @p_167 @p_81) :rule or_neg :args (1))
(step t197 (cl @p_167 (not @p_152)) :rule or_neg :args (2))
(step t198 (cl @p_167 @p_101) :rule or_neg :args (3))
(step t199 (cl @p_167 (not @p_153)) :rule or_neg :args (4))
(step t200 (cl @p_167 @p_102) :rule or_neg :args (5))
(step t201 (cl @p_167 @p_103) :rule or_neg :args (6))
(step t202 (cl @p_167 @p_167 @p_167 @p_167 @p_167 @p_167 @p_167) :rule resolution :premises (t194 t195 t196 t197 t198 t199 t200 t201) :args (@p_24 @p_52 @p_25 @p_52 @p_152 @p_52 @p_31 @p_52 @p_153 @p_52 @p_34 @p_52 @p_38 @p_52))
(step t203 (cl @p_167) :rule contraction :premises (t202))
(step t204 (cl @p_168) :rule resolution :premises (t192 t193 t203) :args (@p_166 @p_55 @p_167 @p_55))
(step t205 (cl @p_24 @p_15 @p_152 @p_31 @p_153 @p_34 @p_38) :rule or :premises (t204))
(step t206 (cl (! (not (! (or (! (not (! (finite$ @p_20) :named @p_172)) :named @p_171) (! (= bot$ @p_20) :named @p_173) @p_32) :named @p_170)) :named @p_169) @p_171 @p_173 @p_32) :rule or_pos)
(step t207 (cl (! (not (! (or @p_144 @p_172) :named @p_175)) :named @p_174) @p_144 @p_172) :rule or_pos)
(step t208 (cl (or @p_150 @p_175)) :rule forall_inst :args (@p_21 @p_2))
(step t209 (cl (= (! (not @p_173) :named @p_176) @p_176)) :rule refl)
(step t210 (cl (= (! (not (! (= @p_18 (! (max$ (! (insert$ @p_18 bot$) :named @p_180)) :named @p_179)) :named @p_178)) :named @p_177) @p_177)) :rule refl)
(step t211 (cl (= (! (not (! (less$ @p_18 @p_3) :named @p_182)) :named @p_181) @p_181)) :rule refl)
(step t212 (cl (! (=> (! (and @p_14 @p_173 @p_178 @p_182) :named @p_184) (! (and @p_182 @p_178 @p_173 @p_14) :named @p_185)) :named @p_183) @p_184) :rule implies_neg1)
(anchor :step t213)
(assume t213.a0 @p_14)
(assume t213.a1 @p_173)
(assume t213.a2 @p_178)
(assume t213.a3 @p_182)
(step t213.t0 (cl (! (not (! (or @p_24 (! (not (! (less$ @p_18 @p_2) :named @p_189)) :named @p_188) @p_182) :named @p_187)) :named @p_186) @p_24 @p_188 @p_182) :rule or_pos)
(step t213.t1 (cl (! (not (! (or @p_5 @p_189) :named @p_191)) :named @p_190) @p_5 @p_189) :rule or_pos)
(step t213.t2 (cl (! (or @p_124 @p_191) :named @p_192)) :rule forall_inst :args (ta$))
(step t213.t3 (cl (! (or (! (not (! (forall ((?v0 Nat$) (?v1 Nat$) (?v2 Nat$)) (or (not (less$ ?v0 ?v1)) (not (less$ ?v2 ?v0)) (less$ ?v2 ?v1))) :named @p_195)) :named @p_194) @p_187) :named @p_193)) :rule forall_inst :args (@p_2 @p_3 @p_18))
(step t213.t4 (cl (! (or @p_127 @p_178) :named @p_196)) :rule forall_inst :args (@p_18))
(step t213.t5 (cl @p_185 @p_181 @p_177 @p_176 @p_25) :rule and_neg)
(step t213.t6 (cl @p_24 @p_188 @p_182 @p_186) :rule reordering :premises (t213.t0))
(step t213.t7 (cl @p_5 @p_189 @p_190) :rule reordering :premises (t213.t1))
(step t213.t8 (cl @p_124 @p_191) :rule or :premises (t213.t2))
(step t213.t9 (cl @p_191) :rule resolution :premises (t213.t8 t149) :args (@p_125 @p_55))
(step t213.t10 (cl @p_189) :rule resolution :premises (t213.t7 a2 t213.t9) :args (@p_5 @p_52 @p_191 @p_55))
(step t213.t11 (cl @p_194 @p_187) :rule or :premises (t213.t3))
(step t213.t12 (cl (! (not (! (= @p_10 @p_195) :named @p_198)) :named @p_197) (! (not @p_10) :named @p_199) @p_195) :rule equiv_pos2)
(step t213.t13 (cl @p_198) :rule hole)
(step t213.t14 (cl @p_195) :rule resolution :premises (t213.t12 t213.t13 a6) :args (@p_198 @p_55 @p_10 @p_55))
(step t213.t15 (cl @p_187) :rule resolution :premises (t213.t11 t213.t14) :args (@p_195 @p_55))
(step t213.t16 (cl @p_182) :rule resolution :premises (t213.t6 a1 t213.t10 t213.t15) :args (@p_1 @p_55 @p_189 @p_55 @p_187 @p_55))
(step t213.t17 (cl @p_127 @p_178) :rule or :premises (t213.t4))
(step t213.t18 (cl @p_132 @p_134 @p_128) :rule equiv_pos2)
(anchor :step t213.t19 :args ((?v0 Nat$) (:= (?v0 Nat$) ?v0)))
(step t213.t19.t0 (cl (= (= (max$ (insert$ ?v0 bot$)) ?v0) (= ?v0 (max$ (insert$ ?v0 bot$))))) :rule hole)
(step t213.t19 (cl @p_133) :rule bind)
(step t213.t20 (cl @p_128) :rule resolution :premises (t213.t18 t213.t19 a5) :args (@p_133 @p_55 @p_9 @p_55))
(step t213.t21 (cl @p_178) :rule resolution :premises (t213.t17 t213.t20) :args (@p_128 @p_55))
(step t213.t22 (cl @p_185) :rule resolution :premises (t213.t5 t213.t16 t213.t21 t213.a1 t213.a0) :args (@p_182 @p_55 @p_178 @p_55 @p_173 @p_55 @p_14 @p_55))
(step t213 (cl @p_25 @p_176 @p_177 @p_181 @p_185) :rule subproof :discharge (t213.a0 t213.a1 t213.a2 t213.a3))
(step t214 (cl (! (not @p_184) :named @p_200) @p_14) :rule and_pos :args (0))
(step t215 (cl @p_200 @p_173) :rule and_pos :args (1))
(step t216 (cl @p_200 @p_178) :rule and_pos :args (2))
(step t217 (cl @p_200 @p_182) :rule and_pos :args (3))
(step t218 (cl @p_185 @p_200 @p_200 @p_200 @p_200) :rule resolution :premises (t213 t214 t215 t216 t217) :args (@p_14 @p_55 @p_173 @p_55 @p_178 @p_55 @p_182 @p_55))
(step t219 (cl @p_200 @p_200 @p_200 @p_200 @p_185) :rule reordering :premises (t218))
(step t220 (cl @p_200 @p_185) :rule contraction :premises (t219))
(step t221 (cl @p_183 @p_185) :rule resolution :premises (t212 t220) :args (@p_184 @p_52))
(step t222 (cl @p_183 (! (not @p_185) :named @p_201)) :rule implies_neg2)
(step t223 (cl @p_183 @p_183) :rule resolution :premises (t221 t222) :args (@p_185 @p_52))
(step t224 (cl @p_183) :rule contraction :premises (t223))
(anchor :step t225)
(assume t225.a0 @p_182)
(assume t225.a1 @p_178)
(assume t225.a2 @p_173)
(assume t225.a3 @p_14)
(step t225.t0 (cl @p_79) :rule equiv_simplify)
(step t225.t1 (cl @p_80 @p_25) :rule equiv2 :premises (t225.t0))
(step t225.t2 (cl @p_81 @p_15) :rule not_not)
(step t225.t3 (cl @p_80 @p_15) :rule resolution :premises (t225.t1 t225.t2) :args (@p_25 @p_52))
(step t225.t4 (cl @p_80) :rule resolution :premises (t225.t3 t225.a3) :args (@p_15 @p_52))
(step t225.t5 (cl @p_196) :rule forall_inst :args (@p_18))
(step t225.t6 (cl @p_127 @p_178) :rule or :premises (t225.t5))
(step t225.t7 (cl @p_132 @p_134 @p_128) :rule equiv_pos2)
(anchor :step t225.t8 :args ((?v0 Nat$) (:= (?v0 Nat$) ?v0)))
(step t225.t8.t0 (cl (= (= (max$ (insert$ ?v0 bot$)) ?v0) (= ?v0 (max$ (insert$ ?v0 bot$))))) :rule hole)
(step t225.t8 (cl @p_133) :rule bind)
(step t225.t9 (cl @p_128) :rule resolution :premises (t225.t7 t225.t8 a5) :args (@p_133 @p_55 @p_9 @p_55))
(step t225.t10 (cl @p_178) :rule resolution :premises (t225.t6 t225.t9) :args (@p_128 @p_55))
(step t225.t11 (cl (! (= (! (= @p_182 @p_52) :named @p_203) @p_182) :named @p_202)) :rule equiv_simplify)
(step t225.t12 (cl @p_186 @p_24 @p_188 @p_182) :rule or_pos)
(step t225.t13 (cl @p_190 @p_5 @p_189) :rule or_pos)
(step t225.t14 (cl @p_192) :rule forall_inst :args (ta$))
(step t225.t15 (cl @p_193) :rule forall_inst :args (@p_2 @p_3 @p_18))
(step t225.t16 (cl @p_84) :rule symm :premises (t225.t4))
(step t225.t17 (cl (! (= @p_18 @p_18) :named @p_204)) :rule refl)
(step t225.t18 (cl (= @p_20 bot$)) :rule symm :premises (t225.a2))
(step t225.t19 (cl (= @p_17 @p_180)) :rule cong :premises (t225.t17 t225.t18))
(step t225.t20 (cl (= @p_16 @p_179)) :rule cong :premises (t225.t19))
(step t225.t21 (cl (= @p_179 @p_18)) :rule symm :premises (t225.t10))
(step t225.t22 (cl (! (= @p_16 @p_18) :named @p_205)) :rule trans :premises (t225.t20 t225.t21))
(step t225.t23 (cl @p_89) :rule refl)
(step t225.t24 (cl (! (= @p_15 @p_182) :named @p_206)) :rule cong :premises (t225.t22 t225.t23))
(step t225.t25 (cl @p_203 @p_181) :rule equiv2 :premises (t225.t11))
(step t225.t26 (cl @p_24 @p_188 @p_182 @p_186) :rule reordering :premises (t225.t12))
(step t225.t27 (cl @p_5 @p_189 @p_190) :rule reordering :premises (t225.t13))
(step t225.t28 (cl @p_124 @p_191) :rule or :premises (t225.t14))
(step t225.t29 (cl @p_191) :rule resolution :premises (t225.t28 t149) :args (@p_125 @p_55))
(step t225.t30 (cl @p_189) :rule resolution :premises (t225.t27 a2 t225.t29) :args (@p_5 @p_52 @p_191 @p_55))
(step t225.t31 (cl @p_194 @p_187) :rule or :premises (t225.t15))
(step t225.t32 (cl @p_197 @p_199 @p_195) :rule equiv_pos2)
(step t225.t33 (cl @p_198) :rule hole)
(step t225.t34 (cl @p_195) :rule resolution :premises (t225.t32 t225.t33 a6) :args (@p_198 @p_55 @p_10 @p_55))
(step t225.t35 (cl @p_187) :rule resolution :premises (t225.t31 t225.t34) :args (@p_195 @p_55))
(step t225.t36 (cl @p_182) :rule resolution :premises (t225.t26 a1 t225.t30 t225.t35) :args (@p_1 @p_55 @p_189 @p_55 @p_187 @p_55))
(step t225.t37 (cl @p_203) :rule resolution :premises (t225.t25 t225.t36) :args (@p_182 @p_55))
(step t225.t38 (cl @p_90 @p_93 @p_55) :rule equiv_pos2)
(step t225.t39 (cl @p_91) :rule hole)
(step t225.t40 (cl @p_92) :rule trans :premises (t225.t16 t225.t24 t225.t37))
(step t225.t41 (cl @p_55) :rule resolution :premises (t225.t38 t225.t39 t225.t40) :args (@p_91 @p_55 @p_92 @p_55))
(step t225 (cl @p_181 @p_177 @p_176 @p_25 @p_55) :rule subproof :discharge (t225.a0 t225.a1 t225.a2 t225.a3))
(step t226 (cl @p_201 @p_182) :rule and_pos :args (0))
(step t227 (cl @p_201 @p_178) :rule and_pos :args (1))
(step t228 (cl @p_201 @p_173) :rule and_pos :args (2))
(step t229 (cl @p_201 @p_14) :rule and_pos :args (3))
(step t230 (cl @p_55 @p_201 @p_201 @p_201 @p_201) :rule resolution :premises (t225 t226 t227 t228 t229) :args (@p_182 @p_55 @p_178 @p_55 @p_173 @p_55 @p_14 @p_55))
(step t231 (cl @p_201 @p_201 @p_201 @p_201 @p_55) :rule reordering :premises (t230))
(step t232 (cl (= (! (=> @p_185 @p_55) :named @p_207) @p_201)) :rule implies_simplify)
(step t233 (cl @p_200 @p_185) :rule implies :premises (t224))
(step t234 (cl @p_207 @p_185) :rule implies_neg1)
(step t235 (cl @p_201 @p_55) :rule contraction :premises (t231))
(step t236 (cl @p_207 @p_55) :rule resolution :premises (t234 t235) :args (@p_185 @p_52))
(step t237 (cl @p_207 @p_95) :rule implies_neg2)
(step t238 (cl @p_207 @p_207) :rule resolution :premises (t236 t237) :args (@p_55 @p_52))
(step t239 (cl @p_207) :rule contraction :premises (t238))
(step t240 (cl (not @p_207) @p_201) :rule equiv1 :premises (t232))
(step t241 (cl @p_201) :rule resolution :premises (t239 t240) :args (@p_207 @p_52))
(step t242 (cl @p_200) :rule resolution :premises (t233 t241) :args (@p_185 @p_52))
(step t243 (cl (not (! (= (! (or @p_25 @p_176 @p_177 @p_181) :named @p_209) (! (or @p_15 @p_176 @p_177 @p_181) :named @p_210)) :named @p_208)) (not @p_209) @p_210) :rule equiv_pos2)
(step t244 (cl @p_208) :rule cong :premises (t1 t209 t210 t211))
(step t245 (cl @p_25 @p_176 @p_177 @p_181) :rule not_and :premises (t242))
(step t246 (cl @p_209 @p_81) :rule or_neg :args (0))
(step t247 (cl @p_209 (not @p_176)) :rule or_neg :args (1))
(step t248 (cl @p_209 (not @p_177)) :rule or_neg :args (2))
(step t249 (cl @p_209 (! (not @p_181) :named @p_211)) :rule or_neg :args (3))
(step t250 (cl @p_209 @p_209 @p_209 @p_209) :rule resolution :premises (t245 t246 t247 t248 t249) :args (@p_25 @p_52 @p_176 @p_52 @p_177 @p_52 @p_181 @p_52))
(step t251 (cl @p_209) :rule contraction :premises (t250))
(step t252 (cl @p_210) :rule resolution :premises (t243 t244 t251) :args (@p_208 @p_55 @p_209 @p_55))
(step t253 (cl @p_196) :rule forall_inst :args (@p_18))
(step t254 (cl @p_186 @p_24 @p_188 @p_182) :rule or_pos)
(step t255 (cl @p_190 @p_5 @p_189) :rule or_pos)
(step t256 (cl @p_192) :rule forall_inst :args (ta$))
(step t257 (cl @p_193) :rule forall_inst :args (@p_2 @p_3 @p_18))
(step t258 (cl @p_24 @p_188 @p_182 @p_186) :rule reordering :premises (t254))
(step t259 (cl @p_5 @p_189 @p_190) :rule reordering :premises (t255))
(step t260 (cl @p_124 @p_191) :rule or :premises (t256))
(step t261 (cl @p_191) :rule resolution :premises (t260 t149) :args (@p_125 @p_55))
(step t262 (cl @p_189) :rule resolution :premises (t259 a2 t261) :args (@p_5 @p_52 @p_191 @p_55))
(step t263 (cl @p_194 @p_187) :rule or :premises (t257))
(step t264 (cl @p_197 @p_199 @p_195) :rule equiv_pos2)
(step t265 (cl @p_198) :rule hole)
(step t266 (cl @p_195) :rule resolution :premises (t264 t265 a6) :args (@p_198 @p_55 @p_10 @p_55))
(step t267 (cl @p_187) :rule resolution :premises (t263 t266) :args (@p_195 @p_55))
(step t268 (cl @p_182) :rule resolution :premises (t258 a1 t262 t267) :args (@p_1 @p_55 @p_189 @p_55 @p_187 @p_55))
(step t269 (cl (or (! (not (! (forall ((?v0 Nat_set$) (?v1 Nat$)) (or (not (finite$ ?v0)) (= bot$ ?v0) (= (max$ (insert$ ?v1 ?v0)) (max$a ?v1 (max$ ?v0))))) :named @p_213)) :named @p_212) @p_170)) :rule forall_inst :args (@p_20 @p_18))
(anchor :step t270 :args ((?v0 Nat_set$) (?v1 Nat$) (:= (?v0 Nat_set$) ?v0) (:= (?v1 Nat$) ?v1)))
(step t270.t0 (cl (= (finite$ ?v0) (finite$ ?v0))) :rule refl)
(step t270.t1 (cl (= (= ?v0 bot$) (= bot$ ?v0))) :rule hole)
(step t270.t2 (cl (= (not (= ?v0 bot$)) (not (= bot$ ?v0)))) :rule cong :premises (t270.t1))
(step t270.t3 (cl (= (and (finite$ ?v0) (not (= ?v0 bot$))) (and (finite$ ?v0) (not (= bot$ ?v0))))) :rule cong :premises (t270.t0 t270.t2))
(step t270.t4 (cl (= (= (max$ (insert$ ?v1 ?v0)) (max$a ?v1 (max$ ?v0))) (= (max$ (insert$ ?v1 ?v0)) (max$a ?v1 (max$ ?v0))))) :rule refl)
(step t270.t5 (cl (= (=> (and (finite$ ?v0) (not (= ?v0 bot$))) (= (max$ (insert$ ?v1 ?v0)) (max$a ?v1 (max$ ?v0)))) (=> (and (finite$ ?v0) (not (= bot$ ?v0))) (= (max$ (insert$ ?v1 ?v0)) (max$a ?v1 (max$ ?v0)))))) :rule cong :premises (t270.t3 t270.t4))
(step t270 (cl (= @p_8 (! (forall ((?v0 Nat_set$) (?v1 Nat$)) (=> (and (finite$ ?v0) (not (= bot$ ?v0))) (= (max$ (insert$ ?v1 ?v0)) (max$a ?v1 (max$ ?v0))))) :named @p_214))) :rule bind)
(step t271 (cl (= @p_214 @p_213)) :rule hole)
(step t272 (cl @p_160) :rule forall_inst :args (@p_2))
(step t273 (cl @p_65) :rule equiv_simplify)
(step t274 (cl @p_68) :rule refl)
(step t275 (cl @p_67) :rule refl)
(step t276 (cl @p_67) :rule refl)
(step t277 (cl @p_68) :rule cong :premises (t275 t276))
(step t278 (cl @p_66) :rule hole)
(step t279 (cl @p_69 @p_67) :rule equiv1 :premises (t273))
(step t280 (cl @p_66) :rule trans :premises (t274 t277 t278))
(step t281 (cl @p_67) :rule resolution :premises (t279 t280) :args (@p_66 @p_55))
(step t282 (cl @p_56) :rule refl)
(step t283 (cl @p_70) :rule refl)
(step t284 (cl @p_71) :rule cong :premises (t283 t281))
(step t285 (cl @p_72 @p_75 @p_74) :rule equiv_pos2)
(step t286 (cl @p_73) :rule cong :premises (t282 t284))
(step t287 (cl @p_74 @p_13) :rule implies_neg1)
(anchor :step t288)
(assume t288.a0 @p_13)
(step t288.t0 (cl @p_76) :rule forall_inst :args (@p_18 @p_28))
(step t288.t1 (cl @p_64 @p_35) :rule or :premises (t288.t0))
(step t288.t2 (cl @p_35) :rule resolution :premises (t288.t1 t288.a0) :args (@p_13 @p_55))
(step t288 (cl @p_64 @p_35) :rule subproof :discharge (t288.a0))
(step t289 (cl @p_74 @p_35) :rule resolution :premises (t287 t288) :args (@p_13 @p_52))
(step t290 (cl @p_74 @p_34) :rule implies_neg2)
(step t291 (cl @p_74 @p_74) :rule resolution :premises (t289 t290) :args (@p_35 @p_52))
(step t292 (cl @p_74) :rule contraction :premises (t291))
(step t293 (cl @p_74) :rule resolution :premises (t285 t286 t292) :args (@p_73 @p_55 @p_74 @p_55))
(step t294 (cl @p_64 @p_35) :rule implies :premises (t293))
(step t295 (cl @p_35) :rule resolution :premises (t294 a9) :args (@p_13 @p_55))
(step t296 (cl (= @p_37 @p_37)) :rule refl)
(step t297 (cl (= @p_86 @p_39)) :rule hole)
(step t298 (cl (= (! (= @p_36 @p_18) :named @p_215) (! (= @p_18 @p_36) :named @p_216))) :rule hole)
(step t299 (cl (= @p_28 @p_28)) :rule refl)
(step t300 (cl (= @p_86 @p_86)) :rule cong :premises (t281 t299))
(step t301 (cl @p_204) :rule refl)
(step t302 (cl (= @p_215 @p_215)) :rule cong :premises (t281 t301))
(step t303 (cl (not (! (= (! (ite @p_37 @p_86 @p_215) :named @p_218) (! (ite @p_37 @p_39 @p_216) :named @p_219)) :named @p_217)) (! (not @p_218) :named @p_220) @p_219) :rule equiv_pos2)
(step t304 (cl @p_217) :rule cong :premises (t296 t297 t298))
(step t305 (cl (not (! (= @p_218 @p_218) :named @p_221)) @p_220 @p_218) :rule equiv_pos2)
(step t306 (cl @p_221) :rule cong :premises (t296 t300 t302))
(step t307 (cl @p_218) :rule hole)
(step t308 (cl @p_218) :rule resolution :premises (t305 t306 t307) :args (@p_221 @p_55 @p_218 @p_55))
(step t309 (cl @p_219) :rule resolution :premises (t303 t304 t308) :args (@p_217 @p_55 @p_218 @p_55))
(step t310 (cl (! (not @p_37) :named @p_222) @p_39) :rule ite2 :premises (t309))
(step t311 (cl (= (! (not @p_216) :named @p_223) @p_223)) :rule refl)
(step t312 (cl (! (=> (! (and @p_14 @p_32 @p_182 @p_35 @p_216) :named @p_225) (! (and @p_182 @p_216 @p_35 @p_32 @p_14) :named @p_226)) :named @p_224) @p_225) :rule implies_neg1)
(anchor :step t313)
(assume t313.a0 @p_14)
(assume t313.a1 @p_32)
(assume t313.a2 @p_182)
(assume t313.a3 @p_35)
(assume t313.a4 @p_216)
(step t313.t0 (cl @p_226 @p_181 @p_223 @p_34 @p_31 @p_25) :rule and_neg)
(step t313.t1 (cl @p_226) :rule resolution :premises (t313.t0 t268 t313.a4 t295 t313.a1 t313.a0) :args (@p_182 @p_55 @p_216 @p_55 @p_35 @p_55 @p_32 @p_55 @p_14 @p_55))
(step t313 (cl @p_25 @p_31 @p_181 @p_34 @p_223 @p_226) :rule subproof :discharge (t313.a0 t313.a1 t313.a2 t313.a3 t313.a4))
(step t314 (cl (! (not @p_225) :named @p_227) @p_14) :rule and_pos :args (0))
(step t315 (cl @p_227 @p_32) :rule and_pos :args (1))
(step t316 (cl @p_227 @p_182) :rule and_pos :args (2))
(step t317 (cl @p_227 @p_35) :rule and_pos :args (3))
(step t318 (cl @p_227 @p_216) :rule and_pos :args (4))
(step t319 (cl @p_226 @p_227 @p_227 @p_227 @p_227 @p_227) :rule resolution :premises (t313 t314 t315 t316 t317 t318) :args (@p_14 @p_55 @p_32 @p_55 @p_182 @p_55 @p_35 @p_55 @p_216 @p_55))
(step t320 (cl @p_227 @p_227 @p_227 @p_227 @p_227 @p_226) :rule reordering :premises (t319))
(step t321 (cl @p_227 @p_226) :rule contraction :premises (t320))
(step t322 (cl @p_224 @p_226) :rule resolution :premises (t312 t321) :args (@p_225 @p_52))
(step t323 (cl @p_224 (! (not @p_226) :named @p_228)) :rule implies_neg2)
(step t324 (cl @p_224 @p_224) :rule resolution :premises (t322 t323) :args (@p_226 @p_52))
(step t325 (cl @p_224) :rule contraction :premises (t324))
(anchor :step t326)
(assume t326.a0 @p_182)
(assume t326.a1 @p_216)
(assume t326.a2 @p_35)
(assume t326.a3 @p_32)
(assume t326.a4 @p_14)
(step t326.t0 (cl @p_79) :rule equiv_simplify)
(step t326.t1 (cl @p_80 @p_25) :rule equiv2 :premises (t326.t0))
(step t326.t2 (cl @p_81 @p_15) :rule not_not)
(step t326.t3 (cl @p_80 @p_15) :rule resolution :premises (t326.t1 t326.t2) :args (@p_25 @p_52))
(step t326.t4 (cl @p_80) :rule resolution :premises (t326.t3 t326.a4) :args (@p_15 @p_52))
(step t326.t5 (cl @p_202) :rule equiv_simplify)
(step t326.t6 (cl @p_84) :rule symm :premises (t326.t4))
(step t326.t7 (cl @p_85) :rule symm :premises (t326.a3))
(step t326.t8 (cl @p_32) :rule symm :premises (t326.t7))
(step t326.t9 (cl @p_215) :rule symm :premises (t326.a1))
(step t326.t10 (cl @p_205) :rule trans :premises (t326.t8 t295 t326.t9))
(step t326.t11 (cl @p_89) :rule refl)
(step t326.t12 (cl @p_206) :rule cong :premises (t326.t10 t326.t11))
(step t326.t13 (cl @p_203 @p_181) :rule equiv2 :premises (t326.t5))
(step t326.t14 (cl @p_203) :rule resolution :premises (t326.t13 t268) :args (@p_182 @p_55))
(step t326.t15 (cl @p_90 @p_93 @p_55) :rule equiv_pos2)
(step t326.t16 (cl @p_91) :rule hole)
(step t326.t17 (cl @p_92) :rule trans :premises (t326.t6 t326.t12 t326.t14))
(step t326.t18 (cl @p_55) :rule resolution :premises (t326.t15 t326.t16 t326.t17) :args (@p_91 @p_55 @p_92 @p_55))
(step t326 (cl @p_181 @p_223 @p_34 @p_31 @p_25 @p_55) :rule subproof :discharge (t326.a0 t326.a1 t326.a2 t326.a3 t326.a4))
(step t327 (cl @p_228 @p_182) :rule and_pos :args (0))
(step t328 (cl @p_228 @p_216) :rule and_pos :args (1))
(step t329 (cl @p_228 @p_35) :rule and_pos :args (2))
(step t330 (cl @p_228 @p_32) :rule and_pos :args (3))
(step t331 (cl @p_228 @p_14) :rule and_pos :args (4))
(step t332 (cl @p_55 @p_228 @p_228 @p_228 @p_228 @p_228) :rule resolution :premises (t326 t327 t328 t329 t330 t331) :args (@p_182 @p_55 @p_216 @p_55 @p_35 @p_55 @p_32 @p_55 @p_14 @p_55))
(step t333 (cl @p_228 @p_228 @p_228 @p_228 @p_228 @p_55) :rule reordering :premises (t332))
(step t334 (cl (= (! (=> @p_226 @p_55) :named @p_229) @p_228)) :rule implies_simplify)
(step t335 (cl @p_227 @p_226) :rule implies :premises (t325))
(step t336 (cl @p_229 @p_226) :rule implies_neg1)
(step t337 (cl @p_228 @p_55) :rule contraction :premises (t333))
(step t338 (cl @p_229 @p_55) :rule resolution :premises (t336 t337) :args (@p_226 @p_52))
(step t339 (cl @p_229 @p_95) :rule implies_neg2)
(step t340 (cl @p_229 @p_229) :rule resolution :premises (t338 t339) :args (@p_55 @p_52))
(step t341 (cl @p_229) :rule contraction :premises (t340))
(step t342 (cl (not @p_229) @p_228) :rule equiv1 :premises (t334))
(step t343 (cl @p_228) :rule resolution :premises (t341 t342) :args (@p_229 @p_52))
(step t344 (cl @p_227) :rule resolution :premises (t335 t343) :args (@p_226 @p_52))
(step t345 (cl (not (! (= (! (or @p_25 @p_31 @p_181 @p_34 @p_223) :named @p_231) (! (or @p_15 @p_31 @p_181 @p_34 @p_223) :named @p_232)) :named @p_230)) (not @p_231) @p_232) :rule equiv_pos2)
(step t346 (cl @p_230) :rule cong :premises (t1 t3 t211 t4 t311))
(step t347 (cl @p_25 @p_31 @p_181 @p_34 @p_223) :rule not_and :premises (t344))
(step t348 (cl @p_231 @p_81) :rule or_neg :args (0))
(step t349 (cl @p_231 @p_101) :rule or_neg :args (1))
(step t350 (cl @p_231 @p_211) :rule or_neg :args (2))
(step t351 (cl @p_231 @p_102) :rule or_neg :args (3))
(step t352 (cl @p_231 (not @p_223)) :rule or_neg :args (4))
(step t353 (cl @p_231 @p_231 @p_231 @p_231 @p_231) :rule resolution :premises (t347 t348 t349 t350 t351 t352) :args (@p_25 @p_52 @p_31 @p_52 @p_181 @p_52 @p_34 @p_52 @p_223 @p_52))
(step t354 (cl @p_231) :rule contraction :premises (t353))
(step t355 (cl @p_232) :rule resolution :premises (t345 t346 t354) :args (@p_230 @p_55 @p_231 @p_55))
(step t356 (cl (or @p_212 @p_143)) :rule forall_inst :args (@p_21 @p_2))
(step t357 (cl @p_126) :rule forall_inst :args (@p_22))
(step t358 (cl @p_57) :rule refl)
(step t359 (cl @p_58) :rule cong :premises (t358 t73))
(step t360 (cl @p_59 @p_62 @p_61) :rule equiv_pos2)
(step t361 (cl @p_60) :rule cong :premises (t282 t359))
(step t362 (cl @p_61 @p_13) :rule implies_neg1)
(anchor :step t363)
(assume t363.a0 @p_13)
(step t363.t0 (cl @p_63) :rule forall_inst :args (@p_2 @p_30))
(step t363.t1 (cl @p_64 @p_41) :rule or :premises (t363.t0))
(step t363.t2 (cl @p_41) :rule resolution :premises (t363.t1 t363.a0) :args (@p_13 @p_55))
(step t363 (cl @p_64 @p_41) :rule subproof :discharge (t363.a0))
(step t364 (cl @p_61 @p_41) :rule resolution :premises (t362 t363) :args (@p_13 @p_52))
(step t365 (cl @p_61 @p_40) :rule implies_neg2)
(step t366 (cl @p_61 @p_61) :rule resolution :premises (t364 t365) :args (@p_41 @p_52))
(step t367 (cl @p_61) :rule contraction :premises (t366))
(step t368 (cl @p_61) :rule resolution :premises (t360 t361 t367) :args (@p_60 @p_55 @p_61 @p_55))
(step t369 (cl @p_15 @p_24 @p_26 @p_31 @p_34 @p_38 @p_40 @p_44) :rule reordering :premises (t61))
(step t370 (cl @p_43 @p_45) :rule ite1 :premises (t84))
(step t371 (cl @p_106 @p_112) :rule reordering :premises (t85))
(step t372 (cl @p_15 @p_113 @p_26 @p_31 @p_115 @p_34 @p_38 @p_40 @p_117) :rule or :premises (t144))
(step t373 (cl @p_7 @p_114 @p_121) :rule reordering :premises (t145))
(step t374 (cl @p_124 @p_122) :rule or :premises (t146))
(step t375 (cl @p_114 @p_124) :rule resolution :premises (t373 a3 t374) :args (@p_7 @p_52 @p_122 @p_55))
(step t376 (cl @p_144 @p_146 @p_27 @p_142) :rule reordering :premises (t150))
(step t377 (cl @p_149 @p_145 @p_147) :rule reordering :premises (t151))
(step t378 (cl @p_150 @p_148) :rule or :premises (t152))
(step t379 (cl (not (! (= @p_12 @p_151) :named @p_233)) (not @p_12) @p_151) :rule equiv_pos2)
(step t380 (cl @p_233) :rule hole)
(step t381 (cl @p_151) :rule resolution :premises (t379 t380 a8) :args (@p_233 @p_55 @p_12 @p_55))
(step t382 (cl @p_145 @p_150) :rule resolution :premises (t377 a7 t378) :args (@p_11 @p_55 @p_148 @p_55))
(step t383 (cl @p_15 @p_24 @p_152 @p_31 @p_153 @p_34 @p_38) :rule reordering :premises (t205))
(step t384 (cl @p_171 @p_173 @p_32 @p_169) :rule reordering :premises (t206))
(step t385 (cl @p_144 @p_172 @p_174) :rule reordering :premises (t207))
(step t386 (cl @p_150 @p_175) :rule or :premises (t208))
(step t387 (cl @p_144 @p_172 @p_150) :rule resolution :premises (t385 t386) :args (@p_175 @p_55))
(step t388 (cl @p_15 @p_176 @p_177 @p_181) :rule or :premises (t252))
(step t389 (cl @p_127 @p_178) :rule or :premises (t253))
(step t390 (cl @p_132 @p_134 @p_128) :rule equiv_pos2)
(anchor :step t391 :args ((?v0 Nat$) (:= (?v0 Nat$) ?v0)))
(step t391.t0 (cl (= (= (max$ (insert$ ?v0 bot$)) ?v0) (= ?v0 (max$ (insert$ ?v0 bot$))))) :rule hole)
(step t391 (cl @p_133) :rule bind)
(step t392 (cl @p_128) :rule resolution :premises (t390 t391 a5) :args (@p_133 @p_55 @p_9 @p_55))
(step t393 (cl @p_15 @p_176 @p_181 @p_127) :rule resolution :premises (t388 t389) :args (@p_178 @p_55))
(step t394 (cl @p_212 @p_170) :rule or :premises (t269))
(step t395 (cl (not (! (= @p_8 @p_213) :named @p_234)) (not @p_8) @p_213) :rule equiv_pos2)
(step t396 (cl @p_234) :rule trans :premises (t270 t271))
(step t397 (cl @p_213) :rule resolution :premises (t395 t396 a4) :args (@p_234 @p_55 @p_8 @p_55))
(step t398 (cl @p_127 @p_150 @p_32 @p_144 @p_15 @p_181 @p_212) :rule resolution :premises (t384 t387 t393 t394) :args (@p_172 @p_55 @p_173 @p_52 @p_170 @p_55))
(step t399 (cl @p_127 @p_154) :rule or :premises (t272))
(step t400 (cl @p_39 @p_222) :rule reordering :premises (t310))
(step t401 (cl @p_37 @p_216) :rule ite1 :premises (t309))
(step t402 (cl @p_15 @p_31 @p_181 @p_34 @p_223) :rule or :premises (t355))
(step t403 (cl @p_37 @p_15 @p_31 @p_181 @p_34) :rule resolution :premises (t401 t402) :args (@p_216 @p_52))
(step t404 (cl @p_39 @p_15 @p_31 @p_181 @p_34) :rule resolution :premises (t400 t403) :args (@p_37 @p_55))
(step t405 (cl @p_15 @p_24 @p_152 @p_31 @p_38 @p_34 @p_127) :rule resolution :premises (t383 t399) :args (@p_154 @p_55))
(step t406 (cl @p_212 @p_143) :rule or :premises (t356))
(step t407 (cl @p_144 @p_127 @p_27 @p_15 @p_24 @p_31 @p_38 @p_34 @p_212) :rule resolution :premises (t376 t405 t406) :args (@p_146 @p_52 @p_143 @p_55))
(step t408 (cl @p_127 @p_116) :rule or :premises (t357))
(step t409 (cl @p_64 @p_41) :rule implies :premises (t368))
(step t410 (cl @p_15 @p_117 @p_124 @p_31 @p_212 @p_34 @p_38 @p_24 @p_144 @p_127 @p_64) :rule resolution :premises (t372 t375 t407 t408 t409) :args (@p_114 @p_55 @p_27 @p_55 @p_116 @p_55 @p_41 @p_55))
(step t411 (cl @p_112 @p_15 @p_124 @p_31 @p_212 @p_34 @p_38 @p_24 @p_144 @p_127 @p_64) :rule resolution :premises (t371 t410) :args (@p_106 @p_52))
(step t412 (cl @p_45 @p_15 @p_124 @p_31 @p_212 @p_34 @p_38 @p_24 @p_144 @p_127 @p_64) :rule resolution :premises (t370 t411) :args (@p_43 @p_52))
(step t413 (cl @p_15 @p_24 @p_127 @p_31 @p_34 @p_38 @p_64 @p_124 @p_212 @p_144) :rule resolution :premises (t369 t412 t409 t407) :args (@p_45 @p_55 @p_41 @p_55 @p_27 @p_55))
(step t414 (cl) :rule resolution :premises (t413 t404 t295 t398 t397 t268 t392 t382 t381 t149 a10 a9 a1) :args (@p_39 @p_55 @p_35 @p_55 @p_32 @p_55 @p_213 @p_55 @p_182 @p_55 @p_128 @p_55 @p_145 @p_55 @p_151 @p_55 @p_125 @p_55 @p_15 @p_52 @p_13 @p_55 @p_1 @p_55))
