(assume a0 (! (forall ((?v0 Real)) (= (fun_app$ uu$ ?v0) (* 2.0 (fun_app$ x_coord$ (- 1.0 ?v0))))) :named @p_0))
(assume a1 (! (forall ((?v0 Real)) (= (fun_app$ uuj$ ?v0) (* 1.0 ?v0))) :named @p_1))
(assume a2 (! (forall ((?v0 Real)) (= (fun_app$ uum$ ?v0) (- ?v0))) :named @p_2))
(assume a3 (! (forall ((?v0 Num1_bit0$) (?v1 Num1_bit0$)) (= (fun_app$a (uua$ ?v0) ?v1) (minus$ ?v1 ?v0))) :named @p_3))
(assume a4 (! (forall ((?v0 Real) (?v1 Real)) (= (fun_app$ (uub$ ?v0) ?v1) (- ?v1 ?v0))) :named @p_4))
(assume a5 (! (forall ((?v0 Real_set$) (?v1 Real)) (= (fun_app$b (uuf$ ?v0) ?v1) (member$ ?v1 ?v0))) :named @p_5))
(assume a6 (! (forall ((?v0 Num_set$) (?v1 Num$)) (= (fun_app$c (uue$ ?v0) ?v1) (member$a ?v1 ?v0))) :named @p_6))
(assume a7 (! (forall ((?v0 Nat_set$) (?v1 Nat$)) (= (fun_app$d (uud$ ?v0) ?v1) (member$b ?v1 ?v0))) :named @p_7))
(assume a8 (! (forall ((?v0 Num1_bit0$)) (= (fun_app$a uui$ ?v0) ?v0)) :named @p_8))
(assume a9 (! (forall ((?v0 Real)) (= (fun_app$ uuc$ ?v0) ?v0)) :named @p_9))
(assume a10 (! (forall ((?v0 Real_set$)) (= (fun_app$e uuh$ ?v0) ?v0)) :named @p_10))
(assume a11 (! (forall ((?v0 Nat_set$)) (= (fun_app$f uug$ ?v0) ?v0)) :named @p_11))
(assume a12 (! (forall ((?v0 Nat$)) (= (fun_app$g uuk$ ?v0) ?v0)) :named @p_12))
(assume a13 (! (forall ((?v0 Real)) (= (fun_app$b uul$ ?v0) (! true :named @p_14))) :named @p_13))
(assume a14 (! (not (! (inj_on$ uu$ top$) :named @p_16)) :named @p_15))
(assume a15 (! (forall ((?v0 Num$)) (= (= (numeral$ ?v0) 1.0) (= ?v0 one$))) :named @p_17))
(assume a16 (! (forall ((?v0 Num$)) (= (= (numeral$a ?v0) one$a) (= ?v0 one$))) :named @p_18))
(assume a17 (! (forall ((?v0 Num$)) (= (= 1.0 (numeral$ ?v0)) (= one$ ?v0))) :named @p_19))
(assume a18 (! (forall ((?v0 Num$)) (= (= one$a (numeral$a ?v0)) (= one$ ?v0))) :named @p_20))
(assume a19 (! (forall ((?v0 Real) (?v1 Real) (?v2 Num$)) (= (fun_app$ (times$ (- ?v0 ?v1)) (numeral$ ?v2)) (- (fun_app$ (times$ ?v0) (numeral$ ?v2)) (fun_app$ (times$ ?v1) (numeral$ ?v2))))) :named @p_21))
(assume a20 (! (forall ((?v0 Num1_bit0$) (?v1 Num1_bit0$) (?v2 Num$)) (= (fun_app$a (times$a (minus$ ?v0 ?v1)) (numeral$b ?v2)) (minus$ (fun_app$a (times$a ?v0) (numeral$b ?v2)) (fun_app$a (times$a ?v1) (numeral$b ?v2))))) :named @p_22))
(assume a21 (! (forall ((?v0 Num$) (?v1 Real) (?v2 Real)) (= (fun_app$ (times$ (numeral$ ?v0)) (- ?v1 ?v2)) (- (fun_app$ (times$ (numeral$ ?v0)) ?v1) (fun_app$ (times$ (numeral$ ?v0)) ?v2)))) :named @p_23))
(assume a22 (! (forall ((?v0 Num$) (?v1 Num1_bit0$) (?v2 Num1_bit0$)) (= (fun_app$a (times$a (numeral$b ?v0)) (minus$ ?v1 ?v2)) (minus$ (fun_app$a (times$a (numeral$b ?v0)) ?v1) (fun_app$a (times$a (numeral$b ?v0)) ?v2)))) :named @p_24))
(assume a23 (! (forall ((?v0 Num$)) (= (= (bit0$ ?v0) one$) (! false :named @p_26))) :named @p_25))
(assume a24 (! (forall ((?v0 Num$)) (= (= one$ (bit0$ ?v0)) @p_26)) :named @p_27))
(assume a25 (! (forall ((?v0 Num$) (?v1 Num$) (?v2 Real)) (= (fun_app$ (times$ (numeral$ ?v0)) (fun_app$ (times$ (numeral$ ?v1)) ?v2)) (fun_app$ (times$ (numeral$ (fun_app$h (times$b ?v0) ?v1))) ?v2))) :named @p_28))
(assume a26 (! (forall ((?v0 Num$) (?v1 Num$) (?v2 Nat$)) (= (fun_app$g (times$c (numeral$a ?v0)) (fun_app$g (times$c (numeral$a ?v1)) ?v2)) (fun_app$g (times$c (numeral$a (fun_app$h (times$b ?v0) ?v1))) ?v2))) :named @p_29))
(assume a27 (! (forall ((?v0 Num$) (?v1 Num$) (?v2 Num1_bit0$)) (= (fun_app$a (times$a (numeral$b ?v0)) (fun_app$a (times$a (numeral$b ?v1)) ?v2)) (fun_app$a (times$a (numeral$b (fun_app$h (times$b ?v0) ?v1))) ?v2))) :named @p_30))
(assume a28 (! (forall ((?v0 Num$) (?v1 Num$)) (= (fun_app$ (times$ (numeral$ ?v0)) (numeral$ ?v1)) (numeral$ (fun_app$h (times$b ?v0) ?v1)))) :named @p_31))
(assume a29 (! (forall ((?v0 Num$) (?v1 Num$)) (= (fun_app$g (times$c (numeral$a ?v0)) (numeral$a ?v1)) (numeral$a (fun_app$h (times$b ?v0) ?v1)))) :named @p_32))
(assume a30 (! (forall ((?v0 Num$) (?v1 Num$)) (= (fun_app$a (times$a (numeral$b ?v0)) (numeral$b ?v1)) (numeral$b (fun_app$h (times$b ?v0) ?v1)))) :named @p_33))
(assume a31 (! (forall ((?v0 Nat_set$)) (= (fun_app$f (! (times$d one$b) :named @p_35) ?v0) ?v0)) :named @p_34))
(assume a32 (! (forall ((?v0 Real_set$)) (= (fun_app$e (! (times$e one$c) :named @p_37) ?v0) ?v0)) :named @p_36))
(assume a33 (! (forall ((?v0 Num1_bit0$)) (= (fun_app$a (! (times$a one$d) :named @p_39) ?v0) ?v0)) :named @p_38))
(assume a34 (! (forall ((?v0 Real)) (= (* 1.0 ?v0) ?v0)) :named @p_40))
(assume a35 (! (forall ((?v0 Nat$)) (= (fun_app$g (! (times$c one$a) :named @p_42) ?v0) ?v0)) :named @p_41))
(assume a36 (! (forall ((?v0 Nat_set$)) (= (fun_app$f (times$d ?v0) one$b) ?v0)) :named @p_43))
(assume a37 (! (forall ((?v0 Real_set$)) (= (fun_app$e (times$e ?v0) one$c) ?v0)) :named @p_44))
(assume a38 (! (forall ((?v0 Num1_bit0$)) (= (fun_app$a (times$a ?v0) one$d) ?v0)) :named @p_45))
(assume a39 (! (forall ((?v0 Real)) (= (* ?v0 1.0) ?v0)) :named @p_46))
(assume a40 (! (forall ((?v0 Nat$)) (= (fun_app$g (times$c ?v0) one$a) ?v0)) :named @p_47))
(assume a41 (! (forall ((?v0 Num1_bit0$)) (inj_on$a (uua$ ?v0) top$a)) :named @p_48))
(assume a42 (! (forall ((?v0 Real)) (inj_on$ (uub$ ?v0) top$)) :named @p_49))
(assume a43 (! (forall ((?v0 Num$) (?v1 Num$)) (= (= (numeral$ ?v0) (numeral$ ?v1)) (= ?v0 ?v1))) :named @p_50))
(assume a44 (! (forall ((?v0 Num$) (?v1 Num$)) (= (= (numeral$a ?v0) (numeral$a ?v1)) (= ?v0 ?v1))) :named @p_51))
(assume a45 (! (forall ((?v0 Num$) (?v1 Num$)) (= (= (bit0$ ?v0) (bit0$ ?v1)) (= ?v0 ?v1))) :named @p_52))
(assume a46 (! (forall ((?v0 Num$) (?v1 Num$)) (= (fun_app$h (times$b (bit0$ ?v0)) (bit0$ ?v1)) (bit0$ (bit0$ (fun_app$h (times$b ?v0) ?v1))))) :named @p_53))
(assume a47 (! (forall ((?v0 Num$)) (= (fun_app$h (times$b ?v0) one$) ?v0)) :named @p_54))
(assume a48 (! (forall ((?v0 Num$)) (= (fun_app$h (! (times$b one$) :named @p_56) ?v0) ?v0)) :named @p_55))
(assume a49 (! (forall ((?v0 Num$)) (= (fun_app$h (! (times$b (! (bit0$ one$) :named @p_59)) :named @p_58) ?v0) (bit0$ ?v0))) :named @p_57))
(assume a50 (! (= (! (numeral$a one$) :named @p_61) one$a) :named @p_60))
(assume a51 (! (forall ((?v0 Real_real_fun$) (?v1 Real_set$) (?v2 Real_set$)) (=> (inj_on$ ?v0 ?v1) (inj_on$ ?v0 (minus$a ?v1 ?v2)))) :named @p_62))
(assume a52 (! (forall ((?v0 Num1_bit0$)) (or (= ?v0 one$d) (= ?v0 (! (numeral$b @p_59) :named @p_64)))) :named @p_63))
(assume a53 (! (forall ((?v0 Num1_bit0_bool_fun$)) (= (forall ((?v1 Num1_bit0$)) (fun_app$i ?v0 ?v1)) (and (fun_app$i ?v0 one$d) (fun_app$i ?v0 @p_64)))) :named @p_65))
(assume a54 (! (forall ((?v0 Real) (?v1 Real) (?v2 Real)) (= (fun_app$ (times$ ?v0) (fun_app$ (times$ ?v1) ?v2)) (fun_app$ (times$ ?v1) (fun_app$ (times$ ?v0) ?v2)))) :named @p_66))
(assume a55 (! (forall ((?v0 Real) (?v1 Real) (?v2 Real)) (= (fun_app$ (times$ ?v0) (fun_app$ (times$ ?v1) ?v2)) (fun_app$ (times$ (fun_app$ (times$ ?v0) ?v1)) ?v2))) :named @p_67))
(assume a56 (! (forall ((?v0 Num1_bit0$) (?v1 Num1_bit0$) (?v2 Num1_bit0$)) (= (fun_app$a (times$a ?v0) (fun_app$a (times$a ?v1) ?v2)) (fun_app$a (times$a ?v1) (fun_app$a (times$a ?v0) ?v2)))) :named @p_68))
(assume a57 (! (forall ((?v0 Nat_set$) (?v1 Nat_set$) (?v2 Nat_set$)) (= (fun_app$f (times$d ?v0) (fun_app$f (times$d ?v1) ?v2)) (fun_app$f (times$d ?v1) (fun_app$f (times$d ?v0) ?v2)))) :named @p_69))
(assume a58 (! (forall ((?v0 Real_set$) (?v1 Real_set$) (?v2 Real_set$)) (= (fun_app$e (times$e ?v0) (fun_app$e (times$e ?v1) ?v2)) (fun_app$e (times$e ?v1) (fun_app$e (times$e ?v0) ?v2)))) :named @p_70))
(assume a59 (! (forall ((?v0 Nat$) (?v1 Nat$) (?v2 Nat$)) (= (fun_app$g (times$c ?v0) (fun_app$g (times$c ?v1) ?v2)) (fun_app$g (times$c ?v1) (fun_app$g (times$c ?v0) ?v2)))) :named @p_71))
(assume a60 (! (forall ((?v0 Num1_bit0$) (?v1 Num1_bit0$)) (= (fun_app$a (times$a ?v0) ?v1) (fun_app$a (times$a ?v1) ?v0))) :named @p_72))
(assume a61 (! (forall ((?v0 Nat_set$) (?v1 Nat_set$)) (= (fun_app$f (times$d ?v0) ?v1) (fun_app$f (times$d ?v1) ?v0))) :named @p_73))
(assume a62 (! (forall ((?v0 Real_set$) (?v1 Real_set$)) (= (fun_app$e (times$e ?v0) ?v1) (fun_app$e (times$e ?v1) ?v0))) :named @p_74))
(assume a63 (! (forall ((?v0 Real) (?v1 Real)) (= (fun_app$ (times$ ?v0) ?v1) (fun_app$ (times$ ?v1) ?v0))) :named @p_75))
(assume a64 (! (forall ((?v0 Nat$) (?v1 Nat$)) (= (fun_app$g (times$c ?v0) ?v1) (fun_app$g (times$c ?v1) ?v0))) :named @p_76))
(assume a65 (! (forall ((?v0 Num1_bit0$) (?v1 Num1_bit0$) (?v2 Num1_bit0$)) (= (fun_app$a (times$a (fun_app$a (times$a ?v0) ?v1)) ?v2) (fun_app$a (times$a ?v0) (fun_app$a (times$a ?v1) ?v2)))) :named @p_77))
(assume a66 (! (forall ((?v0 Nat_set$) (?v1 Nat_set$) (?v2 Nat_set$)) (= (fun_app$f (times$d (fun_app$f (times$d ?v0) ?v1)) ?v2) (fun_app$f (times$d ?v0) (fun_app$f (times$d ?v1) ?v2)))) :named @p_78))
(assume a67 (! (forall ((?v0 Real_set$) (?v1 Real_set$) (?v2 Real_set$)) (= (fun_app$e (times$e (fun_app$e (times$e ?v0) ?v1)) ?v2) (fun_app$e (times$e ?v0) (fun_app$e (times$e ?v1) ?v2)))) :named @p_79))
(assume a68 (! (forall ((?v0 Real) (?v1 Real) (?v2 Real)) (= (fun_app$ (times$ (fun_app$ (times$ ?v0) ?v1)) ?v2) (fun_app$ (times$ ?v0) (fun_app$ (times$ ?v1) ?v2)))) :named @p_80))
(assume a69 (! (forall ((?v0 Nat$) (?v1 Nat$) (?v2 Nat$)) (= (fun_app$g (times$c (fun_app$g (times$c ?v0) ?v1)) ?v2) (fun_app$g (times$c ?v0) (fun_app$g (times$c ?v1) ?v2)))) :named @p_81))
(assume a70 (! (forall ((?v0 Real)) (= (= 1.0 ?v0) (= ?v0 1.0))) :named @p_82))
(assume a71 (! (forall ((?v0 Nat$)) (= (= one$a ?v0) (= ?v0 one$a))) :named @p_83))
(assume a72 (! (forall ((?v0 Num1_bit0$)) (= (= one$d ?v0) (= ?v0 one$d))) :named @p_84))
(assume a73 (! (forall ((?v0 Num1_bit0$) (?v1 Num1_bit0$) (?v2 Num1_bit0$)) (= (minus$ (minus$ ?v0 ?v1) ?v2) (minus$ (minus$ ?v0 ?v2) ?v1))) :named @p_85))
(assume a74 (! (forall ((?v0 Real) (?v1 Real) (?v2 Real)) (= (- (- ?v0 ?v1) ?v2) (- (- ?v0 ?v2) ?v1))) :named @p_86))
(assume a75 (! (forall ((?v0 Nat$) (?v1 Nat$) (?v2 Nat$)) (= (minus$b (minus$b ?v0 ?v1) ?v2) (minus$b (minus$b ?v0 ?v2) ?v1))) :named @p_87))
(assume a76 (! (forall ((?v0 Num1_bit0$) (?v1 Num1_bit0$) (?v2 Num1_bit0$) (?v3 Num1_bit0$)) (=> (= (minus$ ?v0 ?v1) (minus$ ?v2 ?v3)) (= (= ?v0 ?v1) (= ?v2 ?v3)))) :named @p_88))
(assume a77 (! (forall ((?v0 Real) (?v1 Real) (?v2 Real) (?v3 Real)) (=> (= (- ?v0 ?v1) (- ?v2 ?v3)) (= (= ?v0 ?v1) (= ?v2 ?v3)))) :named @p_89))
(assume a78 (! (= (! (= one$ one$) :named @p_91) @p_14) :named @p_90))
(assume a79 (! (forall ((?v0 Real_set$) (?v1 Real_real_fun$) (?v2 Real_real_fun$)) (=> (forall ((?v3 Real)) (=> (member$ ?v3 ?v0) (= (fun_app$ ?v1 (fun_app$ ?v2 ?v3)) ?v3))) (inj_on$ ?v2 ?v0))) :named @p_92))
(assume a80 (! (forall ((?v0 Real_real_fun$) (?v1 Real_set$) (?v2 Real) (?v3 Real)) (=> (and (inj_on$ ?v0 ?v1) (and (not (= ?v2 ?v3)) (and (member$ ?v2 ?v1) (member$ ?v3 ?v1)))) (not (= (fun_app$ ?v0 ?v2) (fun_app$ ?v0 ?v3))))) :named @p_93))
(assume a81 (! (forall ((?v0 Real_real_fun$) (?v1 Real_set$) (?v2 Real) (?v3 Real)) (=> (and (inj_on$ ?v0 ?v1) (and (member$ ?v2 ?v1) (member$ ?v3 ?v1))) (= (= (fun_app$ ?v0 ?v2) (fun_app$ ?v0 ?v3)) (= ?v2 ?v3)))) :named @p_94))
(assume a82 (! (forall ((?v0 Real_set$) (?v1 Real_real_fun$) (?v2 Real_real_fun$)) (=> (forall ((?v3 Real)) (=> (member$ ?v3 ?v0) (= (fun_app$ ?v1 ?v3) (fun_app$ ?v2 ?v3)))) (= (inj_on$ ?v1 ?v0) (inj_on$ ?v2 ?v0)))) :named @p_95))
(assume a83 (! (forall ((?v0 Real_real_fun$) (?v1 Real_set$)) (= (inj_on$ ?v0 ?v1) (forall ((?v2 Real)) (=> (member$ ?v2 ?v1) (forall ((?v3 Real)) (=> (and (member$ ?v3 ?v1) (= (fun_app$ ?v0 ?v2) (fun_app$ ?v0 ?v3))) (= ?v2 ?v3))))))) :named @p_96))
(assume a84 (! (forall ((?v0 Real_set$) (?v1 Real_real_fun$)) (=> (forall ((?v2 Real) (?v3 Real)) (=> (and (member$ ?v2 ?v0) (and (member$ ?v3 ?v0) (= (fun_app$ ?v1 ?v2) (fun_app$ ?v1 ?v3)))) (= ?v2 ?v3))) (inj_on$ ?v1 ?v0))) :named @p_97))
(assume a85 (! (forall ((?v0 Real_real_fun$) (?v1 Real_set$) (?v2 Real) (?v3 Real)) (=> (and (inj_on$ ?v0 ?v1) (and (= (fun_app$ ?v0 ?v2) (fun_app$ ?v0 ?v3)) (and (member$ ?v2 ?v1) (member$ ?v3 ?v1)))) (= ?v2 ?v3))) :named @p_98))
(assume a86 (! (forall ((?v0 Real_set$)) (inj_on$ uuc$ ?v0)) :named @p_99))
(assume a87 (! (forall ((?v0 Nat$) (?v1 Nat_bool_fun$)) (= (member$b ?v0 (collect$ ?v1)) (fun_app$d ?v1 ?v0))) :named @p_100))
(assume a88 (! (forall ((?v0 Num$) (?v1 Num_bool_fun$)) (= (member$a ?v0 (collect$a ?v1)) (fun_app$c ?v1 ?v0))) :named @p_101))
(assume a89 (! (forall ((?v0 Real) (?v1 Real_bool_fun$)) (= (member$ ?v0 (collect$b ?v1)) (fun_app$b ?v1 ?v0))) :named @p_102))
(assume a90 (! (forall ((?v0 Nat_set$)) (= (collect$ (uud$ ?v0)) ?v0)) :named @p_103))
(assume a91 (! (forall ((?v0 Num_set$)) (= (collect$a (uue$ ?v0)) ?v0)) :named @p_104))
(assume a92 (! (forall ((?v0 Real_set$)) (= (collect$b (uuf$ ?v0)) ?v0)) :named @p_105))
(assume a93 (! (forall ((?v0 Real_bool_fun$) (?v1 Real_bool_fun$)) (=> (forall ((?v2 Real)) (= (fun_app$b ?v0 ?v2) (fun_app$b ?v1 ?v2))) (= (collect$b ?v0) (collect$b ?v1)))) :named @p_106))
(assume a94 (! (forall ((?v0 Real) (?v1 Real) (?v2 Real)) (= (fun_app$ (times$ ?v0) (- ?v1 ?v2)) (- (fun_app$ (times$ ?v0) ?v1) (fun_app$ (times$ ?v0) ?v2)))) :named @p_107))
(assume a95 (! (forall ((?v0 Real) (?v1 Real) (?v2 Real)) (= (fun_app$ (times$ (- ?v0 ?v1)) ?v2) (- (fun_app$ (times$ ?v0) ?v2) (fun_app$ (times$ ?v1) ?v2)))) :named @p_108))
(assume a96 (! (forall ((?v0 Real_real_fun$)) (= (inj_on$ ?v0 top$) (forall ((?v1 Real) (?v2 Real)) (=> (= (fun_app$ ?v0 ?v1) (fun_app$ ?v0 ?v2)) (= ?v1 ?v2))))) :named @p_109))
(assume a97 (! (forall ((?v0 Real_real_fun$) (?v1 Real) (?v2 Real)) (=> (inj_on$ ?v0 top$) (= (= (fun_app$ ?v0 ?v1) (fun_app$ ?v0 ?v2)) (= ?v1 ?v2)))) :named @p_110))
(assume a98 (! (forall ((?v0 Real_real_fun$)) (=> (forall ((?v1 Real) (?v2 Real)) (=> (= (fun_app$ ?v0 ?v1) (fun_app$ ?v0 ?v2)) (= ?v1 ?v2))) (inj_on$ ?v0 top$))) :named @p_111))
(assume a99 (! (forall ((?v0 Real_real_fun$) (?v1 Real) (?v2 Real)) (=> (and (inj_on$ ?v0 top$) (= (fun_app$ ?v0 ?v1) (fun_app$ ?v0 ?v2))) (= ?v1 ?v2))) :named @p_112))
(assume a100 (! (forall ((?v0 Nat$)) (= (fun_app$g (times$c ?v0) @p_61) ?v0)) :named @p_113))
(assume a101 (! (forall ((?v0 Num1_bit0$)) (= (fun_app$a (times$a ?v0) (! (numeral$b one$) :named @p_115)) ?v0)) :named @p_114))
(assume a102 (! (forall ((?v0 Nat$)) (= (fun_app$g (! (times$c @p_61) :named @p_117) ?v0) ?v0)) :named @p_116))
(assume a103 (! (forall ((?v0 Num1_bit0$)) (= (fun_app$a (! (times$a @p_115) :named @p_119) ?v0) ?v0)) :named @p_118))
(assume a104 (! (= 1.0 1.0) :named @p_120))
(assume a105 (! (= @p_115 one$d) :named @p_121))
(assume a106 (! (= (! (fun_app$ dbl$ 1.0) :named @p_123) 2.0) :named @p_122))
(assume a107 (! (= (! (dbl$a one$d) :named @p_125) @p_64) :named @p_124))
(assume a108 (! (forall ((?v0 Real)) (= (fun_app$ x_coord$ (fun_app$ x_coord_inv$ ?v0)) ?v0)) :named @p_126))
(assume a109 (! (forall ((?v0 Real)) (= (fun_app$ x_coord_inv$ (fun_app$ x_coord$ ?v0)) ?v0)) :named @p_127))
(assume a110 (! (forall ((?v0 Nat$)) (= (member$b ?v0 top$b) @p_14)) :named @p_128))
(assume a111 (! (forall ((?v0 Num$)) (= (member$a ?v0 top$c) @p_14)) :named @p_129))
(assume a112 (! (forall ((?v0 Real)) (= (member$ ?v0 top$) @p_14)) :named @p_130))
(assume a113 (! (forall ((?v0 Nat$)) (member$b ?v0 top$b)) :named @p_131))
(assume a114 (! (forall ((?v0 Num$)) (member$a ?v0 top$c)) :named @p_132))
(assume a115 (! (forall ((?v0 Real)) (member$ ?v0 top$)) :named @p_133))
(assume a116 (! (forall ((?v0 Real)) (= (fun_app$b top$d ?v0) top$e)) :named @p_134))
(assume a117 (! (forall ((?v0 Num1_bit0$) (?v1 Num1_bit0_set$) (?v2 Num1_bit0$) (?v3 Num1_bit0_set$)) (=> (and (member$c ?v0 ?v1) (member$c ?v2 ?v3)) (member$c (fun_app$a (times$a ?v0) ?v2) (times$f ?v1 ?v3)))) :named @p_135))
(assume a118 (! (forall ((?v0 Nat_set$) (?v1 Nat_set_set$) (?v2 Nat_set$) (?v3 Nat_set_set$)) (=> (and (member$d ?v0 ?v1) (member$d ?v2 ?v3)) (member$d (fun_app$f (times$d ?v0) ?v2) (times$g ?v1 ?v3)))) :named @p_136))
(assume a119 (! (forall ((?v0 Num_set$) (?v1 Num_set_set$) (?v2 Num_set$) (?v3 Num_set_set$)) (=> (and (member$e ?v0 ?v1) (member$e ?v2 ?v3)) (member$e (times$h ?v0 ?v2) (times$i ?v1 ?v3)))) :named @p_137))
(assume a120 (! (forall ((?v0 Real_set$) (?v1 Real_set_set$) (?v2 Real_set$) (?v3 Real_set_set$)) (=> (and (member$f ?v0 ?v1) (member$f ?v2 ?v3)) (member$f (fun_app$e (times$e ?v0) ?v2) (times$j ?v1 ?v3)))) :named @p_138))
(assume a121 (! (forall ((?v0 Real) (?v1 Real_set$) (?v2 Real) (?v3 Real_set$)) (=> (and (member$ ?v0 ?v1) (member$ ?v2 ?v3)) (member$ (fun_app$ (times$ ?v0) ?v2) (fun_app$e (times$e ?v1) ?v3)))) :named @p_139))
(assume a122 (! (forall ((?v0 Num$) (?v1 Num_set$) (?v2 Num$) (?v3 Num_set$)) (=> (and (member$a ?v0 ?v1) (member$a ?v2 ?v3)) (member$a (fun_app$h (times$b ?v0) ?v2) (times$h ?v1 ?v3)))) :named @p_140))
(assume a123 (! (forall ((?v0 Nat$) (?v1 Nat_set$) (?v2 Nat$) (?v3 Nat_set$)) (=> (and (member$b ?v0 ?v1) (member$b ?v2 ?v3)) (member$b (fun_app$g (times$c ?v0) ?v2) (fun_app$f (times$d ?v1) ?v3)))) :named @p_141))
(assume a124 (! (= uug$ @p_35) :named @p_142))
(assume a125 (! (= uuh$ @p_37) :named @p_143))
(assume a126 (! (= uui$ @p_39) :named @p_144))
(assume a127 (! (= uuc$ uuj$) :named @p_145))
(assume a128 (! (= uuk$ @p_42) :named @p_146))
(assume a129 (! (forall ((?v0 Num$)) (not (= one$ (bit0$ ?v0)))) :named @p_147))
(assume a130 (! (forall ((?v0 Nat$) (?v1 Nat_set$) (?v2 Nat_set$)) (=> (and (member$b ?v0 ?v1) (not (member$b ?v0 ?v2))) (member$b ?v0 (minus$c ?v1 ?v2)))) :named @p_148))
(assume a131 (! (forall ((?v0 Num$) (?v1 Num_set$) (?v2 Num_set$)) (=> (and (member$a ?v0 ?v1) (not (member$a ?v0 ?v2))) (member$a ?v0 (minus$d ?v1 ?v2)))) :named @p_149))
(assume a132 (! (forall ((?v0 Real) (?v1 Real_set$) (?v2 Real_set$)) (=> (and (member$ ?v0 ?v1) (not (member$ ?v0 ?v2))) (member$ ?v0 (minus$a ?v1 ?v2)))) :named @p_150))
(assume a133 (! (forall ((?v0 Nat$) (?v1 Nat_set$) (?v2 Nat_set$)) (= (member$b ?v0 (minus$c ?v1 ?v2)) (and (member$b ?v0 ?v1) (not (member$b ?v0 ?v2))))) :named @p_151))
(assume a134 (! (forall ((?v0 Num$) (?v1 Num_set$) (?v2 Num_set$)) (= (member$a ?v0 (minus$d ?v1 ?v2)) (and (member$a ?v0 ?v1) (not (member$a ?v0 ?v2))))) :named @p_152))
(assume a135 (! (forall ((?v0 Real) (?v1 Real_set$) (?v2 Real_set$)) (= (member$ ?v0 (minus$a ?v1 ?v2)) (and (member$ ?v0 ?v1) (not (member$ ?v0 ?v2))))) :named @p_153))
(assume a136 (! (forall ((?v0 Real_set$) (?v1 Real_set$)) (= (minus$a (minus$a ?v0 ?v1) ?v1) (minus$a ?v0 ?v1))) :named @p_154))
(assume a137 (! (forall ((?v0 Num$)) (= (fun_app$ dbl$ (numeral$ ?v0)) (numeral$ (bit0$ ?v0)))) :named @p_155))
(assume a138 (! (forall ((?v0 Num$)) (= (dbl$a (numeral$b ?v0)) (numeral$b (bit0$ ?v0)))) :named @p_156))
(assume a139 (! (= top$ (! (collect$b top$d) :named @p_158)) :named @p_157))
(assume a140 (! (forall ((?v0 Real) (?v1 Real_set$) (?v2 Real_set$)) (=> (and (member$ ?v0 (fun_app$e (times$e ?v1) ?v2)) (forall ((?v3 Real) (?v4 Real)) (=> (and (= ?v0 (fun_app$ (times$ ?v3) ?v4)) (and (member$ ?v3 ?v1) (member$ ?v4 ?v2))) @p_26))) @p_26)) :named @p_159))
(assume a141 (! (forall ((?v0 Num$) (?v1 Num_set$) (?v2 Num_set$)) (=> (and (member$a ?v0 (times$h ?v1 ?v2)) (forall ((?v3 Num$) (?v4 Num$)) (=> (and (= ?v0 (fun_app$h (times$b ?v3) ?v4)) (and (member$a ?v3 ?v1) (member$a ?v4 ?v2))) @p_26))) @p_26)) :named @p_160))
(assume a142 (! (forall ((?v0 Nat$) (?v1 Nat_set$) (?v2 Nat_set$)) (=> (and (member$b ?v0 (fun_app$f (times$d ?v1) ?v2)) (forall ((?v3 Nat$) (?v4 Nat$)) (=> (and (= ?v0 (fun_app$g (times$c ?v3) ?v4)) (and (member$b ?v3 ?v1) (member$b ?v4 ?v2))) @p_26))) @p_26)) :named @p_161))
(assume a143 (! (forall ((?v0 Real_set$)) (=> (forall ((?v1 Real)) (member$ ?v1 ?v0)) (= top$ ?v0))) :named @p_162))
(assume a144 (! (exists ((?v0 Real)) (member$ ?v0 top$)) :named @p_163))
(assume a145 (! (= top$ (! (collect$b uul$) :named @p_165)) :named @p_164))
(assume a146 (! (forall ((?v0 Nat$) (?v1 Nat$) (?v2 Nat$)) (= (fun_app$g (times$c (minus$b ?v0 ?v1)) ?v2) (minus$b (fun_app$g (times$c ?v0) ?v2) (fun_app$g (times$c ?v1) ?v2)))) :named @p_166))
(assume a147 (! (forall ((?v0 Nat$) (?v1 Nat$) (?v2 Nat$)) (= (fun_app$g (times$c ?v0) (minus$b ?v1 ?v2)) (minus$b (fun_app$g (times$c ?v0) ?v1) (fun_app$g (times$c ?v0) ?v2)))) :named @p_167))
(assume a148 (! (forall ((?v0 Nat$) (?v1 Nat$)) (= (= one$a (fun_app$g (times$c ?v0) ?v1)) (and (= ?v0 one$a) (= ?v1 one$a)))) :named @p_168))
(assume a149 (! (forall ((?v0 Nat$) (?v1 Nat$)) (= (= (fun_app$g (times$c ?v0) ?v1) one$a) (and (= ?v0 one$a) (= ?v1 one$a)))) :named @p_169))
(assume a150 (! (forall ((?v0 Real_bool_fun$) (?v1 Real) (?v2 Real_bool_fun$)) (=> (and (forall ((?v3 Real) (?v4 Real)) (= (fun_app$b ?v0 ?v3) (fun_app$b ?v0 (- ?v3 (fun_app$ (times$ ?v4) ?v1))))) (forall ((?v3 Real) (?v4 Real)) (= (fun_app$b ?v2 ?v3) (fun_app$b ?v2 (- ?v3 (fun_app$ (times$ ?v4) ?v1)))))) (forall ((?v3 Real) (?v4 Real)) (= (or (fun_app$b ?v0 ?v3) (fun_app$b ?v2 ?v3)) (or (fun_app$b ?v0 (- ?v3 (fun_app$ (times$ ?v4) ?v1))) (fun_app$b ?v2 (- ?v3 (fun_app$ (times$ ?v4) ?v1)))))))) :named @p_170))
(assume a151 (! (forall ((?v0 Real_bool_fun$) (?v1 Real) (?v2 Real_bool_fun$)) (=> (and (forall ((?v3 Real) (?v4 Real)) (= (fun_app$b ?v0 ?v3) (fun_app$b ?v0 (- ?v3 (fun_app$ (times$ ?v4) ?v1))))) (forall ((?v3 Real) (?v4 Real)) (= (fun_app$b ?v2 ?v3) (fun_app$b ?v2 (- ?v3 (fun_app$ (times$ ?v4) ?v1)))))) (forall ((?v3 Real) (?v4 Real)) (= (and (fun_app$b ?v0 ?v3) (fun_app$b ?v2 ?v3)) (and (fun_app$b ?v0 (- ?v3 (fun_app$ (times$ ?v4) ?v1))) (fun_app$b ?v2 (- ?v3 (fun_app$ (times$ ?v4) ?v1)))))))) :named @p_171))
(assume a152 (! (= (! (fun_app$ dbl$ (! (- 1.0) :named @p_174)) :named @p_173) (! (- 2.0) :named @p_175)) :named @p_172))
(assume a153 (! (= (! (dbl$a (! (uminus$ one$d) :named @p_178)) :named @p_177) (! (uminus$ @p_64) :named @p_179)) :named @p_176))
(assume a154 (! (= (! (- 1.0 @p_174) :named @p_181) 2.0) :named @p_180))
(assume a155 (! (= (! (minus$ one$d @p_178) :named @p_183) @p_64) :named @p_182))
(assume a156 (! (forall ((?v0 Real) (?v1 Real)) (= (fun_app$ (times$ ?v0) (- ?v1)) (- (fun_app$ (times$ ?v0) ?v1)))) :named @p_184))
(assume a157 (! (forall ((?v0 Real) (?v1 Real)) (= (fun_app$ (times$ (- ?v0)) ?v1) (- (fun_app$ (times$ ?v0) ?v1)))) :named @p_185))
(assume a158 (! (forall ((?v0 Real) (?v1 Real)) (= (fun_app$ (times$ (- ?v0)) (- ?v1)) (fun_app$ (times$ ?v0) ?v1))) :named @p_186))
(assume a159 (! (forall ((?v0 Real) (?v1 Real)) (= (- (- ?v0 ?v1)) (- ?v1 ?v0))) :named @p_187))
(assume a160 (! (forall ((?v0 Num$) (?v1 Num$)) (= (= (- (numeral$ ?v0)) (- (numeral$ ?v1))) (= ?v0 ?v1))) :named @p_188))
(assume a161 (! (forall ((?v0 Real_set$)) (inj_on$ uum$ ?v0)) :named @p_189))
(assume a162 (! (forall ((?v0 Num1_bit0$)) (= (fun_app$a (times$a ?v0) @p_178) (uminus$ ?v0))) :named @p_190))
(assume a163 (! (forall ((?v0 Real)) (= (* ?v0 @p_174) (- ?v0))) :named @p_191))
(assume a164 (! (forall ((?v0 Num1_bit0$)) (= (fun_app$a (! (times$a @p_178) :named @p_193) ?v0) (uminus$ ?v0))) :named @p_192))
(assume a165 (! (forall ((?v0 Real)) (= (* @p_174 ?v0) (- ?v0))) :named @p_194))
(assume a166 (! (forall ((?v0 Num$)) (= (fun_app$ dbl$ (- (numeral$ ?v0))) (- (fun_app$ dbl$ (numeral$ ?v0))))) :named @p_195))
(assume a167 (! (forall ((?v0 Num$)) (= (dbl$a (uminus$ (numeral$b ?v0))) (uminus$ (dbl$a (numeral$b ?v0))))) :named @p_196))
(assume a168 (! (forall ((?v0 Num$)) (= (= (- (numeral$ ?v0)) @p_174) (= ?v0 one$))) :named @p_197))
(assume a169 (! (forall ((?v0 Num$)) (= (= @p_174 (- (numeral$ ?v0))) (= ?v0 one$))) :named @p_198))
(assume a170 (! (forall ((?v0 Num$) (?v1 Num$)) (= (fun_app$ (times$ (- (numeral$ ?v0))) (- (numeral$ ?v1))) (numeral$ (fun_app$h (times$b ?v0) ?v1)))) :named @p_199))
(assume a171 (! (forall ((?v0 Num$) (?v1 Num$)) (= (fun_app$a (times$a (uminus$ (numeral$b ?v0))) (uminus$ (numeral$b ?v1))) (numeral$b (fun_app$h (times$b ?v0) ?v1)))) :named @p_200))
(assume a172 (! (forall ((?v0 Num$) (?v1 Num$)) (= (fun_app$ (times$ (- (numeral$ ?v0))) (numeral$ ?v1)) (- (numeral$ (fun_app$h (times$b ?v0) ?v1))))) :named @p_201))
(assume a173 (! (forall ((?v0 Num$) (?v1 Num$)) (= (fun_app$a (times$a (uminus$ (numeral$b ?v0))) (numeral$b ?v1)) (uminus$ (numeral$b (fun_app$h (times$b ?v0) ?v1))))) :named @p_202))
(assume a174 (! (forall ((?v0 Num$) (?v1 Num$)) (= (fun_app$ (times$ (numeral$ ?v0)) (- (numeral$ ?v1))) (- (numeral$ (fun_app$h (times$b ?v0) ?v1))))) :named @p_203))
(assume a175 (! (forall ((?v0 Num$) (?v1 Num$)) (= (fun_app$a (times$a (numeral$b ?v0)) (uminus$ (numeral$b ?v1))) (uminus$ (numeral$b (fun_app$h (times$b ?v0) ?v1))))) :named @p_204))
(assume a176 (! (forall ((?v0 Num$) (?v1 Num$) (?v2 Real)) (= (fun_app$ (times$ (- (numeral$ ?v0))) (fun_app$ (times$ (numeral$ ?v1)) ?v2)) (fun_app$ (times$ (- (numeral$ (fun_app$h (times$b ?v0) ?v1)))) ?v2))) :named @p_205))
(assume a177 (! (forall ((?v0 Num$) (?v1 Num$) (?v2 Num1_bit0$)) (= (fun_app$a (times$a (uminus$ (numeral$b ?v0))) (fun_app$a (times$a (numeral$b ?v1)) ?v2)) (fun_app$a (times$a (uminus$ (numeral$b (fun_app$h (times$b ?v0) ?v1)))) ?v2))) :named @p_206))
(assume a178 (! (forall ((?v0 Num$) (?v1 Num$) (?v2 Real)) (= (fun_app$ (times$ (numeral$ ?v0)) (fun_app$ (times$ (- (numeral$ ?v1))) ?v2)) (fun_app$ (times$ (- (numeral$ (fun_app$h (times$b ?v0) ?v1)))) ?v2))) :named @p_207))
(assume a179 (! (forall ((?v0 Num$) (?v1 Num$) (?v2 Num1_bit0$)) (= (fun_app$a (times$a (numeral$b ?v0)) (fun_app$a (times$a (uminus$ (numeral$b ?v1))) ?v2)) (fun_app$a (times$a (uminus$ (numeral$b (fun_app$h (times$b ?v0) ?v1)))) ?v2))) :named @p_208))
(assume a180 (! (forall ((?v0 Num$) (?v1 Num$) (?v2 Real)) (= (fun_app$ (times$ (- (numeral$ ?v0))) (fun_app$ (times$ (- (numeral$ ?v1))) ?v2)) (fun_app$ (times$ (numeral$ (fun_app$h (times$b ?v0) ?v1))) ?v2))) :named @p_209))
(assume a181 (! (forall ((?v0 Num$) (?v1 Num$) (?v2 Num1_bit0$)) (= (fun_app$a (times$a (uminus$ (numeral$b ?v0))) (fun_app$a (times$a (uminus$ (numeral$b ?v1))) ?v2)) (fun_app$a (times$a (numeral$b (fun_app$h (times$b ?v0) ?v1))) ?v2))) :named @p_210))
(assume a182 (! (= (! (- @p_174 1.0) :named @p_212) @p_175) :named @p_211))
(assume a183 (! (= (! (minus$ @p_178 one$d) :named @p_214) @p_179) :named @p_213))
(assume a184 (! (forall ((?v0 Real) (?v1 Real)) (= (fun_app$ (times$ (- ?v0)) ?v1) (fun_app$ (times$ ?v0) (- ?v1)))) :named @p_215))
(assume a185 (! (forall ((?v0 Real) (?v1 Real)) (= (= (fun_app$ (times$ ?v0) ?v0) (fun_app$ (times$ ?v1) ?v1)) (or (= ?v0 ?v1) (= ?v0 (- ?v1))))) :named @p_216))
(assume a186 (! (not (! (= 1.0 @p_174) :named @p_218)) :named @p_217))
(assume a187 (! (forall ((?v0 Real) (?v1 Real)) (= (- (- ?v0) ?v1) (- (- ?v1) ?v0))) :named @p_219))
(assume a188 (! (forall ((?v0 Num$) (?v1 Num$)) (not (= (numeral$ ?v0) (- (numeral$ ?v1))))) :named @p_220))
(assume a189 (! (forall ((?v0 Num$) (?v1 Num$)) (not (= (- (numeral$ ?v0)) (numeral$ ?v1)))) :named @p_221))
(assume a190 (! (forall ((?v0 Real)) (= (= (fun_app$ (times$ ?v0) ?v0) 1.0) (or (= ?v0 1.0) (= ?v0 @p_174)))) :named @p_222))
(assume a191 (! (forall ((?v0 Num$) (?v1 Real)) (= (fun_app$ (times$ (numeral$ ?v0)) (- ?v1)) (fun_app$ (times$ ?v1) (- (numeral$ ?v0))))) :named @p_223))
(assume a192 (! (forall ((?v0 Num$) (?v1 Num1_bit0$)) (= (fun_app$a (times$a (numeral$b ?v0)) (uminus$ ?v1)) (fun_app$a (times$a ?v1) (uminus$ (numeral$b ?v0))))) :named @p_224))
(assume a193 (! (forall ((?v0 Num$)) (not (= 1.0 (- (numeral$ ?v0))))) :named @p_225))
(assume a194 (! (forall ((?v0 Num$)) (not (= (numeral$ ?v0) @p_174))) :named @p_226))
(assume a195 (! (forall ((?v0 Real_set$)) (= (uminus$a ?v0) (minus$a top$ ?v0))) :named @p_227))
(assume a196 (! (forall ((?v0 Num1_bit0$)) (= (fun_app$a (! (times$a (! (uminus$ @p_115) :named @p_230)) :named @p_229) ?v0) (uminus$ ?v0))) :named @p_228))
(assume a197 (! (forall ((?v0 Num1_bit0$)) (= (fun_app$a (times$a ?v0) @p_230) (uminus$ ?v0))) :named @p_231))
(assume a198 (! (= @p_174 @p_174) :named @p_232))
(assume a199 (! (= @p_230 @p_178) :named @p_233))
(assume a200 (! (forall ((?v0 Real)) (= (fun_app$b top$d ?v0) (member$ ?v0 top$))) :named @p_234))
(assume a201 (! (forall ((?v0 Num$)) (= (- @p_174 (numeral$ ?v0)) (- (numeral$ (inc$ ?v0))))) :named @p_235))
(assume a202 (! (forall ((?v0 Num$)) (= (minus$ @p_178 (numeral$b ?v0)) (uminus$ (numeral$b (inc$ ?v0))))) :named @p_236))
(assume a203 (! (forall ((?v0 Num$)) (= (- (numeral$ ?v0) @p_174) (numeral$ (inc$ ?v0)))) :named @p_237))
(assume a204 (! (forall ((?v0 Num$)) (= (minus$ (numeral$b ?v0) @p_178) (numeral$b (inc$ ?v0)))) :named @p_238))
(assume a205 (! (forall ((?v0 Num$)) (= (- (- (sub$ ?v0 one$)) 1.0) (- (numeral$ ?v0)))) :named @p_239))
(assume a206 (! (forall ((?v0 Num$)) (= (minus$ (uminus$ (sub$a ?v0 one$)) one$d) (uminus$ (numeral$b ?v0)))) :named @p_240))
(assume a207 (! (forall ((?v0 Num$) (?v1 Num$)) (= (- (numeral$ ?v0) (numeral$ ?v1)) (sub$ ?v0 ?v1))) :named @p_241))
(assume a208 (! (forall ((?v0 Num$) (?v1 Num$)) (= (minus$ (numeral$b ?v0) (numeral$b ?v1)) (sub$a ?v0 ?v1))) :named @p_242))
(assume a209 (! (forall ((?v0 Num$) (?v1 Num$)) (= (- (- (numeral$ ?v0)) (- (numeral$ ?v1))) (sub$ ?v1 ?v0))) :named @p_243))
(assume a210 (! (forall ((?v0 Num$) (?v1 Num$)) (= (minus$ (uminus$ (numeral$b ?v0)) (uminus$ (numeral$b ?v1))) (sub$a ?v1 ?v0))) :named @p_244))
(assume a211 (! (forall ((?v0 Num$)) (= (- (numeral$ ?v0) 1.0) (sub$ ?v0 one$))) :named @p_245))
(assume a212 (! (forall ((?v0 Num$)) (= (minus$ (numeral$b ?v0) one$d) (sub$a ?v0 one$))) :named @p_246))
(assume a213 (! (forall ((?v0 Num$)) (= (- 1.0 (numeral$ ?v0)) (sub$ one$ ?v0))) :named @p_247))
(assume a214 (! (forall ((?v0 Num$)) (= (minus$ one$d (numeral$b ?v0)) (sub$a one$ ?v0))) :named @p_248))
(assume a215 (! (forall ((?v0 Num$)) (= (- (- (numeral$ ?v0)) @p_174) (sub$ one$ ?v0))) :named @p_249))
(assume a216 (! (forall ((?v0 Num$)) (= (minus$ (uminus$ (numeral$b ?v0)) @p_178) (sub$a one$ ?v0))) :named @p_250))
(assume a217 (! (forall ((?v0 Num$)) (= (- @p_174 (- (numeral$ ?v0))) (sub$ ?v0 one$))) :named @p_251))
(assume a218 (! (forall ((?v0 Num$)) (= (minus$ @p_178 (uminus$ (numeral$b ?v0))) (sub$a ?v0 one$))) :named @p_252))
(assume a219 (! (forall ((?v0 Num$)) (= (sub$ (inc$ ?v0) one$) (numeral$ ?v0))) :named @p_253))
(assume a220 (! (forall ((?v0 Num$)) (= (sub$a (inc$ ?v0) one$) (numeral$b ?v0))) :named @p_254))
(assume a221 (! (forall ((?v0 Num_bool_fun$) (?v1 Num$)) (=> (and (fun_app$c ?v0 one$) (forall ((?v2 Num$)) (=> (fun_app$c ?v0 ?v2) (fun_app$c ?v0 (inc$ ?v2))))) (fun_app$c ?v0 ?v1))) :named @p_255))
(assume a222 (! (forall ((?v0 Num$) (?v1 Num$)) (= (sub$ ?v0 ?v1) (- (numeral$ ?v0) (numeral$ ?v1)))) :named @p_256))
(assume a223 (! (forall ((?v0 Num$) (?v1 Num$)) (= (sub$a ?v0 ?v1) (minus$ (numeral$b ?v0) (numeral$b ?v1)))) :named @p_257))
(assume a224 (! (= (! (inc$ one$) :named @p_259) @p_59) :named @p_258))
(assume a225 (! (forall ((?v0 Num$)) (= (sub$ one$ (bit0$ ?v0)) (- (numeral$ (bitM$ ?v0))))) :named @p_260))
(assume a226 (! (forall ((?v0 Num$)) (= (sub$a one$ (bit0$ ?v0)) (uminus$ (numeral$b (bitM$ ?v0))))) :named @p_261))
(assume a227 (! (forall ((?v0 Num$)) (= (sub$ (bit0$ ?v0) one$) (numeral$ (bitM$ ?v0)))) :named @p_262))
(assume a228 (! (forall ((?v0 Num$)) (= (sub$a (bit0$ ?v0) one$) (numeral$b (bitM$ ?v0)))) :named @p_263))
(assume a229 (! (forall ((?v0 Real) (?v1 Real)) (= (- (- ?v0) (- ?v1)) (- (- ?v0 ?v1)))) :named @p_264))
(assume a230 (! (= (! (bitM$ one$) :named @p_266) one$) :named @p_265))
(assume a231 (! (forall ((?v0 Num$)) (= (inc$ (bitM$ ?v0)) (bit0$ ?v0))) :named @p_267))
(assume a232 (! (forall ((?v0 Num$)) (= (numeral$ (bitM$ ?v0)) (- (numeral$ (bit0$ ?v0)) 1.0))) :named @p_268))
(assume a233 (! (forall ((?v0 Num$)) (= (numeral$b (bitM$ ?v0)) (minus$ (numeral$b (bit0$ ?v0)) one$d))) :named @p_269))
(assume a234 (! (forall ((?v0 Num$)) (= (fun_app$ dbl_dec$ (numeral$ ?v0)) (numeral$ (bitM$ ?v0)))) :named @p_270))
(assume a235 (! (forall ((?v0 Num$)) (= (dbl_dec$a (numeral$b ?v0)) (numeral$b (bitM$ ?v0)))) :named @p_271))
(assume a236 (! (forall ((?v0 Num$)) (= (+ @p_174 (numeral$ ?v0)) (sub$ ?v0 one$))) :named @p_272))
(assume a237 (! (forall ((?v0 Num$)) (= (plus$ @p_178 (numeral$b ?v0)) (sub$a ?v0 one$))) :named @p_273))
(assume a238 (! (forall ((?v0 Nat$) (?v1 Nat$) (?v2 Nat$)) (= (= (plus$a ?v0 ?v1) (plus$a ?v0 ?v2)) (= ?v1 ?v2))) :named @p_274))
(assume a239 (! (forall ((?v0 Nat$) (?v1 Nat$) (?v2 Nat$)) (= (= (plus$a ?v0 ?v1) (plus$a ?v2 ?v1)) (= ?v0 ?v2))) :named @p_275))
(assume a240 (! (forall ((?v0 Num$) (?v1 Num_set$) (?v2 Num$) (?v3 Num_set$)) (=> (and (member$a ?v0 ?v1) (member$a ?v2 ?v3)) (member$a (plus$b ?v0 ?v2) (plus$c ?v1 ?v3)))) :named @p_276))
(assume a241 (! (forall ((?v0 Nat$) (?v1 Nat_set$) (?v2 Nat$) (?v3 Nat_set$)) (=> (and (member$b ?v0 ?v1) (member$b ?v2 ?v3)) (member$b (plus$a ?v0 ?v2) (plus$d ?v1 ?v3)))) :named @p_277))
(assume a242 (! (forall ((?v0 Num$) (?v1 Num$)) (= (plus$b (bit0$ ?v0) (bit0$ ?v1)) (bit0$ (plus$b ?v0 ?v1)))) :named @p_278))
(assume a243 (! (forall ((?v0 Nat$) (?v1 Nat$) (?v2 Nat$)) (= (minus$b (minus$b ?v0 ?v1) ?v2) (minus$b ?v0 (plus$a ?v1 ?v2)))) :named @p_279))
(assume a244 (! (forall ((?v0 Real) (?v1 Real)) (= (- (+ ?v0 ?v1) ?v1) ?v0)) :named @p_280))
(assume a245 (! (forall ((?v0 Nat$) (?v1 Nat$)) (= (minus$b (plus$a ?v0 ?v1) ?v1) ?v0)) :named @p_281))
(assume a246 (! (forall ((?v0 Real) (?v1 Real) (?v2 Real)) (= (- (+ ?v0 ?v1) (+ ?v2 ?v1)) (- ?v0 ?v2))) :named @p_282))
(assume a247 (! (forall ((?v0 Nat$) (?v1 Nat$) (?v2 Nat$)) (= (minus$b (plus$a ?v0 ?v1) (plus$a ?v2 ?v1)) (minus$b ?v0 ?v2))) :named @p_283))
(assume a248 (! (forall ((?v0 Real) (?v1 Real)) (= (- (+ ?v0 ?v1) ?v0) ?v1)) :named @p_284))
(assume a249 (! (forall ((?v0 Nat$) (?v1 Nat$)) (= (minus$b (plus$a ?v0 ?v1) ?v0) ?v1)) :named @p_285))
(assume a250 (! (forall ((?v0 Real) (?v1 Real) (?v2 Real)) (= (- (+ ?v0 ?v1) (+ ?v0 ?v2)) (- ?v1 ?v2))) :named @p_286))
(assume a251 (! (forall ((?v0 Nat$) (?v1 Nat$) (?v2 Nat$)) (= (minus$b (plus$a ?v0 ?v1) (plus$a ?v0 ?v2)) (minus$b ?v1 ?v2))) :named @p_287))
(assume a252 (! (forall ((?v0 Real) (?v1 Real)) (= (+ (- ?v0 ?v1) ?v1) ?v0)) :named @p_288))
(assume a253 (! (forall ((?v0 Num$) (?v1 Num$) (?v2 Real)) (= (+ (numeral$ ?v0) (+ (numeral$ ?v1) ?v2)) (+ (numeral$ (plus$b ?v0 ?v1)) ?v2))) :named @p_289))
(assume a254 (! (forall ((?v0 Num$) (?v1 Num$) (?v2 Nat$)) (= (plus$a (numeral$a ?v0) (plus$a (numeral$a ?v1) ?v2)) (plus$a (numeral$a (plus$b ?v0 ?v1)) ?v2))) :named @p_290))
(assume a255 (! (forall ((?v0 Num$) (?v1 Num$) (?v2 Num1_bit0$)) (= (plus$ (numeral$b ?v0) (plus$ (numeral$b ?v1) ?v2)) (plus$ (numeral$b (plus$b ?v0 ?v1)) ?v2))) :named @p_291))
(assume a256 (! (forall ((?v0 Num$) (?v1 Num$)) (= (+ (numeral$ ?v0) (numeral$ ?v1)) (numeral$ (plus$b ?v0 ?v1)))) :named @p_292))
(assume a257 (! (forall ((?v0 Num$) (?v1 Num$)) (= (plus$a (numeral$a ?v0) (numeral$a ?v1)) (numeral$a (plus$b ?v0 ?v1)))) :named @p_293))
(assume a258 (! (forall ((?v0 Num$) (?v1 Num$)) (= (plus$ (numeral$b ?v0) (numeral$b ?v1)) (numeral$b (plus$b ?v0 ?v1)))) :named @p_294))
(assume a259 (! (= (! (plus$b one$ one$) :named @p_296) @p_59) :named @p_295))
(assume a260 (! (= (! (fun_app$ dbl_dec$ 1.0) :named @p_298) 1.0) :named @p_297))
(assume a261 (! (= (! (dbl_dec$a one$d) :named @p_300) one$d) :named @p_299))
(assume a262 (! (forall ((?v0 Real) (?v1 Real) (?v2 Num$)) (= (fun_app$ (times$ (+ ?v0 ?v1)) (numeral$ ?v2)) (+ (fun_app$ (times$ ?v0) (numeral$ ?v2)) (fun_app$ (times$ ?v1) (numeral$ ?v2))))) :named @p_301))
(assume a263 (! (forall ((?v0 Nat$) (?v1 Nat$) (?v2 Num$)) (= (fun_app$g (times$c (plus$a ?v0 ?v1)) (numeral$a ?v2)) (plus$a (fun_app$g (times$c ?v0) (numeral$a ?v2)) (fun_app$g (times$c ?v1) (numeral$a ?v2))))) :named @p_302))
(assume a264 (! (forall ((?v0 Num1_bit0$) (?v1 Num1_bit0$) (?v2 Num$)) (= (fun_app$a (times$a (plus$ ?v0 ?v1)) (numeral$b ?v2)) (plus$ (fun_app$a (times$a ?v0) (numeral$b ?v2)) (fun_app$a (times$a ?v1) (numeral$b ?v2))))) :named @p_303))
(assume a265 (! (forall ((?v0 Num$) (?v1 Real) (?v2 Real)) (= (fun_app$ (times$ (numeral$ ?v0)) (+ ?v1 ?v2)) (+ (fun_app$ (times$ (numeral$ ?v0)) ?v1) (fun_app$ (times$ (numeral$ ?v0)) ?v2)))) :named @p_304))
(assume a266 (! (forall ((?v0 Num$) (?v1 Nat$) (?v2 Nat$)) (= (fun_app$g (times$c (numeral$a ?v0)) (plus$a ?v1 ?v2)) (plus$a (fun_app$g (times$c (numeral$a ?v0)) ?v1) (fun_app$g (times$c (numeral$a ?v0)) ?v2)))) :named @p_305))
(assume a267 (! (forall ((?v0 Num$) (?v1 Num1_bit0$) (?v2 Num1_bit0$)) (= (fun_app$a (times$a (numeral$b ?v0)) (plus$ ?v1 ?v2)) (plus$ (fun_app$a (times$a (numeral$b ?v0)) ?v1) (fun_app$a (times$a (numeral$b ?v0)) ?v2)))) :named @p_306))
(assume a268 (! (forall ((?v0 Real) (?v1 Real)) (= (+ (- ?v0) ?v1) (- ?v1 ?v0))) :named @p_307))
(assume a269 (! (forall ((?v0 Real) (?v1 Real)) (= (- ?v0 (- ?v1)) (+ ?v0 ?v1))) :named @p_308))
(assume a270 (! (forall ((?v0 Num$) (?v1 Num$) (?v2 Real)) (= (+ (- (numeral$ ?v0)) (+ (- (numeral$ ?v1)) ?v2)) (+ (- (numeral$ (plus$b ?v0 ?v1))) ?v2))) :named @p_309))
(assume a271 (! (forall ((?v0 Num$) (?v1 Num$) (?v2 Num1_bit0$)) (= (plus$ (uminus$ (numeral$b ?v0)) (plus$ (uminus$ (numeral$b ?v1)) ?v2)) (plus$ (uminus$ (numeral$b (plus$b ?v0 ?v1))) ?v2))) :named @p_310))
(assume a272 (! (forall ((?v0 Num$) (?v1 Num$)) (= (+ (- (numeral$ ?v0)) (- (numeral$ ?v1))) (- (+ (numeral$ ?v0) (numeral$ ?v1))))) :named @p_311))
(assume a273 (! (forall ((?v0 Num$) (?v1 Num$)) (= (plus$ (uminus$ (numeral$b ?v0)) (uminus$ (numeral$b ?v1))) (uminus$ (plus$ (numeral$b ?v0) (numeral$b ?v1))))) :named @p_312))
(assume a274 (! (forall ((?v0 Num$) (?v1 Num$)) (= (- (- (numeral$ ?v0)) (numeral$ ?v1)) (- (numeral$ (plus$b ?v0 ?v1))))) :named @p_313))
(assume a275 (! (forall ((?v0 Num$) (?v1 Num$)) (= (minus$ (uminus$ (numeral$b ?v0)) (numeral$b ?v1)) (uminus$ (numeral$b (plus$b ?v0 ?v1))))) :named @p_314))
(step t0 (cl (= (! (not (! (not (! (= (! (choice ((?v2 Real)) (not (forall ((BOUND_VARIABLE_2117 Real)) (or (not (member$ ?v2 top$)) (not (member$ BOUND_VARIABLE_2117 top$)) (not (= (fun_app$ uu$ ?v2) (fun_app$ uu$ BOUND_VARIABLE_2117))) (= ?v2 BOUND_VARIABLE_2117))))) :named @p_318) (! (choice ((BOUND_VARIABLE_2117 Real)) (not (or (! (not (! (member$ @p_318 top$) :named @p_321)) :named @p_320) (not (member$ BOUND_VARIABLE_2117 top$)) (not (= (! (fun_app$ uu$ @p_318) :named @p_322) (fun_app$ uu$ BOUND_VARIABLE_2117))) (= @p_318 BOUND_VARIABLE_2117)))) :named @p_319)) :named @p_317)) :named @p_316)) :named @p_315) @p_317)) :rule hole)
(step t1 (cl (= (! (not (! (>= (! (+ (! (* -1 @p_318) :named @p_326) @p_319) :named @p_325) 0) :named @p_324)) :named @p_323) @p_323)) :rule refl)
(step t2 (cl (= (! (not (! (>= (! (+ @p_318 (! (* -1 @p_319) :named @p_330)) :named @p_329) 0) :named @p_328)) :named @p_327) @p_327)) :rule refl)
(step t3 (cl (! (=> (! (and @p_316 @p_324) :named @p_332) @p_327) :named @p_331) @p_332) :rule implies_neg1)
(anchor :step t4)
(assume t4.a0 @p_316)
(assume t4.a1 @p_324)
(step t4.t0 (cl @p_331 @p_332) :rule implies_neg1)
(anchor :step t4.t1)
(assume t4.t1.a0 @p_316)
(assume t4.t1.a1 @p_324)
(step t4.t1.t0 (cl (! (= (! (< @p_329 0.0) :named @p_334) (! (not (! (>= @p_329 0.0) :named @p_336)) :named @p_335)) :named @p_333)) :rule hole)
(step t4.t1.t1 (cl (! (= @p_336 @p_328) :named @p_337)) :rule hole)
(step t4.t1.t2 (cl (! (= @p_335 @p_327) :named @p_338)) :rule cong :premises (t4.t1.t1))
(step t4.t1.t3 (cl (or (! (= @p_329 0.0) :named @p_339) (! (not (! (<= @p_329 0.0) :named @p_341)) :named @p_340) (! (not (! (<= 0.0 @p_329) :named @p_343)) :named @p_342))) :rule la_disequality)
(step t4.t1.t4 (cl (= @p_339 @p_317)) :rule hole)
(step t4.t1.t5 (cl (= (! (not @p_339) :named @p_344) @p_316)) :rule cong :premises (t4.t1.t4))
(anchor :step t4.t1.t6 :args ((:= (?v2 Real) @p_318) (:= (BOUND_VARIABLE_2117 Real) @p_319)))
(step t4.t1.t6.t0 (cl (= (or (not (member$ ?v2 top$)) (not (member$ BOUND_VARIABLE_2117 top$)) (not (= (fun_app$ uu$ ?v2) (fun_app$ uu$ BOUND_VARIABLE_2117))) (= ?v2 BOUND_VARIABLE_2117)) (! (or @p_320 (! (not (! (member$ @p_319 top$) :named @p_347)) :named @p_346) (! (not (! (= @p_322 (! (fun_app$ uu$ @p_319) :named @p_350)) :named @p_349)) :named @p_348) @p_317) :named @p_345))) :rule refl)
(step t4.t1.t6 (cl (! (= (! (forall ((?v2 Real) (BOUND_VARIABLE_2117 Real)) (or (not (member$ ?v2 top$)) (not (member$ BOUND_VARIABLE_2117 top$)) (not (= (fun_app$ uu$ ?v2) (fun_app$ uu$ BOUND_VARIABLE_2117))) (= ?v2 BOUND_VARIABLE_2117))) :named @p_352) @p_345) :named @p_351)) :rule sko_forall)
(step t4.t1.t7 (cl (! (not (! (= @p_16 @p_352) :named @p_354)) :named @p_353) @p_16 (! (not @p_352) :named @p_355)) :rule equiv_pos1)
(step t4.t1.t8 (cl (! (or (! (not (! (forall ((?v0 Real_real_fun$) (?v1 Real_set$)) (= (inj_on$ ?v0 ?v1) (forall ((?v2 Real) (BOUND_VARIABLE_2117 Real)) (or (not (member$ ?v2 ?v1)) (not (member$ BOUND_VARIABLE_2117 ?v1)) (not (= (fun_app$ ?v0 ?v2) (fun_app$ ?v0 BOUND_VARIABLE_2117))) (= ?v2 BOUND_VARIABLE_2117))))) :named @p_358)) :named @p_357) @p_354) :named @p_356)) :rule forall_inst :args (uu$ top$))
(step t4.t1.t9 (cl (! (= @p_341 @p_324) :named @p_359)) :rule hole)
(step t4.t1.t10 (cl (not (! (= @p_334 @p_327) :named @p_360)) (! (not @p_334) :named @p_361) @p_327) :rule equiv_pos2)
(step t4.t1.t11 (cl @p_360) :rule trans :premises (t4.t1.t0 t4.t1.t2))
(step t4.t1.t12 (cl @p_339 @p_340 @p_342) :rule or :premises (t4.t1.t3))
(step t4.t1.t13 (cl (not (! (= @p_316 @p_344) :named @p_362)) @p_315 @p_344) :rule equiv_pos2)
(step t4.t1.t14 (cl @p_362) :rule symm :premises (t4.t1.t5))
(step t4.t1.t15 (cl @p_345 @p_316) :rule or_neg :args (3))
(step t4.t1.t16 (cl (! (not (! (= @p_355 (! (not @p_345) :named @p_365)) :named @p_364)) :named @p_363) (! (not @p_355) :named @p_366) @p_365) :rule equiv_pos2)
(step t4.t1.t17 (cl @p_364) :rule cong :premises (t4.t1.t6))
(step t4.t1.t18 (cl @p_16 @p_355 @p_353) :rule reordering :premises (t4.t1.t7))
(step t4.t1.t19 (cl @p_357 @p_354) :rule or :premises (t4.t1.t8))
(step t4.t1.t20 (cl (! (not (! (= @p_96 @p_358) :named @p_368)) :named @p_367) (! (not @p_96) :named @p_369) @p_358) :rule equiv_pos2)
(anchor :step t4.t1.t21 :args ((?v0 Real_real_fun$) (?v1 Real_set$) (:= (?v0 Real_real_fun$) ?v0) (:= (?v1 Real_set$) ?v1)))
(step t4.t1.t21.t0 (cl (= (inj_on$ ?v0 ?v1) (inj_on$ ?v0 ?v1))) :rule refl)
(anchor :step t4.t1.t21.t1 :args ((?v2 Real) (:= (?v2 Real) ?v2)))
(step t4.t1.t21.t1.t0 (cl (= (member$ ?v2 ?v1) (member$ ?v2 ?v1))) :rule refl)
(step t4.t1.t21.t1.t1 (cl (= (forall ((?v3 Real)) (=> (and (member$ ?v3 ?v1) (= (fun_app$ ?v0 ?v2) (fun_app$ ?v0 ?v3))) (= ?v2 ?v3))) (forall ((?v3 Real)) (or (not (member$ ?v3 ?v1)) (not (= (fun_app$ ?v0 ?v2) (fun_app$ ?v0 ?v3))) (= ?v2 ?v3))))) :rule hole)
(step t4.t1.t21.t1.t2 (cl (= (=> (member$ ?v2 ?v1) (forall ((?v3 Real)) (=> (and (member$ ?v3 ?v1) (= (fun_app$ ?v0 ?v2) (fun_app$ ?v0 ?v3))) (= ?v2 ?v3)))) (=> (member$ ?v2 ?v1) (forall ((?v3 Real)) (or (not (member$ ?v3 ?v1)) (not (= (fun_app$ ?v0 ?v2) (fun_app$ ?v0 ?v3))) (= ?v2 ?v3)))))) :rule cong :premises (t4.t1.t21.t1.t0 t4.t1.t21.t1.t1))
(step t4.t1.t21.t1 (cl (= (forall ((?v2 Real)) (=> (member$ ?v2 ?v1) (forall ((?v3 Real)) (=> (and (member$ ?v3 ?v1) (= (fun_app$ ?v0 ?v2) (fun_app$ ?v0 ?v3))) (= ?v2 ?v3))))) (forall ((?v2 Real)) (=> (member$ ?v2 ?v1) (forall ((?v3 Real)) (or (not (member$ ?v3 ?v1)) (not (= (fun_app$ ?v0 ?v2) (fun_app$ ?v0 ?v3))) (= ?v2 ?v3))))))) :rule bind)
(step t4.t1.t21.t2 (cl (= (forall ((?v2 Real)) (=> (member$ ?v2 ?v1) (forall ((?v3 Real)) (or (not (member$ ?v3 ?v1)) (not (= (fun_app$ ?v0 ?v2) (fun_app$ ?v0 ?v3))) (= ?v2 ?v3))))) (forall ((?v2 Real)) (or (not (member$ ?v2 ?v1)) (forall ((?v3 Real)) (or (not (member$ ?v3 ?v1)) (not (= (fun_app$ ?v0 ?v2) (fun_app$ ?v0 ?v3))) (= ?v2 ?v3))))))) :rule hole)
(step t4.t1.t21.t3 (cl (= (forall ((?v2 Real)) (or (not (member$ ?v2 ?v1)) (forall ((?v3 Real)) (or (not (member$ ?v3 ?v1)) (not (= (fun_app$ ?v0 ?v2) (fun_app$ ?v0 ?v3))) (= ?v2 ?v3))))) (forall ((?v2 Real) (BOUND_VARIABLE_2117 Real)) (or (not (member$ ?v2 ?v1)) (or (not (member$ BOUND_VARIABLE_2117 ?v1)) (not (= (fun_app$ ?v0 ?v2) (fun_app$ ?v0 BOUND_VARIABLE_2117))) (= ?v2 BOUND_VARIABLE_2117)))))) :rule hole)
(anchor :step t4.t1.t21.t4 :args ((?v2 Real) (BOUND_VARIABLE_2117 Real) (:= (?v2 Real) ?v2) (:= (BOUND_VARIABLE_2117 Real) BOUND_VARIABLE_2117)))
(step t4.t1.t21.t4.t0 (cl (= (or (not (member$ ?v2 ?v1)) (or (not (member$ BOUND_VARIABLE_2117 ?v1)) (not (= (fun_app$ ?v0 ?v2) (fun_app$ ?v0 BOUND_VARIABLE_2117))) (= ?v2 BOUND_VARIABLE_2117))) (or (not (member$ ?v2 ?v1)) (not (member$ BOUND_VARIABLE_2117 ?v1)) (not (= (fun_app$ ?v0 ?v2) (fun_app$ ?v0 BOUND_VARIABLE_2117))) (= ?v2 BOUND_VARIABLE_2117)))) :rule hole)
(step t4.t1.t21.t4 (cl (= (forall ((?v2 Real) (BOUND_VARIABLE_2117 Real)) (or (not (member$ ?v2 ?v1)) (or (not (member$ BOUND_VARIABLE_2117 ?v1)) (not (= (fun_app$ ?v0 ?v2) (fun_app$ ?v0 BOUND_VARIABLE_2117))) (= ?v2 BOUND_VARIABLE_2117)))) (forall ((?v2 Real) (BOUND_VARIABLE_2117 Real)) (or (not (member$ ?v2 ?v1)) (not (member$ BOUND_VARIABLE_2117 ?v1)) (not (= (fun_app$ ?v0 ?v2) (fun_app$ ?v0 BOUND_VARIABLE_2117))) (= ?v2 BOUND_VARIABLE_2117))))) :rule bind)
(step t4.t1.t21.t5 (cl (= (forall ((?v2 Real)) (or (not (member$ ?v2 ?v1)) (forall ((?v3 Real)) (or (not (member$ ?v3 ?v1)) (not (= (fun_app$ ?v0 ?v2) (fun_app$ ?v0 ?v3))) (= ?v2 ?v3))))) (forall ((?v2 Real) (BOUND_VARIABLE_2117 Real)) (or (not (member$ ?v2 ?v1)) (not (member$ BOUND_VARIABLE_2117 ?v1)) (not (= (fun_app$ ?v0 ?v2) (fun_app$ ?v0 BOUND_VARIABLE_2117))) (= ?v2 BOUND_VARIABLE_2117))))) :rule trans :premises (t4.t1.t21.t3 t4.t1.t21.t4))
(step t4.t1.t21.t6 (cl (= (forall ((?v2 Real)) (=> (member$ ?v2 ?v1) (forall ((?v3 Real)) (or (not (member$ ?v3 ?v1)) (not (= (fun_app$ ?v0 ?v2) (fun_app$ ?v0 ?v3))) (= ?v2 ?v3))))) (forall ((?v2 Real) (BOUND_VARIABLE_2117 Real)) (or (not (member$ ?v2 ?v1)) (not (member$ BOUND_VARIABLE_2117 ?v1)) (not (= (fun_app$ ?v0 ?v2) (fun_app$ ?v0 BOUND_VARIABLE_2117))) (= ?v2 BOUND_VARIABLE_2117))))) :rule trans :premises (t4.t1.t21.t2 t4.t1.t21.t5))
(step t4.t1.t21.t7 (cl (= (forall ((?v2 Real)) (=> (member$ ?v2 ?v1) (forall ((?v3 Real)) (=> (and (member$ ?v3 ?v1) (= (fun_app$ ?v0 ?v2) (fun_app$ ?v0 ?v3))) (= ?v2 ?v3))))) (forall ((?v2 Real) (BOUND_VARIABLE_2117 Real)) (or (not (member$ ?v2 ?v1)) (not (member$ BOUND_VARIABLE_2117 ?v1)) (not (= (fun_app$ ?v0 ?v2) (fun_app$ ?v0 BOUND_VARIABLE_2117))) (= ?v2 BOUND_VARIABLE_2117))))) :rule trans :premises (t4.t1.t21.t1 t4.t1.t21.t6))
(step t4.t1.t21.t8 (cl (= (= (inj_on$ ?v0 ?v1) (forall ((?v2 Real)) (=> (member$ ?v2 ?v1) (forall ((?v3 Real)) (=> (and (member$ ?v3 ?v1) (= (fun_app$ ?v0 ?v2) (fun_app$ ?v0 ?v3))) (= ?v2 ?v3)))))) (= (inj_on$ ?v0 ?v1) (forall ((?v2 Real) (BOUND_VARIABLE_2117 Real)) (or (not (member$ ?v2 ?v1)) (not (member$ BOUND_VARIABLE_2117 ?v1)) (not (= (fun_app$ ?v0 ?v2) (fun_app$ ?v0 BOUND_VARIABLE_2117))) (= ?v2 BOUND_VARIABLE_2117)))))) :rule cong :premises (t4.t1.t21.t0 t4.t1.t21.t7))
(step t4.t1.t21 (cl @p_368) :rule bind)
(step t4.t1.t22 (cl @p_358) :rule resolution :premises (t4.t1.t20 t4.t1.t21 a83) :args (@p_368 @p_26 @p_96 @p_26))
(step t4.t1.t23 (cl @p_354) :rule resolution :premises (t4.t1.t19 t4.t1.t22) :args (@p_358 @p_26))
(step t4.t1.t24 (cl @p_355) :rule resolution :premises (t4.t1.t18 a14 t4.t1.t23) :args (@p_16 @p_14 @p_354 @p_26))
(step t4.t1.t25 (cl @p_365) :rule resolution :premises (t4.t1.t16 t4.t1.t17 t4.t1.t24) :args (@p_364 @p_26 @p_355 @p_26))
(step t4.t1.t26 (cl @p_316) :rule resolution :premises (t4.t1.t15 t4.t1.t25) :args (@p_345 @p_14))
(step t4.t1.t27 (cl @p_344) :rule resolution :premises (t4.t1.t13 t4.t1.t14 t4.t1.t26) :args (@p_362 @p_26 @p_316 @p_26))
(step t4.t1.t28 (cl (not (! (= @p_324 @p_341) :named @p_370)) @p_323 @p_341) :rule equiv_pos2)
(step t4.t1.t29 (cl @p_370) :rule symm :premises (t4.t1.t9))
(step t4.t1.t30 (cl @p_341) :rule resolution :premises (t4.t1.t28 t4.t1.t29 t4.t1.a1) :args (@p_370 @p_26 @p_324 @p_26))
(step t4.t1.t31 (cl (not (! (= @p_334 @p_342) :named @p_371)) @p_334 (not @p_342)) :rule equiv_pos1)
(step t4.t1.t32 (cl @p_371) :rule comp_simplify)
(step t4.t1.t33 (cl @p_334) :rule resolution :premises (t4.t1.t12 t4.t1.t27 t4.t1.t30 t4.t1.t31 t4.t1.t32) :args (@p_339 @p_14 @p_341 @p_26 @p_342 @p_14 @p_371 @p_26))
(step t4.t1.t34 (cl @p_327) :rule resolution :premises (t4.t1.t10 t4.t1.t11 t4.t1.t33) :args (@p_360 @p_26 @p_334 @p_26))
(step t4.t1 (cl @p_315 @p_323 @p_327) :rule subproof :discharge (t4.t1.a0 t4.t1.a1))
(step t4.t2 (cl (! (not @p_332) :named @p_372) @p_316) :rule and_pos :args (0))
(step t4.t3 (cl @p_372 @p_324) :rule and_pos :args (1))
(step t4.t4 (cl @p_327 @p_372 @p_372) :rule resolution :premises (t4.t1 t4.t2 t4.t3) :args (@p_316 @p_26 @p_324 @p_26))
(step t4.t5 (cl @p_372 @p_372 @p_327) :rule reordering :premises (t4.t4))
(step t4.t6 (cl @p_372 @p_327) :rule contraction :premises (t4.t5))
(step t4.t7 (cl @p_331 @p_327) :rule resolution :premises (t4.t0 t4.t6) :args (@p_332 @p_14))
(step t4.t8 (cl @p_331 (! (not @p_327) :named @p_373)) :rule implies_neg2)
(step t4.t9 (cl @p_331 @p_331) :rule resolution :premises (t4.t7 t4.t8) :args (@p_327 @p_14))
(step t4.t10 (cl @p_331) :rule contraction :premises (t4.t9))
(anchor :step t4.t11 :args ((:= (?v2 Real) @p_318) (:= (BOUND_VARIABLE_2117 Real) @p_319)))
(step t4.t11.t0 (cl (= (or (not (member$ ?v2 top$)) (not (member$ BOUND_VARIABLE_2117 top$)) (not (= (fun_app$ uu$ ?v2) (fun_app$ uu$ BOUND_VARIABLE_2117))) (= ?v2 BOUND_VARIABLE_2117)) @p_345)) :rule refl)
(step t4.t11 (cl @p_351) :rule sko_forall)
(step t4.t12 (cl @p_353 @p_16 @p_355) :rule equiv_pos1)
(step t4.t13 (cl @p_356) :rule forall_inst :args (uu$ top$))
(step t4.t14 (cl @p_372 @p_327) :rule implies :premises (t4.t10))
(step t4.t15 (cl @p_332 @p_315 @p_323) :rule and_neg)
(step t4.t16 (cl @p_345 @p_316) :rule or_neg :args (3))
(step t4.t17 (cl @p_363 @p_366 @p_365) :rule equiv_pos2)
(step t4.t18 (cl @p_364) :rule cong :premises (t4.t11))
(step t4.t19 (cl @p_16 @p_355 @p_353) :rule reordering :premises (t4.t12))
(step t4.t20 (cl @p_357 @p_354) :rule or :premises (t4.t13))
(step t4.t21 (cl @p_367 @p_369 @p_358) :rule equiv_pos2)
(anchor :step t4.t22 :args ((?v0 Real_real_fun$) (?v1 Real_set$) (:= (?v0 Real_real_fun$) ?v0) (:= (?v1 Real_set$) ?v1)))
(step t4.t22.t0 (cl (= (inj_on$ ?v0 ?v1) (inj_on$ ?v0 ?v1))) :rule refl)
(anchor :step t4.t22.t1 :args ((?v2 Real) (:= (?v2 Real) ?v2)))
(step t4.t22.t1.t0 (cl (= (member$ ?v2 ?v1) (member$ ?v2 ?v1))) :rule refl)
(step t4.t22.t1.t1 (cl (= (forall ((?v3 Real)) (=> (and (member$ ?v3 ?v1) (= (fun_app$ ?v0 ?v2) (fun_app$ ?v0 ?v3))) (= ?v2 ?v3))) (forall ((?v3 Real)) (or (not (member$ ?v3 ?v1)) (not (= (fun_app$ ?v0 ?v2) (fun_app$ ?v0 ?v3))) (= ?v2 ?v3))))) :rule hole)
(step t4.t22.t1.t2 (cl (= (=> (member$ ?v2 ?v1) (forall ((?v3 Real)) (=> (and (member$ ?v3 ?v1) (= (fun_app$ ?v0 ?v2) (fun_app$ ?v0 ?v3))) (= ?v2 ?v3)))) (=> (member$ ?v2 ?v1) (forall ((?v3 Real)) (or (not (member$ ?v3 ?v1)) (not (= (fun_app$ ?v0 ?v2) (fun_app$ ?v0 ?v3))) (= ?v2 ?v3)))))) :rule cong :premises (t4.t22.t1.t0 t4.t22.t1.t1))
(step t4.t22.t1 (cl (= (forall ((?v2 Real)) (=> (member$ ?v2 ?v1) (forall ((?v3 Real)) (=> (and (member$ ?v3 ?v1) (= (fun_app$ ?v0 ?v2) (fun_app$ ?v0 ?v3))) (= ?v2 ?v3))))) (forall ((?v2 Real)) (=> (member$ ?v2 ?v1) (forall ((?v3 Real)) (or (not (member$ ?v3 ?v1)) (not (= (fun_app$ ?v0 ?v2) (fun_app$ ?v0 ?v3))) (= ?v2 ?v3))))))) :rule bind)
(step t4.t22.t2 (cl (= (forall ((?v2 Real)) (=> (member$ ?v2 ?v1) (forall ((?v3 Real)) (or (not (member$ ?v3 ?v1)) (not (= (fun_app$ ?v0 ?v2) (fun_app$ ?v0 ?v3))) (= ?v2 ?v3))))) (forall ((?v2 Real)) (or (not (member$ ?v2 ?v1)) (forall ((?v3 Real)) (or (not (member$ ?v3 ?v1)) (not (= (fun_app$ ?v0 ?v2) (fun_app$ ?v0 ?v3))) (= ?v2 ?v3))))))) :rule hole)
(step t4.t22.t3 (cl (= (forall ((?v2 Real)) (or (not (member$ ?v2 ?v1)) (forall ((?v3 Real)) (or (not (member$ ?v3 ?v1)) (not (= (fun_app$ ?v0 ?v2) (fun_app$ ?v0 ?v3))) (= ?v2 ?v3))))) (forall ((?v2 Real) (BOUND_VARIABLE_2117 Real)) (or (not (member$ ?v2 ?v1)) (or (not (member$ BOUND_VARIABLE_2117 ?v1)) (not (= (fun_app$ ?v0 ?v2) (fun_app$ ?v0 BOUND_VARIABLE_2117))) (= ?v2 BOUND_VARIABLE_2117)))))) :rule hole)
(anchor :step t4.t22.t4 :args ((?v2 Real) (BOUND_VARIABLE_2117 Real) (:= (?v2 Real) ?v2) (:= (BOUND_VARIABLE_2117 Real) BOUND_VARIABLE_2117)))
(step t4.t22.t4.t0 (cl (= (or (not (member$ ?v2 ?v1)) (or (not (member$ BOUND_VARIABLE_2117 ?v1)) (not (= (fun_app$ ?v0 ?v2) (fun_app$ ?v0 BOUND_VARIABLE_2117))) (= ?v2 BOUND_VARIABLE_2117))) (or (not (member$ ?v2 ?v1)) (not (member$ BOUND_VARIABLE_2117 ?v1)) (not (= (fun_app$ ?v0 ?v2) (fun_app$ ?v0 BOUND_VARIABLE_2117))) (= ?v2 BOUND_VARIABLE_2117)))) :rule hole)
(step t4.t22.t4 (cl (= (forall ((?v2 Real) (BOUND_VARIABLE_2117 Real)) (or (not (member$ ?v2 ?v1)) (or (not (member$ BOUND_VARIABLE_2117 ?v1)) (not (= (fun_app$ ?v0 ?v2) (fun_app$ ?v0 BOUND_VARIABLE_2117))) (= ?v2 BOUND_VARIABLE_2117)))) (forall ((?v2 Real) (BOUND_VARIABLE_2117 Real)) (or (not (member$ ?v2 ?v1)) (not (member$ BOUND_VARIABLE_2117 ?v1)) (not (= (fun_app$ ?v0 ?v2) (fun_app$ ?v0 BOUND_VARIABLE_2117))) (= ?v2 BOUND_VARIABLE_2117))))) :rule bind)
(step t4.t22.t5 (cl (= (forall ((?v2 Real)) (or (not (member$ ?v2 ?v1)) (forall ((?v3 Real)) (or (not (member$ ?v3 ?v1)) (not (= (fun_app$ ?v0 ?v2) (fun_app$ ?v0 ?v3))) (= ?v2 ?v3))))) (forall ((?v2 Real) (BOUND_VARIABLE_2117 Real)) (or (not (member$ ?v2 ?v1)) (not (member$ BOUND_VARIABLE_2117 ?v1)) (not (= (fun_app$ ?v0 ?v2) (fun_app$ ?v0 BOUND_VARIABLE_2117))) (= ?v2 BOUND_VARIABLE_2117))))) :rule trans :premises (t4.t22.t3 t4.t22.t4))
(step t4.t22.t6 (cl (= (forall ((?v2 Real)) (=> (member$ ?v2 ?v1) (forall ((?v3 Real)) (or (not (member$ ?v3 ?v1)) (not (= (fun_app$ ?v0 ?v2) (fun_app$ ?v0 ?v3))) (= ?v2 ?v3))))) (forall ((?v2 Real) (BOUND_VARIABLE_2117 Real)) (or (not (member$ ?v2 ?v1)) (not (member$ BOUND_VARIABLE_2117 ?v1)) (not (= (fun_app$ ?v0 ?v2) (fun_app$ ?v0 BOUND_VARIABLE_2117))) (= ?v2 BOUND_VARIABLE_2117))))) :rule trans :premises (t4.t22.t2 t4.t22.t5))
(step t4.t22.t7 (cl (= (forall ((?v2 Real)) (=> (member$ ?v2 ?v1) (forall ((?v3 Real)) (=> (and (member$ ?v3 ?v1) (= (fun_app$ ?v0 ?v2) (fun_app$ ?v0 ?v3))) (= ?v2 ?v3))))) (forall ((?v2 Real) (BOUND_VARIABLE_2117 Real)) (or (not (member$ ?v2 ?v1)) (not (member$ BOUND_VARIABLE_2117 ?v1)) (not (= (fun_app$ ?v0 ?v2) (fun_app$ ?v0 BOUND_VARIABLE_2117))) (= ?v2 BOUND_VARIABLE_2117))))) :rule trans :premises (t4.t22.t1 t4.t22.t6))
(step t4.t22.t8 (cl (= (= (inj_on$ ?v0 ?v1) (forall ((?v2 Real)) (=> (member$ ?v2 ?v1) (forall ((?v3 Real)) (=> (and (member$ ?v3 ?v1) (= (fun_app$ ?v0 ?v2) (fun_app$ ?v0 ?v3))) (= ?v2 ?v3)))))) (= (inj_on$ ?v0 ?v1) (forall ((?v2 Real) (BOUND_VARIABLE_2117 Real)) (or (not (member$ ?v2 ?v1)) (not (member$ BOUND_VARIABLE_2117 ?v1)) (not (= (fun_app$ ?v0 ?v2) (fun_app$ ?v0 BOUND_VARIABLE_2117))) (= ?v2 BOUND_VARIABLE_2117)))))) :rule cong :premises (t4.t22.t0 t4.t22.t7))
(step t4.t22 (cl @p_368) :rule bind)
(step t4.t23 (cl @p_358) :rule resolution :premises (t4.t21 t4.t22 a83) :args (@p_368 @p_26 @p_96 @p_26))
(step t4.t24 (cl @p_354) :rule resolution :premises (t4.t20 t4.t23) :args (@p_358 @p_26))
(step t4.t25 (cl @p_355) :rule resolution :premises (t4.t19 a14 t4.t24) :args (@p_16 @p_14 @p_354 @p_26))
(step t4.t26 (cl @p_365) :rule resolution :premises (t4.t17 t4.t18 t4.t25) :args (@p_364 @p_26 @p_355 @p_26))
(step t4.t27 (cl @p_316) :rule resolution :premises (t4.t16 t4.t26) :args (@p_345 @p_14))
(step t4.t28 (cl @p_332) :rule resolution :premises (t4.t15 t4.t27 t4.a1) :args (@p_316 @p_26 @p_324 @p_26))
(step t4.t29 (cl @p_327) :rule resolution :premises (t4.t14 t4.t28) :args (@p_332 @p_26))
(step t4 (cl @p_315 @p_323 @p_327) :rule subproof :discharge (t4.a0 t4.a1))
(step t5 (cl @p_372 @p_316) :rule and_pos :args (0))
(step t6 (cl @p_372 @p_324) :rule and_pos :args (1))
(step t7 (cl @p_327 @p_372 @p_372) :rule resolution :premises (t4 t5 t6) :args (@p_316 @p_26 @p_324 @p_26))
(step t8 (cl @p_372 @p_372 @p_327) :rule reordering :premises (t7))
(step t9 (cl @p_372 @p_327) :rule contraction :premises (t8))
(step t10 (cl @p_331 @p_327) :rule resolution :premises (t3 t9) :args (@p_332 @p_14))
(step t11 (cl @p_331 @p_373) :rule implies_neg2)
(step t12 (cl @p_331 @p_331) :rule resolution :premises (t10 t11) :args (@p_327 @p_14))
(step t13 (cl @p_331) :rule contraction :premises (t12))
(step t14 (cl (not (! (= (! (or @p_315 @p_323 @p_327) :named @p_375) (! (or @p_317 @p_323 @p_327) :named @p_376)) :named @p_374)) (not @p_375) @p_376) :rule equiv_pos2)
(step t15 (cl @p_374) :rule cong :premises (t0 t1 t2))
(step t16 (cl @p_332 @p_315 @p_323) :rule and_neg)
(step t17 (cl @p_372 @p_327) :rule implies :premises (t13))
(step t18 (cl @p_315 @p_323 @p_327) :rule resolution :premises (t16 t17) :args (@p_332 @p_14))
(step t19 (cl @p_375 (not @p_315)) :rule or_neg :args (0))
(step t20 (cl @p_375 (! (not @p_323) :named @p_377)) :rule or_neg :args (1))
(step t21 (cl @p_375 @p_373) :rule or_neg :args (2))
(step t22 (cl @p_375 @p_375 @p_375) :rule resolution :premises (t18 t19 t20 t21) :args (@p_315 @p_14 @p_323 @p_14 @p_327 @p_14))
(step t23 (cl @p_375) :rule contraction :premises (t22))
(step t24 (cl @p_376) :rule resolution :premises (t14 t15 t23) :args (@p_374 @p_26 @p_375 @p_26))
(step t25 (cl (= (! (not (! (= @p_319 (! (+ 1 (! (* -1 (! (fun_app$ x_coord_inv$ (! (fun_app$ x_coord$ (! (+ 1 @p_330) :named @p_384)) :named @p_383)) :named @p_382)) :named @p_381)) :named @p_380)) :named @p_379)) :named @p_378) @p_378)) :rule refl)
(step t26 (cl (= (! (not (! (= @p_318 (! (+ 1 (! (* -1 (! (fun_app$ x_coord_inv$ (! (fun_app$ x_coord$ (! (+ 1 @p_326) :named @p_391)) :named @p_390)) :named @p_389)) :named @p_388)) :named @p_387)) :named @p_386)) :named @p_385) @p_385)) :rule refl)
(step t27 (cl (= (! (not (! (= @p_389 @p_382) :named @p_393)) :named @p_392) @p_392)) :rule refl)
(step t28 (cl (= @p_377 @p_324)) :rule hole)
(anchor :step t29)
(assume t29.a0 @p_379)
(assume t29.a1 @p_386)
(assume t29.a2 @p_393)
(assume t29.a3 @p_323)
(step t29.t0 (cl (= (! (< (! (+ (! (* -1/1 @p_329) :named @p_396) (! (* -1/1 (! (+ @p_319 @p_382) :named @p_398)) :named @p_397) (! (+ @p_318 @p_389) :named @p_399) (! (* -1/1 (! (+ @p_389 @p_381) :named @p_401)) :named @p_400)) :named @p_395) (! (+ (! (* -1/1 0.0) :named @p_403) (! (* -1/1 1.0) :named @p_404) 1.0 @p_403) :named @p_402)) :named @p_394) (! (not (! (>= @p_395 @p_402) :named @p_406)) :named @p_405))) :rule hole)
(step t29.t1 (cl (= @p_395 (! (+ @p_396 @p_397 @p_318 @p_389 @p_400) :named @p_407))) :rule hole)
(step t29.t2 (cl (= @p_396 @p_325)) :rule hole)
(step t29.t3 (cl (= @p_397 (! (+ @p_330 @p_381) :named @p_408))) :rule hole)
(step t29.t4 (cl (! (= @p_318 @p_318) :named @p_409)) :rule refl)
(step t29.t5 (cl (! (= @p_389 @p_389) :named @p_410)) :rule refl)
(step t29.t6 (cl (= @p_400 (! (+ @p_388 @p_382) :named @p_411))) :rule hole)
(step t29.t7 (cl (= @p_407 (! (+ @p_325 @p_408 @p_318 @p_389 @p_411) :named @p_412))) :rule cong :premises (t29.t2 t29.t3 t29.t4 t29.t5 t29.t6))
(step t29.t8 (cl (= @p_412 0.0)) :rule hole)
(step t29.t9 (cl (= @p_407 0.0)) :rule trans :premises (t29.t7 t29.t8))
(step t29.t10 (cl (= @p_395 0.0)) :rule trans :premises (t29.t1 t29.t9))
(step t29.t11 (cl (= @p_403 0.0)) :rule hole)
(step t29.t12 (cl (! (= @p_404 -1/1) :named @p_413)) :rule hole)
(step t29.t13 (cl @p_120) :rule refl)
(step t29.t14 (cl (= @p_402 (! (+ 0.0 -1/1 1.0 0.0) :named @p_414))) :rule cong :premises (t29.t11 t29.t12 t29.t13 t29.t11))
(step t29.t15 (cl (= @p_414 0.0)) :rule hole)
(step t29.t16 (cl (= @p_402 0.0)) :rule trans :premises (t29.t14 t29.t15))
(step t29.t17 (cl (= @p_406 (! (>= 0.0 0.0) :named @p_415))) :rule cong :premises (t29.t10 t29.t16))
(step t29.t18 (cl (! (= @p_415 @p_14) :named @p_416)) :rule hole)
(step t29.t19 (cl (= @p_406 @p_14)) :rule trans :premises (t29.t17 t29.t18))
(step t29.t20 (cl (= @p_405 (! (not @p_14) :named @p_417))) :rule cong :premises (t29.t19))
(step t29.t21 (cl (! (= @p_417 @p_26) :named @p_418)) :rule hole)
(step t29.t22 (cl (= @p_405 @p_26)) :rule trans :premises (t29.t20 t29.t21))
(step t29.t23 (cl (=> (! (and (! (< -1/1 0.0) :named @p_420) (! (> @p_329 0.0) :named @p_421)) :named @p_419) (! (< @p_396 @p_403) :named @p_422))) :rule la_mult_neg)
(step t29.t24 (cl (! (= (! (= @p_420 @p_14) :named @p_424) @p_420) :named @p_423)) :rule equiv_simplify)
(step t29.t25 (cl (= @p_421 @p_340)) :rule hole)
(step t29.t26 (cl @p_359) :rule hole)
(step t29.t27 (cl (= @p_340 @p_323)) :rule cong :premises (t29.t26))
(step t29.t28 (cl (= @p_421 @p_323)) :rule trans :premises (t29.t25 t29.t27))
(step t29.t29 (cl (=> (! (and @p_420 (! (= @p_398 1.0) :named @p_426)) :named @p_425) (! (= @p_397 @p_404) :named @p_427))) :rule la_mult_neg)
(step t29.t30 (cl (! (= @p_426 @p_379) :named @p_428)) :rule hole)
(step t29.t31 (cl (! (= (! (forall ((?v0 Real)) (= ?v0 (fun_app$ x_coord_inv$ (fun_app$ x_coord$ ?v0)))) :named @p_430) @p_430) :named @p_429)) :rule refl)
(step t29.t32 (cl (! (= (! (= @p_384 @p_382) :named @p_432) @p_379) :named @p_431)) :rule hole)
(step t29.t33 (cl (! (not (! (= (! (=> @p_430 @p_432) :named @p_435) (! (=> @p_430 @p_379) :named @p_436)) :named @p_434)) :named @p_433) (! (not @p_435) :named @p_437) @p_436) :rule equiv_pos2)
(step t29.t34 (cl @p_434) :rule cong :premises (t29.t31 t29.t32))
(step t29.t35 (cl @p_435 @p_430) :rule implies_neg1)
(anchor :step t29.t36)
(assume t29.t36.a0 @p_430)
(step t29.t36.t0 (cl (! (or (! (not @p_430) :named @p_439) @p_432) :named @p_438)) :rule forall_inst :args (@p_384))
(step t29.t36.t1 (cl @p_439 @p_432) :rule or :premises (t29.t36.t0))
(step t29.t36.t2 (cl (! (not (! (= @p_127 @p_430) :named @p_441)) :named @p_440) (! (not @p_127) :named @p_442) @p_430) :rule equiv_pos2)
(anchor :step t29.t36.t3 :args ((?v0 Real) (:= (?v0 Real) ?v0)))
(step t29.t36.t3.t0 (cl (= (= (fun_app$ x_coord_inv$ (fun_app$ x_coord$ ?v0)) ?v0) (= ?v0 (fun_app$ x_coord_inv$ (fun_app$ x_coord$ ?v0))))) :rule hole)
(step t29.t36.t3 (cl @p_441) :rule bind)
(step t29.t36.t4 (cl @p_430) :rule resolution :premises (t29.t36.t2 t29.t36.t3 a109) :args (@p_441 @p_26 @p_127 @p_26))
(step t29.t36.t5 (cl @p_432) :rule resolution :premises (t29.t36.t1 t29.t36.t4) :args (@p_430 @p_26))
(step t29.t36 (cl @p_439 @p_432) :rule subproof :discharge (t29.t36.a0))
(step t29.t37 (cl @p_435 @p_432) :rule resolution :premises (t29.t35 t29.t36) :args (@p_430 @p_14))
(step t29.t38 (cl @p_435 (! (not @p_432) :named @p_443)) :rule implies_neg2)
(step t29.t39 (cl @p_435 @p_435) :rule resolution :premises (t29.t37 t29.t38) :args (@p_432 @p_14))
(step t29.t40 (cl @p_435) :rule contraction :premises (t29.t39))
(step t29.t41 (cl @p_436) :rule resolution :premises (t29.t33 t29.t34 t29.t40) :args (@p_434 @p_26 @p_435 @p_26))
(step t29.t42 (cl @p_440 @p_442 @p_430) :rule equiv_pos2)
(anchor :step t29.t43 :args ((?v0 Real) (:= (?v0 Real) ?v0)))
(step t29.t43.t0 (cl (= (= (fun_app$ x_coord_inv$ (fun_app$ x_coord$ ?v0)) ?v0) (= ?v0 (fun_app$ x_coord_inv$ (fun_app$ x_coord$ ?v0))))) :rule hole)
(step t29.t43 (cl @p_441) :rule bind)
(step t29.t44 (cl @p_430) :rule resolution :premises (t29.t42 t29.t43 a109) :args (@p_441 @p_26 @p_127 @p_26))
(step t29.t45 (cl (! (= (! (= @p_399 1.0) :named @p_445) @p_386) :named @p_444)) :rule hole)
(step t29.t46 (cl (! (= (! (= @p_391 @p_389) :named @p_447) @p_386) :named @p_446)) :rule hole)
(step t29.t47 (cl (! (not (! (= (! (=> @p_430 @p_447) :named @p_450) (! (=> @p_430 @p_386) :named @p_451)) :named @p_449)) :named @p_448) (! (not @p_450) :named @p_452) @p_451) :rule equiv_pos2)
(step t29.t48 (cl @p_449) :rule cong :premises (t29.t31 t29.t46))
(step t29.t49 (cl @p_450 @p_430) :rule implies_neg1)
(anchor :step t29.t50)
(assume t29.t50.a0 @p_430)
(step t29.t50.t0 (cl (! (or @p_439 @p_447) :named @p_453)) :rule forall_inst :args (@p_391))
(step t29.t50.t1 (cl @p_439 @p_447) :rule or :premises (t29.t50.t0))
(step t29.t50.t2 (cl @p_447) :rule resolution :premises (t29.t50.t1 t29.t44) :args (@p_430 @p_26))
(step t29.t50 (cl @p_439 @p_447) :rule subproof :discharge (t29.t50.a0))
(step t29.t51 (cl @p_450 @p_447) :rule resolution :premises (t29.t49 t29.t50) :args (@p_430 @p_14))
(step t29.t52 (cl @p_450 (! (not @p_447) :named @p_454)) :rule implies_neg2)
(step t29.t53 (cl @p_450 @p_450) :rule resolution :premises (t29.t51 t29.t52) :args (@p_447 @p_14))
(step t29.t54 (cl @p_450) :rule contraction :premises (t29.t53))
(step t29.t55 (cl @p_451) :rule resolution :premises (t29.t47 t29.t48 t29.t54) :args (@p_449 @p_26 @p_450 @p_26))
(step t29.t56 (cl (=> (! (and @p_420 (! (= @p_401 0.0) :named @p_456)) :named @p_455) (! (= @p_400 @p_403) :named @p_457))) :rule la_mult_neg)
(step t29.t57 (cl (! (= @p_456 @p_393) :named @p_458)) :rule hole)
(step t29.t58 (cl (not (! (= @p_394 @p_26) :named @p_459)) (not @p_394) @p_26) :rule equiv_pos2)
(step t29.t59 (cl @p_459) :rule trans :premises (t29.t0 t29.t22))
(step t29.t60 (cl (not @p_422) (not @p_427) (! (not @p_445) :named @p_460) (not @p_457) @p_394) :rule la_generic :args (1.0 -1/1 -1/1 -1/1 1.0))
(step t29.t61 (cl (not @p_419) @p_422) :rule implies :premises (t29.t23))
(step t29.t62 (cl @p_419 (! (not @p_420) :named @p_461) (not @p_421)) :rule and_neg)
(step t29.t63 (cl (! (not @p_424) :named @p_462) @p_420) :rule equiv1 :premises (t29.t24))
(step t29.t64 (cl @p_424) :rule rare_rewrite :args ("evaluate"))
(step t29.t65 (cl @p_420) :rule resolution :premises (t29.t63 t29.t64) :args (@p_424 @p_26))
(step t29.t66 (cl (not (! (= @p_323 @p_421) :named @p_463)) @p_377 @p_421) :rule equiv_pos2)
(step t29.t67 (cl @p_463) :rule symm :premises (t29.t28))
(step t29.t68 (cl @p_421) :rule resolution :premises (t29.t66 t29.t67 t29.a3) :args (@p_463 @p_26 @p_323 @p_26))
(step t29.t69 (cl @p_419 @p_461) :rule resolution :premises (t29.t62 t29.t68) :args (@p_421 @p_26))
(step t29.t70 (cl @p_422 @p_461) :rule resolution :premises (t29.t61 t29.t69) :args (@p_419 @p_26))
(step t29.t71 (cl (not @p_425) @p_427) :rule implies :premises (t29.t29))
(step t29.t72 (cl @p_425 @p_461 (! (not @p_426) :named @p_464)) :rule and_neg)
(step t29.t73 (cl (! (not (! (= @p_379 @p_426) :named @p_466)) :named @p_465) @p_378 @p_426) :rule equiv_pos2)
(step t29.t74 (cl @p_466) :rule symm :premises (t29.t30))
(step t29.t75 (cl @p_439 @p_379) :rule implies :premises (t29.t41))
(step t29.t76 (cl @p_426 @p_439) :rule resolution :premises (t29.t73 t29.t74 t29.t75) :args (@p_466 @p_26 @p_379 @p_26))
(step t29.t77 (cl @p_425 @p_461 @p_439) :rule resolution :premises (t29.t72 t29.t76) :args (@p_426 @p_26))
(step t29.t78 (cl @p_427 @p_461 @p_439) :rule resolution :premises (t29.t71 t29.t77) :args (@p_425 @p_26))
(step t29.t79 (cl (! (not (! (= @p_386 @p_445) :named @p_468)) :named @p_467) @p_385 @p_445) :rule equiv_pos2)
(step t29.t80 (cl @p_468) :rule symm :premises (t29.t45))
(step t29.t81 (cl @p_439 @p_386) :rule implies :premises (t29.t55))
(step t29.t82 (cl @p_445 @p_439) :rule resolution :premises (t29.t79 t29.t80 t29.t81) :args (@p_468 @p_26 @p_386 @p_26))
(step t29.t83 (cl (not @p_455) @p_457) :rule implies :premises (t29.t56))
(step t29.t84 (cl @p_455 @p_461 (! (not @p_456) :named @p_469)) :rule and_neg)
(step t29.t85 (cl (! (not (! (= @p_393 @p_456) :named @p_471)) :named @p_470) @p_392 @p_456) :rule equiv_pos2)
(step t29.t86 (cl @p_471) :rule symm :premises (t29.t57))
(step t29.t87 (cl @p_456) :rule resolution :premises (t29.t85 t29.t86 t29.a2) :args (@p_471 @p_26 @p_393 @p_26))
(step t29.t88 (cl @p_455 @p_461) :rule resolution :premises (t29.t84 t29.t87) :args (@p_456 @p_26))
(step t29.t89 (cl @p_457 @p_461) :rule resolution :premises (t29.t83 t29.t88) :args (@p_455 @p_26))
(step t29.t90 (cl @p_394 @p_461 @p_439) :rule resolution :premises (t29.t60 t29.t70 t29.t78 t29.t82 t29.t89) :args (@p_422 @p_26 @p_427 @p_26 @p_445 @p_26 @p_457 @p_26))
(step t29.t91 (cl @p_26 @p_461 @p_439) :rule resolution :premises (t29.t58 t29.t59 t29.t90) :args (@p_459 @p_26 @p_394 @p_26))
(step t29.t92 (cl @p_26) :rule resolution :premises (t29.t91 t29.t44 t29.t65) :args (@p_430 @p_26 @p_420 @p_26))
(step t29 (cl @p_378 @p_385 @p_392 @p_377 @p_26) :rule subproof :discharge (t29.a0 t29.a1 t29.a2 t29.a3))
(step t30 (cl (! (not (! (and @p_379 @p_386 @p_393 @p_323) :named @p_473)) :named @p_472) @p_379) :rule and_pos :args (0))
(step t31 (cl @p_472 @p_386) :rule and_pos :args (1))
(step t32 (cl @p_472 @p_393) :rule and_pos :args (2))
(step t33 (cl @p_472 @p_323) :rule and_pos :args (3))
(step t34 (cl @p_26 @p_472 @p_472 @p_472 @p_472) :rule resolution :premises (t29 t30 t31 t32 t33) :args (@p_379 @p_26 @p_386 @p_26 @p_393 @p_26 @p_323 @p_26))
(step t35 (cl @p_472 @p_472 @p_472 @p_472 @p_26) :rule reordering :premises (t34))
(step t36 (cl (= (! (=> @p_473 @p_26) :named @p_474) @p_472)) :rule implies_simplify)
(step t37 (cl @p_474 @p_473) :rule implies_neg1)
(step t38 (cl @p_472 @p_26) :rule contraction :premises (t35))
(step t39 (cl @p_474 @p_26) :rule resolution :premises (t37 t38) :args (@p_473 @p_14))
(step t40 (cl @p_474 (! (not @p_26) :named @p_475)) :rule implies_neg2)
(step t41 (cl @p_474 @p_474) :rule resolution :premises (t39 t40) :args (@p_26 @p_14))
(step t42 (cl @p_474) :rule contraction :premises (t41))
(step t43 (cl (not @p_474) @p_472) :rule equiv1 :premises (t36))
(step t44 (cl @p_472) :rule resolution :premises (t42 t43) :args (@p_474 @p_14))
(step t45 (cl (not (! (= (! (or @p_378 @p_385 @p_392 @p_377) :named @p_477) (! (or @p_378 @p_385 @p_392 @p_324) :named @p_478)) :named @p_476)) (not @p_477) @p_478) :rule equiv_pos2)
(step t46 (cl @p_476) :rule cong :premises (t25 t26 t27 t28))
(step t47 (cl @p_378 @p_385 @p_392 @p_377) :rule not_and :premises (t44))
(step t48 (cl @p_477 (! (not @p_378) :named @p_479)) :rule or_neg :args (0))
(step t49 (cl @p_477 (! (not @p_385) :named @p_480)) :rule or_neg :args (1))
(step t50 (cl @p_477 (! (not @p_392) :named @p_481)) :rule or_neg :args (2))
(step t51 (cl @p_477 (not @p_377)) :rule or_neg :args (3))
(step t52 (cl @p_477 @p_477 @p_477 @p_477) :rule resolution :premises (t47 t48 t49 t50 t51) :args (@p_378 @p_14 @p_385 @p_14 @p_392 @p_14 @p_377 @p_14))
(step t53 (cl @p_477) :rule contraction :premises (t52))
(step t54 (cl @p_478) :rule resolution :premises (t45 t46 t53) :args (@p_476 @p_26 @p_477 @p_26))
(step t55 (cl @p_378 @p_385 @p_392 @p_324) :rule or :premises (t54))
(step t56 (cl @p_429) :rule refl)
(step t57 (cl @p_446) :rule hole)
(step t58 (cl @p_448 @p_452 @p_451) :rule equiv_pos2)
(step t59 (cl @p_449) :rule cong :premises (t56 t57))
(step t60 (cl @p_450 @p_430) :rule implies_neg1)
(anchor :step t61)
(assume t61.a0 @p_430)
(step t61.t0 (cl @p_453) :rule forall_inst :args (@p_391))
(step t61.t1 (cl @p_439 @p_447) :rule or :premises (t61.t0))
(step t61.t2 (cl @p_440 @p_442 @p_430) :rule equiv_pos2)
(anchor :step t61.t3 :args ((?v0 Real) (:= (?v0 Real) ?v0)))
(step t61.t3.t0 (cl (= (= (fun_app$ x_coord_inv$ (fun_app$ x_coord$ ?v0)) ?v0) (= ?v0 (fun_app$ x_coord_inv$ (fun_app$ x_coord$ ?v0))))) :rule hole)
(step t61.t3 (cl @p_441) :rule bind)
(step t61.t4 (cl @p_430) :rule resolution :premises (t61.t2 t61.t3 a109) :args (@p_441 @p_26 @p_127 @p_26))
(step t61.t5 (cl @p_447) :rule resolution :premises (t61.t1 t61.t4) :args (@p_430 @p_26))
(step t61 (cl @p_439 @p_447) :rule subproof :discharge (t61.a0))
(step t62 (cl @p_450 @p_447) :rule resolution :premises (t60 t61) :args (@p_430 @p_14))
(step t63 (cl @p_450 @p_454) :rule implies_neg2)
(step t64 (cl @p_450 @p_450) :rule resolution :premises (t62 t63) :args (@p_447 @p_14))
(step t65 (cl @p_450) :rule contraction :premises (t64))
(step t66 (cl @p_451) :rule resolution :premises (t58 t59 t65) :args (@p_449 @p_26 @p_450 @p_26))
(step t67 (cl @p_440 @p_442 @p_430) :rule equiv_pos2)
(anchor :step t68 :args ((?v0 Real) (:= (?v0 Real) ?v0)))
(step t68.t0 (cl (= (= (fun_app$ x_coord_inv$ (fun_app$ x_coord$ ?v0)) ?v0) (= ?v0 (fun_app$ x_coord_inv$ (fun_app$ x_coord$ ?v0))))) :rule hole)
(step t68 (cl @p_441) :rule bind)
(step t69 (cl @p_430) :rule resolution :premises (t67 t68 a109) :args (@p_441 @p_26 @p_127 @p_26))
(step t70 (cl @p_439 @p_386) :rule implies :premises (t66))
(step t71 (cl @p_386) :rule resolution :premises (t70 t69) :args (@p_430 @p_26))
(step t72 (cl @p_431) :rule hole)
(step t73 (cl @p_433 @p_437 @p_436) :rule equiv_pos2)
(step t74 (cl @p_434) :rule cong :premises (t56 t72))
(step t75 (cl @p_435 @p_430) :rule implies_neg1)
(anchor :step t76)
(assume t76.a0 @p_430)
(step t76.t0 (cl @p_438) :rule forall_inst :args (@p_384))
(step t76.t1 (cl @p_439 @p_432) :rule or :premises (t76.t0))
(step t76.t2 (cl @p_432) :rule resolution :premises (t76.t1 t69) :args (@p_430 @p_26))
(step t76 (cl @p_439 @p_432) :rule subproof :discharge (t76.a0))
(step t77 (cl @p_435 @p_432) :rule resolution :premises (t75 t76) :args (@p_430 @p_14))
(step t78 (cl @p_435 @p_443) :rule implies_neg2)
(step t79 (cl @p_435 @p_435) :rule resolution :premises (t77 t78) :args (@p_432 @p_14))
(step t80 (cl @p_435) :rule contraction :premises (t79))
(step t81 (cl @p_436) :rule resolution :premises (t73 t74 t80) :args (@p_434 @p_26 @p_435 @p_26))
(step t82 (cl @p_439 @p_379) :rule implies :premises (t81))
(step t83 (cl @p_379) :rule resolution :premises (t82 t69) :args (@p_430 @p_26))
(step t84 (cl (! (=> (! (= @p_390 @p_383) :named @p_483) @p_393) :named @p_482) @p_483) :rule implies_neg1)
(anchor :step t85)
(assume t85.a0 @p_483)
(step t85.t0 (cl @p_482 @p_483) :rule implies_neg1)
(anchor :step t85.t1)
(assume t85.t1.a0 @p_483)
(step t85.t1.t0 (cl (= x_coord_inv$ x_coord_inv$)) :rule refl)
(step t85.t1.t1 (cl (= @p_383 @p_390)) :rule symm :premises (t85.t1.a0))
(step t85.t1.t2 (cl @p_483) :rule symm :premises (t85.t1.t1))
(step t85.t1.t3 (cl @p_393) :rule cong :premises (t85.t1.t0 t85.t1.t2))
(step t85.t1 (cl (! (not @p_483) :named @p_484) @p_393) :rule subproof :discharge (t85.t1.a0))
(step t85.t2 (cl @p_482 @p_393) :rule resolution :premises (t85.t0 t85.t1) :args (@p_483 @p_14))
(step t85.t3 (cl @p_482 @p_392) :rule implies_neg2)
(step t85.t4 (cl @p_482 @p_482) :rule resolution :premises (t85.t2 t85.t3) :args (@p_393 @p_14))
(step t85.t5 (cl @p_482) :rule contraction :premises (t85.t4))
(step t85.t6 (cl @p_484 @p_393) :rule implies :premises (t85.t5))
(step t85.t7 (cl @p_393) :rule resolution :premises (t85.t6 t85.a0) :args (@p_483 @p_26))
(step t85 (cl @p_484 @p_393) :rule subproof :discharge (t85.a0))
(step t86 (cl @p_482 @p_393) :rule resolution :premises (t84 t85) :args (@p_483 @p_14))
(step t87 (cl @p_482 @p_392) :rule implies_neg2)
(step t88 (cl @p_482 @p_482) :rule resolution :premises (t86 t87) :args (@p_393 @p_14))
(step t89 (cl @p_482) :rule contraction :premises (t88))
(step t90 (cl (= @p_348 @p_348)) :rule refl)
(step t91 (cl (= (! (not (! (= @p_322 (! (* 2 @p_390) :named @p_487)) :named @p_486)) :named @p_485) @p_485)) :rule refl)
(step t92 (cl (= (! (not (! (= @p_350 (! (* 2 @p_383) :named @p_490)) :named @p_489)) :named @p_488) @p_488)) :rule refl)
(step t93 (cl (= (! (not @p_484) :named @p_491) @p_483)) :rule hole)
(step t94 (cl (! (=> (! (and @p_349 @p_486 @p_489 @p_484) :named @p_493) (! (and (! (= @p_487 @p_490) :named @p_495) @p_484) :named @p_494)) :named @p_492) @p_493) :rule implies_neg1)
(anchor :step t95)
(assume t95.a0 @p_349)
(assume t95.a1 @p_486)
(assume t95.a2 @p_489)
(assume t95.a3 @p_484)
(step t95.t0 (cl (! (or (! (not (! (forall ((?v0 Real)) (= (fun_app$ uu$ ?v0) (* 2 (fun_app$ x_coord$ (+ 1 (* -1 ?v0)))))) :named @p_498)) :named @p_497) @p_486) :named @p_496)) :rule forall_inst :args (@p_318))
(step t95.t1 (cl @p_497 @p_486) :rule or :premises (t95.t0))
(step t95.t2 (cl (! (not (! (= @p_0 @p_498) :named @p_500)) :named @p_499) (! (not @p_0) :named @p_501) @p_498) :rule equiv_pos2)
(anchor :step t95.t3 :args ((?v0 Real) (:= (?v0 Real) ?v0)))
(step t95.t3.t0 (cl (= (fun_app$ uu$ ?v0) (fun_app$ uu$ ?v0))) :rule refl)
(step t95.t3.t1 (cl (! (= 2.0 2.0) :named @p_502)) :rule refl)
(step t95.t3.t2 (cl (! (= x_coord$ x_coord$) :named @p_503)) :rule refl)
(step t95.t3.t3 (cl (= (- 1.0 ?v0) (+ 1.0 (* -1/1 ?v0)))) :rule hole)
(step t95.t3.t4 (cl @p_120) :rule refl)
(step t95.t3.t5 (cl (= (* -1/1 ?v0) (* -1 ?v0))) :rule hole)
(step t95.t3.t6 (cl (= (+ 1.0 (* -1/1 ?v0)) (+ 1.0 (* -1 ?v0)))) :rule cong :premises (t95.t3.t4 t95.t3.t5))
(step t95.t3.t7 (cl (= (+ 1.0 (* -1 ?v0)) (+ 1 (* -1 ?v0)))) :rule hole)
(step t95.t3.t8 (cl (= (+ 1.0 (* -1/1 ?v0)) (+ 1 (* -1 ?v0)))) :rule trans :premises (t95.t3.t6 t95.t3.t7))
(step t95.t3.t9 (cl (= (- 1.0 ?v0) (+ 1 (* -1 ?v0)))) :rule trans :premises (t95.t3.t3 t95.t3.t8))
(step t95.t3.t10 (cl (= (fun_app$ x_coord$ (- 1.0 ?v0)) (fun_app$ x_coord$ (+ 1 (* -1 ?v0))))) :rule cong :premises (t95.t3.t2 t95.t3.t9))
(step t95.t3.t11 (cl (= (* 2.0 (fun_app$ x_coord$ (- 1.0 ?v0))) (* 2.0 (fun_app$ x_coord$ (+ 1 (* -1 ?v0)))))) :rule cong :premises (t95.t3.t1 t95.t3.t10))
(step t95.t3.t12 (cl (= (* 2.0 (fun_app$ x_coord$ (+ 1 (* -1 ?v0)))) (* 2 (fun_app$ x_coord$ (+ 1 (* -1 ?v0)))))) :rule hole)
(step t95.t3.t13 (cl (= (* 2.0 (fun_app$ x_coord$ (- 1.0 ?v0))) (* 2 (fun_app$ x_coord$ (+ 1 (* -1 ?v0)))))) :rule trans :premises (t95.t3.t11 t95.t3.t12))
(step t95.t3.t14 (cl (= (= (fun_app$ uu$ ?v0) (* 2.0 (fun_app$ x_coord$ (- 1.0 ?v0)))) (= (fun_app$ uu$ ?v0) (* 2 (fun_app$ x_coord$ (+ 1 (* -1 ?v0))))))) :rule cong :premises (t95.t3.t0 t95.t3.t13))
(step t95.t3 (cl @p_500) :rule bind)
(step t95.t4 (cl @p_498) :rule resolution :premises (t95.t2 t95.t3 a0) :args (@p_500 @p_26 @p_0 @p_26))
(step t95.t5 (cl @p_486) :rule resolution :premises (t95.t1 t95.t4) :args (@p_498 @p_26))
(step t95.t6 (cl (! (= @p_345 @p_345) :named @p_504)) :rule refl)
(step t95.t7 (cl (! (= (! (not @p_348) :named @p_506) @p_349) :named @p_505)) :rule hole)
(step t95.t8 (cl (! (not (! (= (! (or @p_345 @p_506) :named @p_509) (! (or @p_345 @p_349) :named @p_510)) :named @p_508)) :named @p_507) (! (not @p_509) :named @p_511) @p_510) :rule equiv_pos2)
(step t95.t9 (cl @p_508) :rule cong :premises (t95.t6 t95.t7))
(step t95.t10 (cl @p_345 @p_506) :rule or_neg :args (2))
(step t95.t11 (cl @p_509 @p_365) :rule or_neg :args (0))
(step t95.t12 (cl @p_509 (! (not @p_506) :named @p_512)) :rule or_neg :args (1))
(step t95.t13 (cl @p_509 @p_509) :rule resolution :premises (t95.t10 t95.t11 t95.t12) :args (@p_345 @p_14 @p_506 @p_14))
(step t95.t14 (cl @p_509) :rule contraction :premises (t95.t13))
(step t95.t15 (cl @p_510) :rule resolution :premises (t95.t8 t95.t9 t95.t14) :args (@p_508 @p_26 @p_509 @p_26))
(step t95.t16 (cl @p_345 @p_349) :rule or :premises (t95.t15))
(anchor :step t95.t17 :args ((:= (?v2 Real) @p_318) (:= (BOUND_VARIABLE_2117 Real) @p_319)))
(step t95.t17.t0 (cl (= (or (not (member$ ?v2 top$)) (not (member$ BOUND_VARIABLE_2117 top$)) (not (= (fun_app$ uu$ ?v2) (fun_app$ uu$ BOUND_VARIABLE_2117))) (= ?v2 BOUND_VARIABLE_2117)) @p_345)) :rule refl)
(step t95.t17 (cl @p_351) :rule sko_forall)
(step t95.t18 (cl @p_353 @p_16 @p_355) :rule equiv_pos1)
(step t95.t19 (cl @p_356) :rule forall_inst :args (uu$ top$))
(step t95.t20 (cl (! (or @p_497 @p_489) :named @p_513)) :rule forall_inst :args (@p_319))
(step t95.t21 (cl (! (= @p_487 @p_322) :named @p_514)) :rule symm :premises (t95.t5))
(step t95.t22 (cl @p_497 @p_489) :rule or :premises (t95.t20))
(step t95.t23 (cl @p_489) :rule resolution :premises (t95.t22 t95.t4) :args (@p_498 @p_26))
(step t95.t24 (cl @p_349 @p_345) :rule reordering :premises (t95.t16))
(step t95.t25 (cl @p_363 @p_366 @p_365) :rule equiv_pos2)
(step t95.t26 (cl @p_364) :rule cong :premises (t95.t17))
(step t95.t27 (cl @p_16 @p_355 @p_353) :rule reordering :premises (t95.t18))
(step t95.t28 (cl @p_357 @p_354) :rule or :premises (t95.t19))
(step t95.t29 (cl @p_367 @p_369 @p_358) :rule equiv_pos2)
(anchor :step t95.t30 :args ((?v0 Real_real_fun$) (?v1 Real_set$) (:= (?v0 Real_real_fun$) ?v0) (:= (?v1 Real_set$) ?v1)))
(step t95.t30.t0 (cl (= (inj_on$ ?v0 ?v1) (inj_on$ ?v0 ?v1))) :rule refl)
(anchor :step t95.t30.t1 :args ((?v2 Real) (:= (?v2 Real) ?v2)))
(step t95.t30.t1.t0 (cl (= (member$ ?v2 ?v1) (member$ ?v2 ?v1))) :rule refl)
(step t95.t30.t1.t1 (cl (= (forall ((?v3 Real)) (=> (and (member$ ?v3 ?v1) (= (fun_app$ ?v0 ?v2) (fun_app$ ?v0 ?v3))) (= ?v2 ?v3))) (forall ((?v3 Real)) (or (not (member$ ?v3 ?v1)) (not (= (fun_app$ ?v0 ?v2) (fun_app$ ?v0 ?v3))) (= ?v2 ?v3))))) :rule hole)
(step t95.t30.t1.t2 (cl (= (=> (member$ ?v2 ?v1) (forall ((?v3 Real)) (=> (and (member$ ?v3 ?v1) (= (fun_app$ ?v0 ?v2) (fun_app$ ?v0 ?v3))) (= ?v2 ?v3)))) (=> (member$ ?v2 ?v1) (forall ((?v3 Real)) (or (not (member$ ?v3 ?v1)) (not (= (fun_app$ ?v0 ?v2) (fun_app$ ?v0 ?v3))) (= ?v2 ?v3)))))) :rule cong :premises (t95.t30.t1.t0 t95.t30.t1.t1))
(step t95.t30.t1 (cl (= (forall ((?v2 Real)) (=> (member$ ?v2 ?v1) (forall ((?v3 Real)) (=> (and (member$ ?v3 ?v1) (= (fun_app$ ?v0 ?v2) (fun_app$ ?v0 ?v3))) (= ?v2 ?v3))))) (forall ((?v2 Real)) (=> (member$ ?v2 ?v1) (forall ((?v3 Real)) (or (not (member$ ?v3 ?v1)) (not (= (fun_app$ ?v0 ?v2) (fun_app$ ?v0 ?v3))) (= ?v2 ?v3))))))) :rule bind)
(step t95.t30.t2 (cl (= (forall ((?v2 Real)) (=> (member$ ?v2 ?v1) (forall ((?v3 Real)) (or (not (member$ ?v3 ?v1)) (not (= (fun_app$ ?v0 ?v2) (fun_app$ ?v0 ?v3))) (= ?v2 ?v3))))) (forall ((?v2 Real)) (or (not (member$ ?v2 ?v1)) (forall ((?v3 Real)) (or (not (member$ ?v3 ?v1)) (not (= (fun_app$ ?v0 ?v2) (fun_app$ ?v0 ?v3))) (= ?v2 ?v3))))))) :rule hole)
(step t95.t30.t3 (cl (= (forall ((?v2 Real)) (or (not (member$ ?v2 ?v1)) (forall ((?v3 Real)) (or (not (member$ ?v3 ?v1)) (not (= (fun_app$ ?v0 ?v2) (fun_app$ ?v0 ?v3))) (= ?v2 ?v3))))) (forall ((?v2 Real) (BOUND_VARIABLE_2117 Real)) (or (not (member$ ?v2 ?v1)) (or (not (member$ BOUND_VARIABLE_2117 ?v1)) (not (= (fun_app$ ?v0 ?v2) (fun_app$ ?v0 BOUND_VARIABLE_2117))) (= ?v2 BOUND_VARIABLE_2117)))))) :rule hole)
(anchor :step t95.t30.t4 :args ((?v2 Real) (BOUND_VARIABLE_2117 Real) (:= (?v2 Real) ?v2) (:= (BOUND_VARIABLE_2117 Real) BOUND_VARIABLE_2117)))
(step t95.t30.t4.t0 (cl (= (or (not (member$ ?v2 ?v1)) (or (not (member$ BOUND_VARIABLE_2117 ?v1)) (not (= (fun_app$ ?v0 ?v2) (fun_app$ ?v0 BOUND_VARIABLE_2117))) (= ?v2 BOUND_VARIABLE_2117))) (or (not (member$ ?v2 ?v1)) (not (member$ BOUND_VARIABLE_2117 ?v1)) (not (= (fun_app$ ?v0 ?v2) (fun_app$ ?v0 BOUND_VARIABLE_2117))) (= ?v2 BOUND_VARIABLE_2117)))) :rule hole)
(step t95.t30.t4 (cl (= (forall ((?v2 Real) (BOUND_VARIABLE_2117 Real)) (or (not (member$ ?v2 ?v1)) (or (not (member$ BOUND_VARIABLE_2117 ?v1)) (not (= (fun_app$ ?v0 ?v2) (fun_app$ ?v0 BOUND_VARIABLE_2117))) (= ?v2 BOUND_VARIABLE_2117)))) (forall ((?v2 Real) (BOUND_VARIABLE_2117 Real)) (or (not (member$ ?v2 ?v1)) (not (member$ BOUND_VARIABLE_2117 ?v1)) (not (= (fun_app$ ?v0 ?v2) (fun_app$ ?v0 BOUND_VARIABLE_2117))) (= ?v2 BOUND_VARIABLE_2117))))) :rule bind)
(step t95.t30.t5 (cl (= (forall ((?v2 Real)) (or (not (member$ ?v2 ?v1)) (forall ((?v3 Real)) (or (not (member$ ?v3 ?v1)) (not (= (fun_app$ ?v0 ?v2) (fun_app$ ?v0 ?v3))) (= ?v2 ?v3))))) (forall ((?v2 Real) (BOUND_VARIABLE_2117 Real)) (or (not (member$ ?v2 ?v1)) (not (member$ BOUND_VARIABLE_2117 ?v1)) (not (= (fun_app$ ?v0 ?v2) (fun_app$ ?v0 BOUND_VARIABLE_2117))) (= ?v2 BOUND_VARIABLE_2117))))) :rule trans :premises (t95.t30.t3 t95.t30.t4))
(step t95.t30.t6 (cl (= (forall ((?v2 Real)) (=> (member$ ?v2 ?v1) (forall ((?v3 Real)) (or (not (member$ ?v3 ?v1)) (not (= (fun_app$ ?v0 ?v2) (fun_app$ ?v0 ?v3))) (= ?v2 ?v3))))) (forall ((?v2 Real) (BOUND_VARIABLE_2117 Real)) (or (not (member$ ?v2 ?v1)) (not (member$ BOUND_VARIABLE_2117 ?v1)) (not (= (fun_app$ ?v0 ?v2) (fun_app$ ?v0 BOUND_VARIABLE_2117))) (= ?v2 BOUND_VARIABLE_2117))))) :rule trans :premises (t95.t30.t2 t95.t30.t5))
(step t95.t30.t7 (cl (= (forall ((?v2 Real)) (=> (member$ ?v2 ?v1) (forall ((?v3 Real)) (=> (and (member$ ?v3 ?v1) (= (fun_app$ ?v0 ?v2) (fun_app$ ?v0 ?v3))) (= ?v2 ?v3))))) (forall ((?v2 Real) (BOUND_VARIABLE_2117 Real)) (or (not (member$ ?v2 ?v1)) (not (member$ BOUND_VARIABLE_2117 ?v1)) (not (= (fun_app$ ?v0 ?v2) (fun_app$ ?v0 BOUND_VARIABLE_2117))) (= ?v2 BOUND_VARIABLE_2117))))) :rule trans :premises (t95.t30.t1 t95.t30.t6))
(step t95.t30.t8 (cl (= (= (inj_on$ ?v0 ?v1) (forall ((?v2 Real)) (=> (member$ ?v2 ?v1) (forall ((?v3 Real)) (=> (and (member$ ?v3 ?v1) (= (fun_app$ ?v0 ?v2) (fun_app$ ?v0 ?v3))) (= ?v2 ?v3)))))) (= (inj_on$ ?v0 ?v1) (forall ((?v2 Real) (BOUND_VARIABLE_2117 Real)) (or (not (member$ ?v2 ?v1)) (not (member$ BOUND_VARIABLE_2117 ?v1)) (not (= (fun_app$ ?v0 ?v2) (fun_app$ ?v0 BOUND_VARIABLE_2117))) (= ?v2 BOUND_VARIABLE_2117)))))) :rule cong :premises (t95.t30.t0 t95.t30.t7))
(step t95.t30 (cl @p_368) :rule bind)
(step t95.t31 (cl @p_358) :rule resolution :premises (t95.t29 t95.t30 a83) :args (@p_368 @p_26 @p_96 @p_26))
(step t95.t32 (cl @p_354) :rule resolution :premises (t95.t28 t95.t31) :args (@p_358 @p_26))
(step t95.t33 (cl @p_355) :rule resolution :premises (t95.t27 a14 t95.t32) :args (@p_16 @p_14 @p_354 @p_26))
(step t95.t34 (cl @p_365) :rule resolution :premises (t95.t25 t95.t26 t95.t33) :args (@p_364 @p_26 @p_355 @p_26))
(step t95.t35 (cl @p_349) :rule resolution :premises (t95.t24 t95.t34) :args (@p_345 @p_14))
(step t95.t36 (cl @p_494 (! (not @p_495) :named @p_515) @p_491) :rule and_neg)
(step t95.t37 (cl @p_495) :rule trans :premises (t95.t21 t95.t35 t95.t23))
(step t95.t38 (cl @p_494) :rule resolution :premises (t95.t36 t95.t37 t95.a3) :args (@p_495 @p_26 @p_484 @p_26))
(step t95 (cl @p_348 @p_485 @p_488 @p_491 @p_494) :rule subproof :discharge (t95.a0 t95.a1 t95.a2 t95.a3))
(step t96 (cl (! (not @p_493) :named @p_516) @p_349) :rule and_pos :args (0))
(step t97 (cl @p_516 @p_486) :rule and_pos :args (1))
(step t98 (cl @p_516 @p_489) :rule and_pos :args (2))
(step t99 (cl @p_516 @p_484) :rule and_pos :args (3))
(step t100 (cl @p_494 @p_516 @p_516 @p_516 @p_516) :rule resolution :premises (t95 t96 t97 t98 t99) :args (@p_349 @p_26 @p_486 @p_26 @p_489 @p_26 @p_484 @p_26))
(step t101 (cl @p_516 @p_516 @p_516 @p_516 @p_494) :rule reordering :premises (t100))
(step t102 (cl @p_516 @p_494) :rule contraction :premises (t101))
(step t103 (cl @p_492 @p_494) :rule resolution :premises (t94 t102) :args (@p_493 @p_14))
(step t104 (cl @p_492 (! (not @p_494) :named @p_517)) :rule implies_neg2)
(step t105 (cl @p_492 @p_492) :rule resolution :premises (t103 t104) :args (@p_494 @p_14))
(step t106 (cl @p_492) :rule contraction :premises (t105))
(anchor :step t107)
(assume t107.a0 @p_495)
(assume t107.a1 @p_484)
(step t107.t0 (cl (= @p_495 @p_483)) :rule hole)
(step t107.t1 (cl (= (! (= (! (+ @p_390 (! (* -1 @p_383) :named @p_520)) :named @p_519) 0.0) :named @p_518) @p_483)) :rule hole)
(step t107.t2 (cl (= @p_483 @p_518)) :rule symm :premises (t107.t1))
(step t107.t3 (cl @p_496) :rule forall_inst :args (@p_318))
(step t107.t4 (cl @p_497 @p_486) :rule or :premises (t107.t3))
(step t107.t5 (cl @p_499 @p_501 @p_498) :rule equiv_pos2)
(anchor :step t107.t6 :args ((?v0 Real) (:= (?v0 Real) ?v0)))
(step t107.t6.t0 (cl (= (fun_app$ uu$ ?v0) (fun_app$ uu$ ?v0))) :rule refl)
(step t107.t6.t1 (cl @p_502) :rule refl)
(step t107.t6.t2 (cl @p_503) :rule refl)
(step t107.t6.t3 (cl (= (- 1.0 ?v0) (+ 1.0 (* -1/1 ?v0)))) :rule hole)
(step t107.t6.t4 (cl @p_120) :rule refl)
(step t107.t6.t5 (cl (= (* -1/1 ?v0) (* -1 ?v0))) :rule hole)
(step t107.t6.t6 (cl (= (+ 1.0 (* -1/1 ?v0)) (+ 1.0 (* -1 ?v0)))) :rule cong :premises (t107.t6.t4 t107.t6.t5))
(step t107.t6.t7 (cl (= (+ 1.0 (* -1 ?v0)) (+ 1 (* -1 ?v0)))) :rule hole)
(step t107.t6.t8 (cl (= (+ 1.0 (* -1/1 ?v0)) (+ 1 (* -1 ?v0)))) :rule trans :premises (t107.t6.t6 t107.t6.t7))
(step t107.t6.t9 (cl (= (- 1.0 ?v0) (+ 1 (* -1 ?v0)))) :rule trans :premises (t107.t6.t3 t107.t6.t8))
(step t107.t6.t10 (cl (= (fun_app$ x_coord$ (- 1.0 ?v0)) (fun_app$ x_coord$ (+ 1 (* -1 ?v0))))) :rule cong :premises (t107.t6.t2 t107.t6.t9))
(step t107.t6.t11 (cl (= (* 2.0 (fun_app$ x_coord$ (- 1.0 ?v0))) (* 2.0 (fun_app$ x_coord$ (+ 1 (* -1 ?v0)))))) :rule cong :premises (t107.t6.t1 t107.t6.t10))
(step t107.t6.t12 (cl (= (* 2.0 (fun_app$ x_coord$ (+ 1 (* -1 ?v0)))) (* 2 (fun_app$ x_coord$ (+ 1 (* -1 ?v0)))))) :rule hole)
(step t107.t6.t13 (cl (= (* 2.0 (fun_app$ x_coord$ (- 1.0 ?v0))) (* 2 (fun_app$ x_coord$ (+ 1 (* -1 ?v0)))))) :rule trans :premises (t107.t6.t11 t107.t6.t12))
(step t107.t6.t14 (cl (= (= (fun_app$ uu$ ?v0) (* 2.0 (fun_app$ x_coord$ (- 1.0 ?v0)))) (= (fun_app$ uu$ ?v0) (* 2 (fun_app$ x_coord$ (+ 1 (* -1 ?v0))))))) :rule cong :premises (t107.t6.t0 t107.t6.t13))
(step t107.t6 (cl @p_500) :rule bind)
(step t107.t7 (cl @p_498) :rule resolution :premises (t107.t5 t107.t6 a0) :args (@p_500 @p_26 @p_0 @p_26))
(step t107.t8 (cl @p_486) :rule resolution :premises (t107.t4 t107.t7) :args (@p_498 @p_26))
(step t107.t9 (cl @p_504) :rule refl)
(step t107.t10 (cl @p_505) :rule hole)
(step t107.t11 (cl @p_507 @p_511 @p_510) :rule equiv_pos2)
(step t107.t12 (cl @p_508) :rule cong :premises (t107.t9 t107.t10))
(step t107.t13 (cl @p_345 @p_506) :rule or_neg :args (2))
(step t107.t14 (cl @p_509 @p_365) :rule or_neg :args (0))
(step t107.t15 (cl @p_509 @p_512) :rule or_neg :args (1))
(step t107.t16 (cl @p_509 @p_509) :rule resolution :premises (t107.t13 t107.t14 t107.t15) :args (@p_345 @p_14 @p_506 @p_14))
(step t107.t17 (cl @p_509) :rule contraction :premises (t107.t16))
(step t107.t18 (cl @p_510) :rule resolution :premises (t107.t11 t107.t12 t107.t17) :args (@p_508 @p_26 @p_509 @p_26))
(step t107.t19 (cl @p_345 @p_349) :rule or :premises (t107.t18))
(anchor :step t107.t20 :args ((:= (?v2 Real) @p_318) (:= (BOUND_VARIABLE_2117 Real) @p_319)))
(step t107.t20.t0 (cl (= (or (not (member$ ?v2 top$)) (not (member$ BOUND_VARIABLE_2117 top$)) (not (= (fun_app$ uu$ ?v2) (fun_app$ uu$ BOUND_VARIABLE_2117))) (= ?v2 BOUND_VARIABLE_2117)) @p_345)) :rule refl)
(step t107.t20 (cl @p_351) :rule sko_forall)
(step t107.t21 (cl @p_353 @p_16 @p_355) :rule equiv_pos1)
(step t107.t22 (cl @p_356) :rule forall_inst :args (uu$ top$))
(step t107.t23 (cl @p_513) :rule forall_inst :args (@p_319))
(step t107.t24 (cl @p_514) :rule symm :premises (t107.t8))
(step t107.t25 (cl @p_497 @p_489) :rule or :premises (t107.t23))
(step t107.t26 (cl @p_489) :rule resolution :premises (t107.t25 t107.t7) :args (@p_498 @p_26))
(step t107.t27 (cl @p_349 @p_345) :rule reordering :premises (t107.t19))
(step t107.t28 (cl @p_363 @p_366 @p_365) :rule equiv_pos2)
(step t107.t29 (cl @p_364) :rule cong :premises (t107.t20))
(step t107.t30 (cl @p_16 @p_355 @p_353) :rule reordering :premises (t107.t21))
(step t107.t31 (cl @p_357 @p_354) :rule or :premises (t107.t22))
(step t107.t32 (cl @p_367 @p_369 @p_358) :rule equiv_pos2)
(anchor :step t107.t33 :args ((?v0 Real_real_fun$) (?v1 Real_set$) (:= (?v0 Real_real_fun$) ?v0) (:= (?v1 Real_set$) ?v1)))
(step t107.t33.t0 (cl (= (inj_on$ ?v0 ?v1) (inj_on$ ?v0 ?v1))) :rule refl)
(anchor :step t107.t33.t1 :args ((?v2 Real) (:= (?v2 Real) ?v2)))
(step t107.t33.t1.t0 (cl (= (member$ ?v2 ?v1) (member$ ?v2 ?v1))) :rule refl)
(step t107.t33.t1.t1 (cl (= (forall ((?v3 Real)) (=> (and (member$ ?v3 ?v1) (= (fun_app$ ?v0 ?v2) (fun_app$ ?v0 ?v3))) (= ?v2 ?v3))) (forall ((?v3 Real)) (or (not (member$ ?v3 ?v1)) (not (= (fun_app$ ?v0 ?v2) (fun_app$ ?v0 ?v3))) (= ?v2 ?v3))))) :rule hole)
(step t107.t33.t1.t2 (cl (= (=> (member$ ?v2 ?v1) (forall ((?v3 Real)) (=> (and (member$ ?v3 ?v1) (= (fun_app$ ?v0 ?v2) (fun_app$ ?v0 ?v3))) (= ?v2 ?v3)))) (=> (member$ ?v2 ?v1) (forall ((?v3 Real)) (or (not (member$ ?v3 ?v1)) (not (= (fun_app$ ?v0 ?v2) (fun_app$ ?v0 ?v3))) (= ?v2 ?v3)))))) :rule cong :premises (t107.t33.t1.t0 t107.t33.t1.t1))
(step t107.t33.t1 (cl (= (forall ((?v2 Real)) (=> (member$ ?v2 ?v1) (forall ((?v3 Real)) (=> (and (member$ ?v3 ?v1) (= (fun_app$ ?v0 ?v2) (fun_app$ ?v0 ?v3))) (= ?v2 ?v3))))) (forall ((?v2 Real)) (=> (member$ ?v2 ?v1) (forall ((?v3 Real)) (or (not (member$ ?v3 ?v1)) (not (= (fun_app$ ?v0 ?v2) (fun_app$ ?v0 ?v3))) (= ?v2 ?v3))))))) :rule bind)
(step t107.t33.t2 (cl (= (forall ((?v2 Real)) (=> (member$ ?v2 ?v1) (forall ((?v3 Real)) (or (not (member$ ?v3 ?v1)) (not (= (fun_app$ ?v0 ?v2) (fun_app$ ?v0 ?v3))) (= ?v2 ?v3))))) (forall ((?v2 Real)) (or (not (member$ ?v2 ?v1)) (forall ((?v3 Real)) (or (not (member$ ?v3 ?v1)) (not (= (fun_app$ ?v0 ?v2) (fun_app$ ?v0 ?v3))) (= ?v2 ?v3))))))) :rule hole)
(step t107.t33.t3 (cl (= (forall ((?v2 Real)) (or (not (member$ ?v2 ?v1)) (forall ((?v3 Real)) (or (not (member$ ?v3 ?v1)) (not (= (fun_app$ ?v0 ?v2) (fun_app$ ?v0 ?v3))) (= ?v2 ?v3))))) (forall ((?v2 Real) (BOUND_VARIABLE_2117 Real)) (or (not (member$ ?v2 ?v1)) (or (not (member$ BOUND_VARIABLE_2117 ?v1)) (not (= (fun_app$ ?v0 ?v2) (fun_app$ ?v0 BOUND_VARIABLE_2117))) (= ?v2 BOUND_VARIABLE_2117)))))) :rule hole)
(anchor :step t107.t33.t4 :args ((?v2 Real) (BOUND_VARIABLE_2117 Real) (:= (?v2 Real) ?v2) (:= (BOUND_VARIABLE_2117 Real) BOUND_VARIABLE_2117)))
(step t107.t33.t4.t0 (cl (= (or (not (member$ ?v2 ?v1)) (or (not (member$ BOUND_VARIABLE_2117 ?v1)) (not (= (fun_app$ ?v0 ?v2) (fun_app$ ?v0 BOUND_VARIABLE_2117))) (= ?v2 BOUND_VARIABLE_2117))) (or (not (member$ ?v2 ?v1)) (not (member$ BOUND_VARIABLE_2117 ?v1)) (not (= (fun_app$ ?v0 ?v2) (fun_app$ ?v0 BOUND_VARIABLE_2117))) (= ?v2 BOUND_VARIABLE_2117)))) :rule hole)
(step t107.t33.t4 (cl (= (forall ((?v2 Real) (BOUND_VARIABLE_2117 Real)) (or (not (member$ ?v2 ?v1)) (or (not (member$ BOUND_VARIABLE_2117 ?v1)) (not (= (fun_app$ ?v0 ?v2) (fun_app$ ?v0 BOUND_VARIABLE_2117))) (= ?v2 BOUND_VARIABLE_2117)))) (forall ((?v2 Real) (BOUND_VARIABLE_2117 Real)) (or (not (member$ ?v2 ?v1)) (not (member$ BOUND_VARIABLE_2117 ?v1)) (not (= (fun_app$ ?v0 ?v2) (fun_app$ ?v0 BOUND_VARIABLE_2117))) (= ?v2 BOUND_VARIABLE_2117))))) :rule bind)
(step t107.t33.t5 (cl (= (forall ((?v2 Real)) (or (not (member$ ?v2 ?v1)) (forall ((?v3 Real)) (or (not (member$ ?v3 ?v1)) (not (= (fun_app$ ?v0 ?v2) (fun_app$ ?v0 ?v3))) (= ?v2 ?v3))))) (forall ((?v2 Real) (BOUND_VARIABLE_2117 Real)) (or (not (member$ ?v2 ?v1)) (not (member$ BOUND_VARIABLE_2117 ?v1)) (not (= (fun_app$ ?v0 ?v2) (fun_app$ ?v0 BOUND_VARIABLE_2117))) (= ?v2 BOUND_VARIABLE_2117))))) :rule trans :premises (t107.t33.t3 t107.t33.t4))
(step t107.t33.t6 (cl (= (forall ((?v2 Real)) (=> (member$ ?v2 ?v1) (forall ((?v3 Real)) (or (not (member$ ?v3 ?v1)) (not (= (fun_app$ ?v0 ?v2) (fun_app$ ?v0 ?v3))) (= ?v2 ?v3))))) (forall ((?v2 Real) (BOUND_VARIABLE_2117 Real)) (or (not (member$ ?v2 ?v1)) (not (member$ BOUND_VARIABLE_2117 ?v1)) (not (= (fun_app$ ?v0 ?v2) (fun_app$ ?v0 BOUND_VARIABLE_2117))) (= ?v2 BOUND_VARIABLE_2117))))) :rule trans :premises (t107.t33.t2 t107.t33.t5))
(step t107.t33.t7 (cl (= (forall ((?v2 Real)) (=> (member$ ?v2 ?v1) (forall ((?v3 Real)) (=> (and (member$ ?v3 ?v1) (= (fun_app$ ?v0 ?v2) (fun_app$ ?v0 ?v3))) (= ?v2 ?v3))))) (forall ((?v2 Real) (BOUND_VARIABLE_2117 Real)) (or (not (member$ ?v2 ?v1)) (not (member$ BOUND_VARIABLE_2117 ?v1)) (not (= (fun_app$ ?v0 ?v2) (fun_app$ ?v0 BOUND_VARIABLE_2117))) (= ?v2 BOUND_VARIABLE_2117))))) :rule trans :premises (t107.t33.t1 t107.t33.t6))
(step t107.t33.t8 (cl (= (= (inj_on$ ?v0 ?v1) (forall ((?v2 Real)) (=> (member$ ?v2 ?v1) (forall ((?v3 Real)) (=> (and (member$ ?v3 ?v1) (= (fun_app$ ?v0 ?v2) (fun_app$ ?v0 ?v3))) (= ?v2 ?v3)))))) (= (inj_on$ ?v0 ?v1) (forall ((?v2 Real) (BOUND_VARIABLE_2117 Real)) (or (not (member$ ?v2 ?v1)) (not (member$ BOUND_VARIABLE_2117 ?v1)) (not (= (fun_app$ ?v0 ?v2) (fun_app$ ?v0 BOUND_VARIABLE_2117))) (= ?v2 BOUND_VARIABLE_2117)))))) :rule cong :premises (t107.t33.t0 t107.t33.t7))
(step t107.t33 (cl @p_368) :rule bind)
(step t107.t34 (cl @p_358) :rule resolution :premises (t107.t32 t107.t33 a83) :args (@p_368 @p_26 @p_96 @p_26))
(step t107.t35 (cl @p_354) :rule resolution :premises (t107.t31 t107.t34) :args (@p_358 @p_26))
(step t107.t36 (cl @p_355) :rule resolution :premises (t107.t30 a14 t107.t35) :args (@p_16 @p_14 @p_354 @p_26))
(step t107.t37 (cl @p_365) :rule resolution :premises (t107.t28 t107.t29 t107.t36) :args (@p_364 @p_26 @p_355 @p_26))
(step t107.t38 (cl @p_349) :rule resolution :premises (t107.t27 t107.t37) :args (@p_345 @p_14))
(step t107.t39 (cl (= (! (not @p_518) :named @p_521) @p_484)) :rule cong :premises (t107.t1))
(step t107.t40 (cl (not (! (= @p_495 @p_518) :named @p_522)) @p_515 @p_518) :rule equiv_pos2)
(step t107.t41 (cl @p_522) :rule trans :premises (t107.t0 t107.t2))
(step t107.t42 (cl @p_495) :rule trans :premises (t107.t24 t107.t38 t107.t26))
(step t107.t43 (cl @p_518) :rule resolution :premises (t107.t40 t107.t41 t107.t42) :args (@p_522 @p_26 @p_495 @p_26))
(step t107.t44 (cl (not (! (= @p_484 @p_521) :named @p_523)) @p_491 @p_521) :rule equiv_pos2)
(step t107.t45 (cl @p_523) :rule symm :premises (t107.t39))
(step t107.t46 (cl @p_521) :rule resolution :premises (t107.t44 t107.t45 t107.a1) :args (@p_523 @p_26 @p_484 @p_26))
(step t107.t47 (cl) :rule resolution :premises (t107.t43 t107.t46) :args (@p_518 @p_14))
(step t107 (cl @p_515 @p_491 @p_26) :rule subproof :discharge (t107.a0 t107.a1))
(step t108 (cl @p_517 @p_495) :rule and_pos :args (0))
(step t109 (cl @p_517 @p_484) :rule and_pos :args (1))
(step t110 (cl @p_26 @p_517 @p_517) :rule resolution :premises (t107 t108 t109) :args (@p_495 @p_26 @p_484 @p_26))
(step t111 (cl @p_517 @p_517 @p_26) :rule reordering :premises (t110))
(step t112 (cl (= (! (=> @p_494 @p_26) :named @p_524) @p_517)) :rule implies_simplify)
(step t113 (cl @p_516 @p_494) :rule implies :premises (t106))
(step t114 (cl @p_524 @p_494) :rule implies_neg1)
(step t115 (cl @p_517 @p_26) :rule contraction :premises (t111))
(step t116 (cl @p_524 @p_26) :rule resolution :premises (t114 t115) :args (@p_494 @p_14))
(step t117 (cl @p_524 @p_475) :rule implies_neg2)
(step t118 (cl @p_524 @p_524) :rule resolution :premises (t116 t117) :args (@p_26 @p_14))
(step t119 (cl @p_524) :rule contraction :premises (t118))
(step t120 (cl (not @p_524) @p_517) :rule equiv1 :premises (t112))
(step t121 (cl @p_517) :rule resolution :premises (t119 t120) :args (@p_524 @p_14))
(step t122 (cl @p_516) :rule resolution :premises (t113 t121) :args (@p_494 @p_14))
(step t123 (cl (not (! (= (! (or @p_348 @p_485 @p_488 @p_491) :named @p_526) (! (or @p_348 @p_485 @p_488 @p_483) :named @p_527)) :named @p_525)) (not @p_526) @p_527) :rule equiv_pos2)
(step t124 (cl @p_525) :rule cong :premises (t90 t91 t92 t93))
(step t125 (cl @p_348 @p_485 @p_488 @p_491) :rule not_and :premises (t122))
(step t126 (cl @p_526 @p_506) :rule or_neg :args (0))
(step t127 (cl @p_526 (not @p_485)) :rule or_neg :args (1))
(step t128 (cl @p_526 (not @p_488)) :rule or_neg :args (2))
(step t129 (cl @p_526 (not @p_491)) :rule or_neg :args (3))
(step t130 (cl @p_526 @p_526 @p_526 @p_526) :rule resolution :premises (t125 t126 t127 t128 t129) :args (@p_348 @p_14 @p_485 @p_14 @p_488 @p_14 @p_491 @p_14))
(step t131 (cl @p_526) :rule contraction :premises (t130))
(step t132 (cl @p_527) :rule resolution :premises (t123 t124 t131) :args (@p_525 @p_26 @p_526 @p_26))
(step t133 (cl @p_504) :rule refl)
(step t134 (cl @p_505) :rule hole)
(step t135 (cl @p_507 @p_511 @p_510) :rule equiv_pos2)
(step t136 (cl @p_508) :rule cong :premises (t133 t134))
(step t137 (cl @p_345 @p_506) :rule or_neg :args (2))
(step t138 (cl @p_509 @p_365) :rule or_neg :args (0))
(step t139 (cl @p_509 @p_512) :rule or_neg :args (1))
(step t140 (cl @p_509 @p_509) :rule resolution :premises (t137 t138 t139) :args (@p_345 @p_14 @p_506 @p_14))
(step t141 (cl @p_509) :rule contraction :premises (t140))
(step t142 (cl @p_510) :rule resolution :premises (t135 t136 t141) :args (@p_508 @p_26 @p_509 @p_26))
(step t143 (cl @p_345 @p_349) :rule or :premises (t142))
(anchor :step t144 :args ((:= (?v2 Real) @p_318) (:= (BOUND_VARIABLE_2117 Real) @p_319)))
(step t144.t0 (cl (= (or (not (member$ ?v2 top$)) (not (member$ BOUND_VARIABLE_2117 top$)) (not (= (fun_app$ uu$ ?v2) (fun_app$ uu$ BOUND_VARIABLE_2117))) (= ?v2 BOUND_VARIABLE_2117)) @p_345)) :rule refl)
(step t144 (cl @p_351) :rule sko_forall)
(step t145 (cl @p_353 @p_16 @p_355) :rule equiv_pos1)
(step t146 (cl @p_356) :rule forall_inst :args (uu$ top$))
(step t147 (cl @p_496) :rule forall_inst :args (@p_318))
(step t148 (cl @p_513) :rule forall_inst :args (@p_319))
(step t149 (cl (= @p_373 @p_328)) :rule hole)
(anchor :step t150)
(assume t150.a0 @p_379)
(assume t150.a1 @p_386)
(assume t150.a2 @p_393)
(assume t150.a3 @p_327)
(step t150.t0 (cl (= (! (< (! (+ @p_329 @p_398 (! (* -1/1 @p_399) :named @p_530) @p_401) :named @p_529) (! (+ 0.0 1.0 @p_404 0.0) :named @p_531)) :named @p_528) (! (not (! (>= @p_529 @p_531) :named @p_533)) :named @p_532))) :rule hole)
(step t150.t1 (cl (= @p_529 (! (+ @p_318 @p_330 @p_319 @p_382 @p_530 @p_389 @p_381) :named @p_534))) :rule hole)
(step t150.t2 (cl @p_409) :rule refl)
(step t150.t3 (cl (= @p_330 @p_330)) :rule refl)
(step t150.t4 (cl (= @p_319 @p_319)) :rule refl)
(step t150.t5 (cl (= @p_382 @p_382)) :rule refl)
(step t150.t6 (cl (= @p_530 (! (+ @p_326 @p_388) :named @p_535))) :rule hole)
(step t150.t7 (cl @p_410) :rule refl)
(step t150.t8 (cl (= @p_381 @p_381)) :rule refl)
(step t150.t9 (cl (= @p_534 (! (+ @p_318 @p_330 @p_319 @p_382 @p_535 @p_389 @p_381) :named @p_536))) :rule cong :premises (t150.t2 t150.t3 t150.t4 t150.t5 t150.t6 t150.t7 t150.t8))
(step t150.t10 (cl (= @p_536 0.0)) :rule hole)
(step t150.t11 (cl (= @p_534 0.0)) :rule trans :premises (t150.t9 t150.t10))
(step t150.t12 (cl (= @p_529 0.0)) :rule trans :premises (t150.t1 t150.t11))
(step t150.t13 (cl (= 0.0 0.0)) :rule refl)
(step t150.t14 (cl @p_120) :rule refl)
(step t150.t15 (cl @p_413) :rule hole)
(step t150.t16 (cl (= @p_531 (! (+ 0.0 1.0 -1/1 0.0) :named @p_537))) :rule cong :premises (t150.t13 t150.t14 t150.t15 t150.t13))
(step t150.t17 (cl (= @p_537 0.0)) :rule hole)
(step t150.t18 (cl (= @p_531 0.0)) :rule trans :premises (t150.t16 t150.t17))
(step t150.t19 (cl (= @p_533 @p_415)) :rule cong :premises (t150.t12 t150.t18))
(step t150.t20 (cl @p_416) :rule hole)
(step t150.t21 (cl (= @p_533 @p_14)) :rule trans :premises (t150.t19 t150.t20))
(step t150.t22 (cl (= @p_532 @p_417)) :rule cong :premises (t150.t21))
(step t150.t23 (cl @p_418) :rule hole)
(step t150.t24 (cl (= @p_532 @p_26)) :rule trans :premises (t150.t22 t150.t23))
(step t150.t25 (cl @p_333) :rule hole)
(step t150.t26 (cl @p_337) :rule hole)
(step t150.t27 (cl @p_338) :rule cong :premises (t150.t26))
(step t150.t28 (cl @p_360) :rule trans :premises (t150.t25 t150.t27))
(step t150.t29 (cl @p_428) :rule hole)
(step t150.t30 (cl (=> (! (and @p_420 @p_445) :named @p_538) (! (= @p_530 @p_404) :named @p_539))) :rule la_mult_neg)
(step t150.t31 (cl @p_423) :rule equiv_simplify)
(step t150.t32 (cl @p_444) :rule hole)
(step t150.t33 (cl @p_458) :rule hole)
(step t150.t34 (cl (not (! (= @p_528 @p_26) :named @p_540)) (not @p_528) @p_26) :rule equiv_pos2)
(step t150.t35 (cl @p_540) :rule trans :premises (t150.t0 t150.t24))
(step t150.t36 (cl @p_361 @p_464 (not @p_539) @p_469 @p_528) :rule la_generic :args (1.0 -1/1 -1/1 -1/1 1.0))
(step t150.t37 (cl (not (! (= @p_327 @p_334) :named @p_541)) @p_373 @p_334) :rule equiv_pos2)
(step t150.t38 (cl @p_541) :rule symm :premises (t150.t28))
(step t150.t39 (cl @p_334) :rule resolution :premises (t150.t37 t150.t38 t150.a3) :args (@p_541 @p_26 @p_327 @p_26))
(step t150.t40 (cl @p_465 @p_378 @p_426) :rule equiv_pos2)
(step t150.t41 (cl @p_466) :rule symm :premises (t150.t29))
(step t150.t42 (cl @p_426) :rule resolution :premises (t150.t40 t150.t41 t83) :args (@p_466 @p_26 @p_379 @p_26))
(step t150.t43 (cl (not @p_538) @p_539) :rule implies :premises (t150.t30))
(step t150.t44 (cl @p_538 @p_461 @p_460) :rule and_neg)
(step t150.t45 (cl @p_462 @p_420) :rule equiv1 :premises (t150.t31))
(step t150.t46 (cl @p_424) :rule rare_rewrite :args ("evaluate"))
(step t150.t47 (cl @p_420) :rule resolution :premises (t150.t45 t150.t46) :args (@p_424 @p_26))
(step t150.t48 (cl @p_467 @p_385 @p_445) :rule equiv_pos2)
(step t150.t49 (cl @p_468) :rule symm :premises (t150.t32))
(step t150.t50 (cl @p_445) :rule resolution :premises (t150.t48 t150.t49 t71) :args (@p_468 @p_26 @p_386 @p_26))
(step t150.t51 (cl @p_538) :rule resolution :premises (t150.t44 t150.t47 t150.t50) :args (@p_420 @p_26 @p_445 @p_26))
(step t150.t52 (cl @p_539) :rule resolution :premises (t150.t43 t150.t51) :args (@p_538 @p_26))
(step t150.t53 (cl @p_470 @p_392 @p_456) :rule equiv_pos2)
(step t150.t54 (cl @p_471) :rule symm :premises (t150.t33))
(step t150.t55 (cl @p_456) :rule resolution :premises (t150.t53 t150.t54 t150.a2) :args (@p_471 @p_26 @p_393 @p_26))
(step t150.t56 (cl @p_528) :rule resolution :premises (t150.t36 t150.t39 t150.t42 t150.t52 t150.t55) :args (@p_334 @p_26 @p_426 @p_26 @p_539 @p_26 @p_456 @p_26))
(step t150.t57 (cl @p_26) :rule resolution :premises (t150.t34 t150.t35 t150.t56) :args (@p_540 @p_26 @p_528 @p_26))
(step t150 (cl @p_378 @p_385 @p_392 @p_373 @p_26) :rule subproof :discharge (t150.a0 t150.a1 t150.a2 t150.a3))
(step t151 (cl (! (not (! (and @p_379 @p_386 @p_393 @p_327) :named @p_543)) :named @p_542) @p_379) :rule and_pos :args (0))
(step t152 (cl @p_542 @p_386) :rule and_pos :args (1))
(step t153 (cl @p_542 @p_393) :rule and_pos :args (2))
(step t154 (cl @p_542 @p_327) :rule and_pos :args (3))
(step t155 (cl @p_26 @p_542 @p_542 @p_542 @p_542) :rule resolution :premises (t150 t151 t152 t153 t154) :args (@p_379 @p_26 @p_386 @p_26 @p_393 @p_26 @p_327 @p_26))
(step t156 (cl @p_542 @p_542 @p_542 @p_542 @p_26) :rule reordering :premises (t155))
(step t157 (cl (= (! (=> @p_543 @p_26) :named @p_544) @p_542)) :rule implies_simplify)
(step t158 (cl @p_544 @p_543) :rule implies_neg1)
(step t159 (cl @p_542 @p_26) :rule contraction :premises (t156))
(step t160 (cl @p_544 @p_26) :rule resolution :premises (t158 t159) :args (@p_543 @p_14))
(step t161 (cl @p_544 @p_475) :rule implies_neg2)
(step t162 (cl @p_544 @p_544) :rule resolution :premises (t160 t161) :args (@p_26 @p_14))
(step t163 (cl @p_544) :rule contraction :premises (t162))
(step t164 (cl (not @p_544) @p_542) :rule equiv1 :premises (t157))
(step t165 (cl @p_542) :rule resolution :premises (t163 t164) :args (@p_544 @p_14))
(step t166 (cl (not (! (= (! (or @p_378 @p_385 @p_392 @p_373) :named @p_546) (! (or @p_378 @p_385 @p_392 @p_328) :named @p_547)) :named @p_545)) (not @p_546) @p_547) :rule equiv_pos2)
(step t167 (cl @p_545) :rule cong :premises (t25 t26 t27 t149))
(step t168 (cl @p_378 @p_385 @p_392 @p_373) :rule not_and :premises (t165))
(step t169 (cl @p_546 @p_479) :rule or_neg :args (0))
(step t170 (cl @p_546 @p_480) :rule or_neg :args (1))
(step t171 (cl @p_546 @p_481) :rule or_neg :args (2))
(step t172 (cl @p_546 (not @p_373)) :rule or_neg :args (3))
(step t173 (cl @p_546 @p_546 @p_546 @p_546) :rule resolution :premises (t168 t169 t170 t171 t172) :args (@p_378 @p_14 @p_385 @p_14 @p_392 @p_14 @p_373 @p_14))
(step t174 (cl @p_546) :rule contraction :premises (t173))
(step t175 (cl @p_547) :rule resolution :premises (t166 t167 t174) :args (@p_545 @p_26 @p_546 @p_26))
(step t176 (cl @p_378 @p_385 @p_392 @p_328) :rule or :premises (t175))
(step t177 (cl @p_317 @p_323 @p_327) :rule or :premises (t24))
(step t178 (cl @p_324 @p_385 @p_378 @p_392) :rule reordering :premises (t55))
(step t179 (cl @p_484 @p_393) :rule implies :premises (t89))
(step t180 (cl @p_348 @p_485 @p_488 @p_483) :rule or :premises (t132))
(step t181 (cl @p_349 @p_345) :rule reordering :premises (t143))
(step t182 (cl @p_363 @p_366 @p_365) :rule equiv_pos2)
(step t183 (cl @p_364) :rule cong :premises (t144))
(step t184 (cl @p_16 @p_355 @p_353) :rule reordering :premises (t145))
(step t185 (cl @p_357 @p_354) :rule or :premises (t146))
(step t186 (cl @p_367 @p_369 @p_358) :rule equiv_pos2)
(anchor :step t187 :args ((?v0 Real_real_fun$) (?v1 Real_set$) (:= (?v0 Real_real_fun$) ?v0) (:= (?v1 Real_set$) ?v1)))
(step t187.t0 (cl (= (inj_on$ ?v0 ?v1) (inj_on$ ?v0 ?v1))) :rule refl)
(anchor :step t187.t1 :args ((?v2 Real) (:= (?v2 Real) ?v2)))
(step t187.t1.t0 (cl (= (member$ ?v2 ?v1) (member$ ?v2 ?v1))) :rule refl)
(step t187.t1.t1 (cl (= (forall ((?v3 Real)) (=> (and (member$ ?v3 ?v1) (= (fun_app$ ?v0 ?v2) (fun_app$ ?v0 ?v3))) (= ?v2 ?v3))) (forall ((?v3 Real)) (or (not (member$ ?v3 ?v1)) (not (= (fun_app$ ?v0 ?v2) (fun_app$ ?v0 ?v3))) (= ?v2 ?v3))))) :rule hole)
(step t187.t1.t2 (cl (= (=> (member$ ?v2 ?v1) (forall ((?v3 Real)) (=> (and (member$ ?v3 ?v1) (= (fun_app$ ?v0 ?v2) (fun_app$ ?v0 ?v3))) (= ?v2 ?v3)))) (=> (member$ ?v2 ?v1) (forall ((?v3 Real)) (or (not (member$ ?v3 ?v1)) (not (= (fun_app$ ?v0 ?v2) (fun_app$ ?v0 ?v3))) (= ?v2 ?v3)))))) :rule cong :premises (t187.t1.t0 t187.t1.t1))
(step t187.t1 (cl (= (forall ((?v2 Real)) (=> (member$ ?v2 ?v1) (forall ((?v3 Real)) (=> (and (member$ ?v3 ?v1) (= (fun_app$ ?v0 ?v2) (fun_app$ ?v0 ?v3))) (= ?v2 ?v3))))) (forall ((?v2 Real)) (=> (member$ ?v2 ?v1) (forall ((?v3 Real)) (or (not (member$ ?v3 ?v1)) (not (= (fun_app$ ?v0 ?v2) (fun_app$ ?v0 ?v3))) (= ?v2 ?v3))))))) :rule bind)
(step t187.t2 (cl (= (forall ((?v2 Real)) (=> (member$ ?v2 ?v1) (forall ((?v3 Real)) (or (not (member$ ?v3 ?v1)) (not (= (fun_app$ ?v0 ?v2) (fun_app$ ?v0 ?v3))) (= ?v2 ?v3))))) (forall ((?v2 Real)) (or (not (member$ ?v2 ?v1)) (forall ((?v3 Real)) (or (not (member$ ?v3 ?v1)) (not (= (fun_app$ ?v0 ?v2) (fun_app$ ?v0 ?v3))) (= ?v2 ?v3))))))) :rule hole)
(step t187.t3 (cl (= (forall ((?v2 Real)) (or (not (member$ ?v2 ?v1)) (forall ((?v3 Real)) (or (not (member$ ?v3 ?v1)) (not (= (fun_app$ ?v0 ?v2) (fun_app$ ?v0 ?v3))) (= ?v2 ?v3))))) (forall ((?v2 Real) (BOUND_VARIABLE_2117 Real)) (or (not (member$ ?v2 ?v1)) (or (not (member$ BOUND_VARIABLE_2117 ?v1)) (not (= (fun_app$ ?v0 ?v2) (fun_app$ ?v0 BOUND_VARIABLE_2117))) (= ?v2 BOUND_VARIABLE_2117)))))) :rule hole)
(anchor :step t187.t4 :args ((?v2 Real) (BOUND_VARIABLE_2117 Real) (:= (?v2 Real) ?v2) (:= (BOUND_VARIABLE_2117 Real) BOUND_VARIABLE_2117)))
(step t187.t4.t0 (cl (= (or (not (member$ ?v2 ?v1)) (or (not (member$ BOUND_VARIABLE_2117 ?v1)) (not (= (fun_app$ ?v0 ?v2) (fun_app$ ?v0 BOUND_VARIABLE_2117))) (= ?v2 BOUND_VARIABLE_2117))) (or (not (member$ ?v2 ?v1)) (not (member$ BOUND_VARIABLE_2117 ?v1)) (not (= (fun_app$ ?v0 ?v2) (fun_app$ ?v0 BOUND_VARIABLE_2117))) (= ?v2 BOUND_VARIABLE_2117)))) :rule hole)
(step t187.t4 (cl (= (forall ((?v2 Real) (BOUND_VARIABLE_2117 Real)) (or (not (member$ ?v2 ?v1)) (or (not (member$ BOUND_VARIABLE_2117 ?v1)) (not (= (fun_app$ ?v0 ?v2) (fun_app$ ?v0 BOUND_VARIABLE_2117))) (= ?v2 BOUND_VARIABLE_2117)))) (forall ((?v2 Real) (BOUND_VARIABLE_2117 Real)) (or (not (member$ ?v2 ?v1)) (not (member$ BOUND_VARIABLE_2117 ?v1)) (not (= (fun_app$ ?v0 ?v2) (fun_app$ ?v0 BOUND_VARIABLE_2117))) (= ?v2 BOUND_VARIABLE_2117))))) :rule bind)
(step t187.t5 (cl (= (forall ((?v2 Real)) (or (not (member$ ?v2 ?v1)) (forall ((?v3 Real)) (or (not (member$ ?v3 ?v1)) (not (= (fun_app$ ?v0 ?v2) (fun_app$ ?v0 ?v3))) (= ?v2 ?v3))))) (forall ((?v2 Real) (BOUND_VARIABLE_2117 Real)) (or (not (member$ ?v2 ?v1)) (not (member$ BOUND_VARIABLE_2117 ?v1)) (not (= (fun_app$ ?v0 ?v2) (fun_app$ ?v0 BOUND_VARIABLE_2117))) (= ?v2 BOUND_VARIABLE_2117))))) :rule trans :premises (t187.t3 t187.t4))
(step t187.t6 (cl (= (forall ((?v2 Real)) (=> (member$ ?v2 ?v1) (forall ((?v3 Real)) (or (not (member$ ?v3 ?v1)) (not (= (fun_app$ ?v0 ?v2) (fun_app$ ?v0 ?v3))) (= ?v2 ?v3))))) (forall ((?v2 Real) (BOUND_VARIABLE_2117 Real)) (or (not (member$ ?v2 ?v1)) (not (member$ BOUND_VARIABLE_2117 ?v1)) (not (= (fun_app$ ?v0 ?v2) (fun_app$ ?v0 BOUND_VARIABLE_2117))) (= ?v2 BOUND_VARIABLE_2117))))) :rule trans :premises (t187.t2 t187.t5))
(step t187.t7 (cl (= (forall ((?v2 Real)) (=> (member$ ?v2 ?v1) (forall ((?v3 Real)) (=> (and (member$ ?v3 ?v1) (= (fun_app$ ?v0 ?v2) (fun_app$ ?v0 ?v3))) (= ?v2 ?v3))))) (forall ((?v2 Real) (BOUND_VARIABLE_2117 Real)) (or (not (member$ ?v2 ?v1)) (not (member$ BOUND_VARIABLE_2117 ?v1)) (not (= (fun_app$ ?v0 ?v2) (fun_app$ ?v0 BOUND_VARIABLE_2117))) (= ?v2 BOUND_VARIABLE_2117))))) :rule trans :premises (t187.t1 t187.t6))
(step t187.t8 (cl (= (= (inj_on$ ?v0 ?v1) (forall ((?v2 Real)) (=> (member$ ?v2 ?v1) (forall ((?v3 Real)) (=> (and (member$ ?v3 ?v1) (= (fun_app$ ?v0 ?v2) (fun_app$ ?v0 ?v3))) (= ?v2 ?v3)))))) (= (inj_on$ ?v0 ?v1) (forall ((?v2 Real) (BOUND_VARIABLE_2117 Real)) (or (not (member$ ?v2 ?v1)) (not (member$ BOUND_VARIABLE_2117 ?v1)) (not (= (fun_app$ ?v0 ?v2) (fun_app$ ?v0 BOUND_VARIABLE_2117))) (= ?v2 BOUND_VARIABLE_2117)))))) :rule cong :premises (t187.t0 t187.t7))
(step t187 (cl @p_368) :rule bind)
(step t188 (cl @p_358) :rule resolution :premises (t186 t187 a83) :args (@p_368 @p_26 @p_96 @p_26))
(step t189 (cl @p_354) :rule resolution :premises (t185 t188) :args (@p_358 @p_26))
(step t190 (cl @p_355) :rule resolution :premises (t184 a14 t189) :args (@p_16 @p_14 @p_354 @p_26))
(step t191 (cl @p_365) :rule resolution :premises (t182 t183 t190) :args (@p_364 @p_26 @p_355 @p_26))
(step t192 (cl @p_497 @p_486) :rule or :premises (t147))
(step t193 (cl @p_499 @p_501 @p_498) :rule equiv_pos2)
(anchor :step t194 :args ((?v0 Real) (:= (?v0 Real) ?v0)))
(step t194.t0 (cl (= (fun_app$ uu$ ?v0) (fun_app$ uu$ ?v0))) :rule refl)
(step t194.t1 (cl @p_502) :rule refl)
(step t194.t2 (cl @p_503) :rule refl)
(step t194.t3 (cl (= (- 1.0 ?v0) (+ 1.0 (* -1/1 ?v0)))) :rule hole)
(step t194.t4 (cl @p_120) :rule refl)
(step t194.t5 (cl (= (* -1/1 ?v0) (* -1 ?v0))) :rule hole)
(step t194.t6 (cl (= (+ 1.0 (* -1/1 ?v0)) (+ 1.0 (* -1 ?v0)))) :rule cong :premises (t194.t4 t194.t5))
(step t194.t7 (cl (= (+ 1.0 (* -1 ?v0)) (+ 1 (* -1 ?v0)))) :rule hole)
(step t194.t8 (cl (= (+ 1.0 (* -1/1 ?v0)) (+ 1 (* -1 ?v0)))) :rule trans :premises (t194.t6 t194.t7))
(step t194.t9 (cl (= (- 1.0 ?v0) (+ 1 (* -1 ?v0)))) :rule trans :premises (t194.t3 t194.t8))
(step t194.t10 (cl (= (fun_app$ x_coord$ (- 1.0 ?v0)) (fun_app$ x_coord$ (+ 1 (* -1 ?v0))))) :rule cong :premises (t194.t2 t194.t9))
(step t194.t11 (cl (= (* 2.0 (fun_app$ x_coord$ (- 1.0 ?v0))) (* 2.0 (fun_app$ x_coord$ (+ 1 (* -1 ?v0)))))) :rule cong :premises (t194.t1 t194.t10))
(step t194.t12 (cl (= (* 2.0 (fun_app$ x_coord$ (+ 1 (* -1 ?v0)))) (* 2 (fun_app$ x_coord$ (+ 1 (* -1 ?v0)))))) :rule hole)
(step t194.t13 (cl (= (* 2.0 (fun_app$ x_coord$ (- 1.0 ?v0))) (* 2 (fun_app$ x_coord$ (+ 1 (* -1 ?v0)))))) :rule trans :premises (t194.t11 t194.t12))
(step t194.t14 (cl (= (= (fun_app$ uu$ ?v0) (* 2.0 (fun_app$ x_coord$ (- 1.0 ?v0)))) (= (fun_app$ uu$ ?v0) (* 2 (fun_app$ x_coord$ (+ 1 (* -1 ?v0))))))) :rule cong :premises (t194.t0 t194.t13))
(step t194 (cl @p_500) :rule bind)
(step t195 (cl @p_498) :rule resolution :premises (t193 t194 a0) :args (@p_500 @p_26 @p_0 @p_26))
(step t196 (cl @p_497 @p_489) :rule or :premises (t148))
(step t197 (cl @p_483 @p_345 @p_497) :rule resolution :premises (t180 t181 t192 t196) :args (@p_349 @p_26 @p_486 @p_26 @p_489 @p_26))
(step t198 (cl @p_393 @p_345 @p_497) :rule resolution :premises (t179 t197) :args (@p_483 @p_26))
(step t199 (cl @p_328 @p_385 @p_378 @p_392) :rule reordering :premises (t176))
(step t200 (cl @p_345 @p_316) :rule or_neg :args (3))
(step t201 (cl @p_378 @p_392 @p_385 @p_345) :rule resolution :premises (t177 t178 t199 t200) :args (@p_324 @p_26 @p_328 @p_26 @p_317 @p_14))
(step t202 (cl) :rule resolution :premises (t201 t198 t195 t191 t83 t71 t69) :args (@p_393 @p_26 @p_498 @p_26 @p_345 @p_14 @p_379 @p_26 @p_386 @p_26 @p_430 @p_26))
