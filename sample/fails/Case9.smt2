; --full-saturate-quant --inst-when=full-last-call --inst-no-entail --term-db-mode=relevant --multi-trigger-linear --no-statistics --random-seed=1 --lang=smt2 --continued-execution --tlimit 30000
(set-option :produce-unsat-cores true)
(set-logic AUFLIA)
(declare-sort Nat$ 0)
(declare-sort V_set$ 0)
(declare-sort S_v_tm$ 0)
(declare-sort S_nat_fun$ 0)
(declare-sort S_enat_fun$ 0)
(declare-sort V_enat_fun$ 0)
(declare-sort V_s_set_fun$ 0)
(declare-sort S_v_tm_bool_fun$ 0)
(declare-sort S_s_bool_fun_fun$ 0)
(declare-sort S_v_tm_s_v_tm_bool_fun_fun$ 0)
(declare-sort S_s_v_tm_s_v_tm_bool_fun_fun_s_v_tm_list_s_v_tm_list_bool_fun_fun_fun_fun$ 0)
(declare-fun i$ () Nat$)
(declare-fun u$ () S_v_tm$)
(declare-fun gt$ (V_s_set_fun$ S_s_bool_fun_fun$ Nat$ S_s_v_tm_s_v_tm_bool_fun_fun_s_v_tm_list_s_v_tm_list_bool_fun_fun_fun_fun$ S_enat_fun$ S_nat_fun$ S_v_tm$ S_v_tm$) Bool)
(declare-fun k2$ () Nat$)
(declare-fun uu$ () S_v_tm_s_v_tm_bool_fun_fun$)
(declare-fun bot$ () V_set$)
(declare-fun one$ () Nat$)
(declare-fun uua$ () S_v_tm_s_v_tm_bool_fun_fun$)
(declare-fun extf$ () S_s_v_tm_s_v_tm_bool_fun_fun_s_v_tm_list_s_v_tm_list_bool_fun_fun_fun_fun$)
(declare-fun less$ (Nat$ Nat$) Bool)
(declare-fun plus$ (Nat$ Nat$) Nat$)
(declare-fun size$ (S_v_tm$) Nat$)
(declare-fun vars$ (S_v_tm$) V_set$)
(declare-fun wary$ (S_enat_fun$ V_enat_fun$ S_v_tm$) Bool)
(declare-fun delta$ () Nat$)
(declare-fun minus$ (Nat$ Nat$) Nat$)
(declare-fun gt_sym$ () S_s_bool_fun_fun$)
(declare-fun wt_sym$ () S_nat_fun$)
(declare-fun fun_app$ (S_v_tm_bool_fun$ S_v_tm$) Bool)
(declare-fun fun_app$a (S_v_tm_s_v_tm_bool_fun_fun$ S_v_tm$) S_v_tm_bool_fun$)
(declare-fun arity_sym$ () S_enat_fun$)
(declare-fun arity_var$ () V_enat_fun$)
(declare-fun worst_chain$ (S_v_tm_s_v_tm_bool_fun_fun$ S_v_tm_s_v_tm_bool_fun_fun$ Nat$) S_v_tm$)
(declare-fun ground_heads_var$ () V_s_set_fun$)
(assert (! (forall ((?v0 S_v_tm$) (?v1 S_v_tm$)) (! (= (fun_app$ (fun_app$a uu$ ?v0) ?v1) (and (= (vars$ ?v0) bot$) (and (wary$ arity_sym$ arity_var$ ?v0) (and (wary$ arity_sym$ arity_var$ ?v1) (gt$ ground_heads_var$ gt_sym$ delta$ extf$ arity_sym$ wt_sym$ ?v0 ?v1))))) :pattern ((fun_app$ (fun_app$a uu$ ?v0) ?v1)))) :named a0))
(assert (! (forall ((?v0 S_v_tm$) (?v1 S_v_tm$)) (! (= (fun_app$ (fun_app$a uua$ ?v0) ?v1) (less$ (size$ ?v1) (size$ ?v0))) :pattern ((fun_app$ (fun_app$a uua$ ?v0) ?v1)))) :named a1))
(assert (! (not (and (wary$ arity_sym$ arity_var$ (worst_chain$ uu$ uua$ (minus$ (plus$ i$ k2$) one$))) (and (wary$ arity_sym$ arity_var$ u$) (gt$ ground_heads_var$ gt_sym$ delta$ extf$ arity_sym$ wt_sym$ (worst_chain$ uu$ uua$ (minus$ (plus$ i$ k2$) one$)) u$)))) :named a2))
(assert (! (and (wary$ arity_sym$ arity_var$ (worst_chain$ uu$ uua$ (minus$ (plus$ i$ k2$) one$))) (and (wary$ arity_sym$ arity_var$ (worst_chain$ uu$ uua$ (plus$ i$ k2$))) (gt$ ground_heads_var$ gt_sym$ delta$ extf$ arity_sym$ wt_sym$ (worst_chain$ uu$ uua$ (minus$ (plus$ i$ k2$) one$)) (worst_chain$ uu$ uua$ (plus$ i$ k2$))))) :named a3))
(assert (! (forall ((?v0 S_v_tm$) (?v1 S_v_tm$) (?v2 S_v_tm$)) (=> (and (wary$ arity_sym$ arity_var$ ?v0) (and (wary$ arity_sym$ arity_var$ ?v1) (and (wary$ arity_sym$ arity_var$ ?v2) (and (gt$ ground_heads_var$ gt_sym$ delta$ extf$ arity_sym$ wt_sym$ ?v0 ?v1) (gt$ ground_heads_var$ gt_sym$ delta$ extf$ arity_sym$ wt_sym$ ?v1 ?v2))))) (gt$ ground_heads_var$ gt_sym$ delta$ extf$ arity_sym$ wt_sym$ ?v0 ?v2))) :named a4))
(assert (! (and (wary$ arity_sym$ arity_var$ (worst_chain$ uu$ uua$ (plus$ i$ k2$))) (and (wary$ arity_sym$ arity_var$ u$) (gt$ ground_heads_var$ gt_sym$ delta$ extf$ arity_sym$ wt_sym$ (worst_chain$ uu$ uua$ (plus$ i$ k2$)) u$))) :named a5))
(check-sat)
