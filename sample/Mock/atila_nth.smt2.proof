(assume a0 (or a b c d))
(assume a1 (or b (not d)))
(assume a2 (not b))
(assume a3 (or b (not a)))
(assume a4 (or (not b) (not c)))
(assume a5 (or a b))
(assume a6 (or c (not a)))
(step t1 (cl a b c d) :rule or :premises (a0))
(step t2 (cl b (not d)) :rule or :premises (a1))
(step t3 (cl b (not a)) :rule or :premises (a3))
(step t4 (cl (not b) (not c)) :rule or :premises (a4))
(step t5 (cl a b) :rule or :premises (a5))
(step t6 (cl c (not a)) :rule or :premises (a6))
(step t7 (cl a b c) :rule resolution :premises (t1 t2) :args(d true))
(step t8 (cl c) :rule resolution :premises (t7 a2 t6) :args(b true a true))
(step t9 (cl a (not c)) :rule resolution :premises (t4 t5) :args(b false))
(step t10 (cl b (not c)) :rule resolution :premises (t9 t3) :args(a true))
(step t11 (cl (not c)) :rule resolution :premises (t10 a2) :args(b true))
(step t12 (cl) :rule resolution :premises(t11 t8) :args(c false))
