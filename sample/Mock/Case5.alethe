(assume a0 a)
(assume a1 (or a (not c)))
(assume a2 (or b c d))
(assume a3 (or b (not c)))
(assume a4 (or c d (not b) (not e)))
(assume a5 (or c (not a) (not d)))
(assume a6 (or d f))
(assume a7 (or e (not a) (not b)))
(assume a8 (or f (not c)))
(assume a9 (or (not a) (not f)))
(step t1 (cl a (not c)) :rule or :premises (a1))
(step t2 (cl b c d) :rule or :premises (a2))
(step t3 (cl b (not c)) :rule or :premises (a3))
(step t4 (cl c d (not b) (not e)) :rule or :premises (a4))
(step t5 (cl c (not a) (not d)) :rule or :premises (a5))
(step t6 (cl d f) :rule or :premises (a6))
(step t7 (cl e (not a) (not b)) :rule or :premises (a7))
(step t8 (cl f (not c)) :rule or :premises (a8))
(step t9 (cl (not a) (not f)) :rule or :premises (a9))
(step t10 (cl c (not d)) :rule resolution :premises (a0 t5) :args (a true))
(step t11 (cl c (not b) (not e)) :rule resolution :premises (t10 t4) :args (d false))
(step t12 (cl b) :rule resolution :premises (t2 t10 t3) :args (d true c true))
(step t13 (cl e (not a)) :rule resolution :premises (t7 t12) :args (b false))
(step t14 (cl e) :rule resolution :premises (t13 a0) :args (a false))
(step t15 (cl c (not e)) :rule resolution :premises (t12 t11) :args (b true))
(step t16 (cl a (not e)) :rule resolution :premises (t1 t15) :args (c false))
(step t17 (cl (not e) (not f)) :rule resolution :premises (t9 t16) :args (a false))
(step t18 (cl f (not d)) :rule resolution :premises (t8 t10) :args (c false))
(step t19 (cl f) :rule resolution :premises (t18 t6) :args (d false))
(step t20 (cl (not e)) :rule resolution :premises (t19 t17) :args (f true))
(step t21 (cl) :rule resolution :premises (t14 t20) :args (e true))
