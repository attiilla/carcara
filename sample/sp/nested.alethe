(assume a0 z)
(assume a1 (not a))
(assume a2 (or h (not b) (not d) (not f)))
(assume a3 (or d (not f) g))
(assume a4 (or a (not b) (not c) g))
(assume a5 (or y (not h)))
(assume a6 (or (not b) (not h) (not y)))
(assume a7 (or b c (not a) (not h)))
(assume a8 (or f (not c) (not h)))
(assume a9 (or (not f) (not h)))
(assume a10 (or y (not g)))
(assume a11 (or (not c) (not z)))
(assume a12 (or b c (not z)))
(assume a13 (or a c f))
(assume a14 (or (not b) (not c) (not g)))
(assume a15 (or c w))
(assume a16 (or (not w) (not g)))
(step t0 (cl h (not b) (not d) (not f)) :rule or :premises (a2))
(step t1 (cl d (not f) g) :rule or :premises (a3))
(step t2 (cl a (not b) (not c) g) :rule or :premises (a4))
(step t3 (cl y (not h)) :rule or :premises (a5))
(step t4 (cl (not b) (not h) (not y)) :rule or :premises (a6))
(step t5 (cl b c (not a) (not h)) :rule or :premises (a7))
(step t6 (cl f (not c) (not h)) :rule or :premises (a8))
(step t7 (cl (not f) (not h)) :rule or :premises (a9))
(step t8 (cl y (not g)) :rule or :premises (a10))
(step t9 (cl (not c) (not z)) :rule or :premises (a11))
(step t10 (cl b c (not z)) :rule or :premises (a12))
(step t11 (cl a c f) :rule or :premises (a13))
(step t12 (cl (not b) (not c) (not g)) :rule or :premises (a14))
(step t13 (cl c w) :rule or :premises (a15))
(step t14 (cl (not w) (not g)) :rule or :premises (a16))
(step t15 (cl h (not b) (not f) g) :rule resolution :premises (t0 t1) :args (d false))
(step t16 (cl a c h (not b) g) :rule resolution :premises (t15 t11) :args (f false))
(step t17 (cl c h (not b) g) :rule resolution :premises (t16 a1) :args (a true))
(step t18 (cl (not b) (not c) g) :rule resolution :premises (a1 t2) :args (a false))
(step t18_5 (cl y (not b)) :rule resolution :premises (t17 t18 t8 t3) :args (c true g true h true))
(step t19 (cl (not b) (not h)) :rule resolution :premises (t18_5 t4) :args (y true))
(anchor :step t20)
(assume t20.a0 (or a b))
(step t20.t0 (cl a b) :rule or :premises (t20.a0))
(step t20.t1 (cl b) :rule resolution :premises (t20.t0 a1) :args (a true))
(step t20.t2 (cl a (not c) g) :rule resolution :premises (t2 t20.t1) :args (b false))
(step t20.t3 (cl a c h g) :rule resolution :premises (t20.t1 t16) :args (b true))
(step t20.t4 (cl c h g) :rule resolution :premises (a1 t20.t3) :args (a false))
(anchor :step t20.t5)
(assume t20.t5.a0 g)
(assume t20.t5.a1 (or (not b) (not y) (not g)))
(assume t20.t5.a2 (or c (not y)))
(step t20.t5.t0 (cl (not b) (not y) (not g)) :rule or :premises (t20.t5.a1))
(step t20.t5.t1 (cl c (not y)) :rule or :premises (t20.t5.a2))
(step t20.t5.t2 (cl (not y) (not g)) :rule resolution :premises (t20.t5.t0 t20.t1) :args (b false))
(step t20.t5.t3 (cl a c h (not y)) :rule resolution :premises (t20.t5.t2 t20.t3) :args (g false))
(step t20.t5.t4 (cl y) :rule resolution :premises (t20.t5.a0 t8) :args (g true))
(step t20.t5.t5 (cl a c h) :rule resolution :premises (t20.t5.t3 t20.t5.t4) :args (y false))
(step t20.t5.t6 (cl) :rule resolution :premises (t20.t5.t5 a1 t3 t20.t5.t1 t9 a0) :args (a true h true y true c true z false))
(step t20.t5.t7 (cl false) :rule hole :premises (t20.t5.t6))
(step t20.t5 (cl (not g) (not (or (not b) (not y) (not g))) (not (or c (not y))) false) :rule subproof :discharge (t20.t5.a0 t20.t5.a1 t20.t5.a2))
(step t20.t6 (cl (not false)) :rule false)
(step t20.t7 (cl (or (not b) (not y) (not g)) (not (not b))) :rule or_neg :args (1))
(step t20.t8 (cl (not (not (not b))) b) :rule not_not)
(step t20.t9 (cl (or c (not y)) (not c)) :rule or_neg :args (1))
(step t20.t10 (cl (or (not b) (not y) (not g)) b) :rule resolution :premises (t20.t7 t20.t8) :args ((not (not b)) true))
(step t20.t11 (cl (not g) b (not c)) :rule resolution :premises (t20.t5 t20.t6 t20.t10 t20.t9) :args (false true (or (not b) (not y) (not g)) false (or c (not y)) false))
(step t20.t12 (cl (not g)) :rule resolution :premises (t20.t11 t12 t13 t14) :args (b true c false w true))
(step t20.t13 (cl a (not c)) :rule resolution :premises (t20.t12 t20.t2) :args (g false))
(step t20.t14 (cl c h) :rule resolution :premises (t20.t12 t20.t4) :args (g false))
(step t20.t15 (cl h) :rule resolution :premises (t20.t13 t20.t14 a1) :args (c false a true))
(step t20 (cl (not (or a b)) h) :rule subproof :discharge (t20.a0))
(step t21 (cl (or a b) (not b)) :rule or_neg :args (2))
(step t22 (cl h (not b)) :rule resolution :premises (t20 t21) :args ((or a b) false))
(step t23 (cl (not b)) :rule resolution :premises (t19 t22) :args (h false))
(step t24 (cl) :rule resolution :premises (t23 t10 t9 a0) :args (b false c true z false))